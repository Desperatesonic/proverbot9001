Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearright.
-----
Section Euclid.
-----
Context `{Ax:euclidean_neutral_ruler_compass}.
-----
Lemma lemma_supplementofright : \n   forall A B C D F, \n   Supp A B C D F -> Per A B C ->\n   Per F B D /\ Per D B F.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.

*****
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
forall (A B C D F : Point) (_ : Supp A B C D F) (_ : Per A B C), and (Per F B D) (Per D B F)
+++++
Proof.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.

*****
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
forall (A B C D F : Point) (_ : Supp A B C D F) (_ : Per A B C), and (Per F B D) (Per D B F)
+++++
intros.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.

*****
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert ((Out B C D /\ BetS A B F)).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).

*****
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Out B C D) (BetS A B F)
+++++
conclude_def Supp .
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).

*****
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.

*****
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (Col A B F).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).

*****
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Col A B F
+++++
conclude_def Col .
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).

*****
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.

*****
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (neq B F).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).

*****
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
neq B F
+++++
forward_using lemma_betweennotequal.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).

*****
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.

*****
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (neq F B).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).

*****
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
neq F B
+++++
conclude lemma_inequalitysymmetric.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).

*****
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.

*****
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (Per F B C).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).

*****
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Per F B C
+++++
conclude lemma_collinearright.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).

*****
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.

*****
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (Per F B D).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).

*****
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Per F B D
+++++
conclude lemma_8_3.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).

*****
H6 : Per F B D
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).
idtac.

*****
H6 : Per F B D
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
assert (Per D B F).
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).
idtac.
assert (Per D B F).

*****
H6 : Per F B D
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Per D B F
+++++
conclude lemma_8_2.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).
idtac.
assert (Per D B F).

*****
H7 : Per D B F
H6 : Per F B D
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
idtac.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).
idtac.
assert (Col A B F).
idtac.
assert (neq B F).
idtac.
assert (neq F B).
idtac.
assert (Per F B C).
idtac.
assert (Per F B D).
idtac.
assert (Per D B F).
idtac.

*****
H7 : Per D B F
H6 : Per F B D
H5 : Per F B C
H4 : neq F B
H3 : neq B F
H2 : Col A B F
H1 : and (Out B C D) (BetS A B F)
H0 : Per A B C
H : Supp A B C D F
A,B,C,D,F : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
and (Per F B D) (Per D B F)
+++++
close.
-----
Lemma lemma_supplementofright : forall A B C D F, Supp A B C D F -> Per A B C -> Per F B D /\\ Per D B F.
Proof.
intros.
assert ((Out B C D /\\ BetS A B F)).

*****

*****

+++++
Qed.
-----
End Euclid.
-----
