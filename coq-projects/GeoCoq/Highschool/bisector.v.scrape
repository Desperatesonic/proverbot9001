Require Export GeoCoq.Tarski_dev.Ch13_1.
-----
Require Export GeoCoq.Highschool.triangles.
-----
Section Bisector.
-----
Context `{TE:Tarski_euclidean}.
-----
Lemma bisector_existence : forall A B C,  A <> B -> B <> C ->\nexists E,  InAngle E A B C /\ CongA A B E E B C.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C : Tpoint) (_ : not (eq A B)) (_ : not (eq B C)), ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
Proof.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C : Tpoint) (_ : not (eq A B)) (_ : not (eq B C)), ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
intros A B C HAB HBC.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.

*****
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (col_dec A B C) as [HCOL | HNCOL].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (out_dec B A C) as [HOUT | HNOUT].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
exists C.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle C A B C) (CongA A B C C B C)
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle C A B C
+++++
apply (out_in_angle A B C C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (out_in_angle A B C C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (out_in_angle A B C C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C A
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (out_in_angle A B C C).
auto.

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C A
+++++
apply (l6_6 B A C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (out_in_angle A B C C).
auto.
apply (l6_6 B A C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B C C B C
+++++
apply (l11_21_b A B C C B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (l11_21_b A B C C B C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (l11_21_b A B C C B C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (l11_21_b A B C C B C).
auto.

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C C
+++++
apply (out_trivial B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
exists C.
split.
apply (l11_21_b A B C C B C).
auto.
apply (out_trivial B C).

*****
HOUT : Out B A C
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].

*****
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).

*****
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (perp_exists B A C) as [E HPerp].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].

*****
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A C)
+++++
intro HEQAC.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
intro HEQAC.

*****
HEQAC : eq A C
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
intro HEQAC.
subst.

*****
HCOL : Col C B C
HNOUT : not (Out B C C)
H : Bet C B C
HBC : not (eq B C)
HAB : not (eq C B)
B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HAB.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
intro HEQAC.
subst.
elim HAB.

*****
HCOL : Col C B C
HNOUT : not (Out B C C)
H : Bet C B C
HBC : not (eq B C)
HAB : not (eq C B)
B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq C B
+++++
apply (between_identity C B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
intro HEQAC.
subst.
elim HAB.
apply (between_identity C B).

*****
HCOL : Col C B C
HNOUT : not (Out B C C)
H : Bet C B C
HBC : not (eq B C)
HAB : not (eq C B)
B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C B C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
exists E.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle E A B C) (CongA A B E E B C)
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle E A B C
+++++
unfold InAngle.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq A B)) (and (not (eq C B)) (and (not (eq E B)) (ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X E))))))
+++++
repeat split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
assert_diffs.

*****
H2 : not (eq B E)
H0 : not (eq A C)
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
assert_diffs.

*****
H2 : not (eq B E)
H0 : not (eq A C)
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
assert_diffs.

*****
H2 : not (eq B E)
H0 : not (eq A C)
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X E)))
+++++
exists B.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
exists B.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Bet A B C) (or (eq B B) (Out B B E))
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
exists B.
split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
unfold InAngle.
repeat split.
exists B.
split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (eq B B) (Out B B E)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
assert (Perp B E A B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E A B
+++++
apply (perp_col1 B E A C B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
apply (perp_col1 B E A C B).

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
apply (perp_col1 B E A C B).

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E A C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
apply (perp_col1 B E A C B).

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
apply (perp_col1 B E A C B).
auto.

*****
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C B
+++++
Col.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
assert (Perp B E C B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E C B
+++++
apply (perp_col1 B E C A B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E C A
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E C A
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.
auto.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E C A
+++++
Perp.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).

*****
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C A B
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C A B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.
auto.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C A B
+++++
Perp.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
apply (perp_col1 B E C A B).
assert_diffs.
auto.
Perp.

*****
H3 : not (eq B E)
H1 : not (eq A C)
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C A B
+++++
Col.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).

*****
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.

*****
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
assert (Per E B A).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).

*****
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per E B A
+++++
apply (perp_per_1 B E A).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
apply (perp_per_1 B E A).

*****
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E A B
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
apply (perp_per_1 B E A).
assert_diffs.

*****
H4 : not (eq B E)
H2 : not (eq A C)
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E A B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).

*****
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.

*****
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
assert (Per E B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).

*****
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per E B C
+++++
apply (perp_per_2 B E C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
apply (perp_per_2 B E C).

*****
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E B C
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
apply (perp_per_2 B E C).
assert_diffs.

*****
H6 : not (eq B E)
H4 : not (eq E A)
H3 : not (eq A C)
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E B C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
apply (perp_per_2 B E C).
assert_diffs.
auto.

*****
H6 : not (eq B E)
H4 : not (eq E A)
H3 : not (eq A C)
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B E B C
+++++
Perp.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
assert (CongA E B A E B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA E B A E B C
+++++
apply (l11_16 E B A E B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per E B A
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).
auto.

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).
auto.
assert_diffs.

*****
H8 : not (eq B E)
H6 : not (eq E A)
H5 : not (eq E C)
H4 : not (eq A C)
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per E B C
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).
auto.

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).
auto.
assert_diffs.

*****
H8 : not (eq B E)
H6 : not (eq E A)
H5 : not (eq E C)
H4 : not (eq A C)
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
apply (l11_16 E B A E B C).

*****
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).

*****
H4 : CongA E B A E B C
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (out_dec B A C) as [HOUT | HNOUT].
assert (Bet A B C) by(apply (not_out_bet A B C);auto).
destruct (perp_exists B A C) as [E HPerp].
exists E.
split.
assert (Perp B E A B).
idtac.
assert (Perp B E C B).
idtac.
assert (Per E B A).
idtac.
assert (Per E B C).
idtac.
assert (CongA E B A E B C).
idtac.

*****
H4 : CongA E B A E B C
H3 : Per E B C
H2 : Per E B A
H1 : Perp B E C B
H0 : Perp B E A B
HPerp : Perp B E A C
E : Tpoint
H : Bet A B C
HNOUT : not (Out B A C)
HCOL : Col A B C
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B E E B C
+++++
CongA.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].

*****
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].

*****
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct (midpoint_existence A' C') as [I HI].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
assert (Cong B C' A' B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B C' A' B
+++++
apply l2_11 with A C.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
apply l2_11 with A C.

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B A C'
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
apply l2_11 with A C.

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' C B
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
apply l2_11 with A C.
Cong.

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' C B
+++++
Between.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
apply l2_11 with A C.

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B A A' C
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
apply l2_11 with A C.

*****
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A C' C B
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).

*****
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.

*****
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
assert (CongA A' C' B C' A' B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' C' B C' A' B
+++++
apply (isosceles_conga C' B A').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' A')
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' A')
+++++
intro.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
intro.

*****
H4 : eq C' A'
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
intro.
subst.

*****
H3 : not (eq C A')
H1 : not (eq B A')
H2 : not (eq A A')
H0 : not (eq B A')
H5 : not (eq A C)
HI : Midpoint I A' A'
H : Cong B A' A' B
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
HC'1 : Bet B A A'
HC'2 : Cong A A' B C
A' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
intro.
subst.
treat_equalities.

*****
H2 : not (eq A I)
H1 : not (eq B I)
H3 : not (eq C I)
H5 : not (eq A C)
HC'2 : Cong A I B C
HC'1 : Bet B A I
HA'1 : Bet B C I
HA'2 : Cong C I B A
I : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert_cols.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
intro.
subst.
treat_equalities.
assert_cols.

*****
H0 : Col B C I
H : Col B A I
H2 : not (eq A I)
H1 : not (eq B I)
H3 : not (eq C I)
H5 : not (eq A C)
HC'2 : Cong A I B C
HC'1 : Bet B A I
HA'1 : Bet B C I
HA'2 : Cong C I B A
I : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCOL.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
intro.
subst.
treat_equalities.
assert_cols.
apply HNCOL.

*****
H0 : Col B C I
H : Col B A I
H2 : not (eq A I)
H1 : not (eq B I)
H3 : not (eq C I)
H5 : not (eq A C)
HC'2 : Cong A I B C
HC'1 : Bet B A I
HA'1 : Bet B C I
HA'2 : Cong C I B A
I : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles C' B A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles C' B A'
+++++
unfold isosceles.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
apply (isosceles_conga C' B A').
auto.
unfold isosceles.

*****
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong C' B B A'
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : Midpoint I A' C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
unfold Midpoint in *.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : and (Bet A' I C') (Cong A' I I C')
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HI : and (Bet A' I C') (Cong A' I I C')
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
destruct HI as [HBET HCONG].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
assert (HTRI : Cong I B I B /\ (I <> B -> CongA C' I B A' I B /\ CongA C' B I A' B I)).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Cong I B I B) (forall _ : not (eq I B), and (CongA C' I B A' I B) (CongA C' B I A' B I))
+++++
apply (l11_49 I C' B I A' B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I C' B I A' B
+++++
apply (out_conga A' C' B C' A' B I B I B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' C' B C' A' B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' A' I
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' A' I
+++++
apply (l6_6 C' I A').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' I A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' I A'
+++++
apply (bet_out C' I A').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I C')
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I C')
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I C')
+++++
intro.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.
intro.

*****
H7 : eq I C'
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.
intro.
subst.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HBET : Bet A' C' C'
HCONG : Cong A' C' C' C'
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.
intro.
subst.
treat_equalities.

*****
H4 : CongA A' A' B A' A' B
H6 : not (eq A' A')
H3 : not (eq C A')
H2 : not (eq A A')
H0 : not (eq B A')
H5 : not (eq A C)
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
HC'1 : Bet B A A'
HC'2 : Cong A A' B C
A' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim H6.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.
intro.
subst.
treat_equalities.
elim H6.

*****
H4 : CongA A' A' B A' A' B
H6 : not (eq A' A')
H3 : not (eq C A')
H2 : not (eq A A')
H0 : not (eq B A')
H5 : not (eq A C)
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
HC'1 : Bet B A A'
HC'2 : Cong A A' B C
A' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq A' A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' I A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' I A'
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' I A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 C' I A').
auto.
apply (bet_out C' I A').
auto.
assert_diffs.
auto.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' I A'
+++++
Between.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' B B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' B B
+++++
apply (out_trivial C' B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (out_trivial C' B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C')
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' C' I
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' C' I
+++++
apply (l6_6 A' I C').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' I C'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' I C'
+++++
apply (bet_out A' I C').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I A')
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I A')
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.
assert_diffs.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I A')
+++++
intro.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.
assert_diffs.
intro.

*****
H7 : eq I A'
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.
assert_diffs.
intro.
subst.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HBET : Bet A' A' C'
HCONG : Cong A' A' A' C'
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.
assert_diffs.
intro.
subst.
treat_equalities.

*****
H4 : CongA A' A' B A' A' B
H6 : not (eq A' A')
H3 : not (eq C A')
H2 : not (eq A A')
H0 : not (eq B A')
H5 : not (eq A C)
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
HC'1 : Bet B A A'
HC'2 : Cong A A' B C
A' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim H6.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').
auto.
assert_diffs.
intro.
subst.
treat_equalities.
elim H6.

*****
H4 : CongA A' A' B A' A' B
H6 : not (eq A' A')
H3 : not (eq C A')
H2 : not (eq A A')
H0 : not (eq B A')
H5 : not (eq A C)
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
HC'1 : Bet B A A'
HC'2 : Cong A A' B C
A' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq A' A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
apply (l6_6 A' I C').
auto.
apply (bet_out A' I C').

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' I C'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' B B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' B B
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
assert_diffs.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' B B
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
assert_diffs.
auto.

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A' B B
+++++
apply (out_trivial A' B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).
apply (out_conga A' C' B C' A' B I B I B).
auto.
assert_diffs.
auto.
apply (out_trivial A' B).

*****
H6 : not (eq A' C')
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B A')
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong C' I A' I
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
apply (l11_49 I C' B I A' B).

*****
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong C' B A' B
+++++
Cong.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).

*****
HTRI : and (Cong I B I B)\n (forall _ : not (eq I B),\n and (CongA C' I B A' I B) (CongA C' B I A' B I))
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun E : Tpoint => and (InAngle E A B C) (CongA A B E E B C))
+++++
exists I.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.

*****
HTRI : and (Cong I B I B)\n (forall _ : not (eq I B),\n and (CongA C' I B A' I B) (CongA C' B I A' B I))
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle I A B C) (CongA A B I I B C)
+++++
destruct HTRI as [HCONGIB HIBO].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].

*****
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle I A B C) (CongA A B I I B C)
+++++
assert (I <> B).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).

*****
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
intro.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
intro.

*****
H6 : eq I B
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
intro.
elim HNCOL.

*****
H6 : eq I B
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle I A B C) (CongA A B I I B C)
+++++
idtac.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle I A B C) (CongA A B I I B C)
+++++
assert (CongA A B I I B C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
apply (out_conga C' B I I B A' A I I C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA C' B I I B A'
+++++
apply (conga_right_comm C' B I A' B I).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (conga_right_comm C' B I A' B I).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA C' B I A' B I
+++++
apply HIBO.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (conga_right_comm C' B I A' B I).
apply HIBO.

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C' A
+++++
apply (l6_6 B A C').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B A C').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A C'
+++++
apply (bet_out B A C').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B A C').
apply (bet_out B A C').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
intuition.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B A C').
apply (bet_out B A C').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B A C'
+++++
assumption.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (out_trivial B I).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (out_trivial B I).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A' C
+++++
apply (l6_6 B C A').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B C A').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C A'
+++++
apply (bet_out B C A').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B C A').
apply (bet_out B C A').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
intuition.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
apply (out_conga C' B I I B A' A I I C).
apply (l6_6 B C A').
apply (bet_out B C A').

*****
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B C A'
+++++
assumption.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle I A B C) (CongA A B I I B C)
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I A B C
+++++
unfold InAngle.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq A B)) (and (not (eq C B)) (and (not (eq I B)) (ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I))))))
+++++
repeat split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
assert_diffs.

*****
H8 : not (eq A' C')
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
assert_diffs.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
assert_diffs.

*****
H8 : not (eq A' C')
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assumption.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I)))
+++++
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' I C'
+++++
apply (midpoint_bet A' I C').
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
apply (midpoint_bet A' I C').

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A' C'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
apply (midpoint_bet A' I C').
auto.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A' C'
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
apply (midpoint_bet A' I C').
auto.
split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' I C'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
apply (midpoint_bet A' I C').
auto.
split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A' I I C'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B A C'
+++++
Between.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].

*****
HIN1 : and (Bet I x1 B) (Bet A x1 A')
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I)))
+++++
destruct HIN1 as [HIN11 HIN12].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].

*****
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I)))
+++++
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].

*****
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A x1 A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].

*****
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B C A'
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].

*****
HIN2 : and (Bet x1 x2 B) (Bet C x2 A)
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I)))
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.

*****
HIN2 : and (Bet x1 x2 B) (Bet C x2 A)
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun X : Tpoint => and (Bet A X C) (or (eq X B) (Out B X I)))
+++++
exists x2.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.

*****
HIN2 : and (Bet x1 x2 B) (Bet C x2 A)
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Bet A x2 C) (or (eq x2 B) (Out B x2 I))
+++++
destruct HIN2 as [HIN21 HIN22].
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Bet A x2 C) (or (eq x2 B) (Out B x2 I))
+++++
split.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A x2 C
+++++
apply (Bet_cases A x2 C).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
apply (Bet_cases A x2 C).

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Bet A x2 C) (Bet C x2 A)
+++++
right.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
apply (Bet_cases A x2 C).
right.

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C x2 A
+++++
auto.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (eq x2 B) (Out B x2 I)
+++++
right.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
right.

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B x2 I
+++++
apply (bet_out B x2 I).
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
right.
apply (bet_out B x2 I).

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq x2 B)
+++++
intro.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
right.
apply (bet_out B x2 I).
intro.

*****
H8 : eq x2 B
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
right.
apply (bet_out B x2 I).
intro.
elim HNCOL.

*****
H8 : eq x2 B
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.
unfold InAngle.
repeat split.
destruct (inner_pasch A' B C' I A) as [x1 HIN1].
destruct HIN1 as [HIN11 HIN12].
destruct (inner_pasch A B A' x1 C) as [x2 HIN2].
auto.
exists x2.
destruct HIN2 as [HIN21 HIN22].
split.
right.
apply (bet_out B x2 I).

*****
HIN22 : Bet C x2 A
HIN21 : Bet x1 x2 B
x2 : Tpoint
HIN12 : Bet A x1 A'
HIN11 : Bet I x1 B
x1 : Tpoint
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B x2 I
+++++
bet.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (segment_construction B A B C ) as [C'[ HC'1 HC'2]].
destruct (segment_construction B C B A ) as [A' [HA'1 HA'2]].
destruct (midpoint_existence A' C') as [I HI].
assert (Cong B C' A' B).
idtac.
assert_diffs.
assert (CongA A' C' B C' A' B).
unfold Midpoint in *.
Cong.
destruct HI as [HBET HCONG].
assert (HTRI : Cong I B I B /\\ (I <> B -> CongA C' I B A' I B /\\ CongA C' B I A' B I)).
exists I.
destruct HTRI as [HCONGIB HIBO].
assert (I <> B).
idtac.
assert (CongA A B I I B C).
split.

*****
H7 : CongA A B I I B C
H6 : not (eq I B)
HIBO : forall _ : not (eq I B),\nand (CongA C' I B A' I B) (CongA C' B I A' B I)
HCONGIB : Cong I B I B
H4 : CongA A' C' B C' A' B
H3 : not (eq C A')
H2 : not (eq A C')
H1 : not (eq B C')
H0 : not (eq B A')
H5 : not (eq A C)
H : Cong B C' A' B
HCONG : Cong A' I I C'
HBET : Bet A' I C'
I : Tpoint
HA'2 : Cong C A' B A
HA'1 : Bet B C A'
A' : Tpoint
HC'2 : Cong A C' B C
HC'1 : Bet B A C'
C' : Tpoint
HNCOL : not (Col A B C)
HBC : not (eq B C)
HAB : not (eq A B)
A,B,C : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assumption.
-----
Lemma bisector_existence : forall A B C, A <> B -> B <> C -> exists E, InAngle E A B C /\\ CongA A B E E B C.
Proof.
intros A B C HAB HBC.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****

*****

+++++
Qed.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I ->\nCol A B H1 -> Col B C H2 -> CongA A B I I B C->\nPerp A B I H1 -> Perp B C I H2 -> H1 <> B /\ H2 <> B.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : CongA A B I I B C) (_ : Perp A B I H1) (_ : Perp B C I H2), and (not (eq H1 B)) (not (eq H2 B))
+++++
Proof.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : CongA A B I I B C) (_ : Perp A B I H1) (_ : Perp B C I H2), and (not (eq H1 B)) (not (eq H2 B))
+++++
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq H1 B)) (not (eq H2 B))
+++++
split.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
intro.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.

*****
H : eq H1 B
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per A B I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A B I
+++++
apply (perp_per_1 B A I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
apply (perp_per_1 B A I).

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
apply (perp_per_1 B A I).
auto.

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
assert_diffs.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
apply (perp_per_1 B A I).
auto.
assert_diffs.

*****
H6 : not (eq I B)
H4 : not (eq I H2)
H5 : not (eq A C)
H1 : not (eq B C)
H3 : not (eq A B)
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
apply (perp_per_1 B A I).
auto.
assert_diffs.
auto.

*****
H6 : not (eq I B)
H4 : not (eq I H2)
H5 : not (eq A C)
H1 : not (eq B C)
H3 : not (eq A B)
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
Perp.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col A C B).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C B
+++++
apply cop_per2__col with I.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I A C B
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
assert_diffs.

*****
H8 : not (eq I B)
H7 : not (eq I H2)
H0 : not (eq A I)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A B I
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per C B I
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per C B I
+++++
apply (l8_2 I B C).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l8_2 I B C).

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B C
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l8_2 I B C).
auto.

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B C
+++++
apply (l11_17 A B I I B C).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l8_2 I B C).
auto.
apply (l11_17 A B I I B C).

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A B I
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l8_2 I B C).
auto.
apply (l11_17 A B I I B C).

*****
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).

*****
H0 : Col A C B
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per A B I).
idtac.
assert (Col A C B).
elim HNCOL.

*****
H0 : Col A C B
H : Per A B I
HORTHC : Perp B C I H2
HORTHA : Perp A B I B
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
Col.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.

*****
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 B)
+++++
intro.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.

*****
H : eq H2 B
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.

*****
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per C B I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).

*****
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per C B I
+++++
apply (perp_per_1 B C I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
apply (perp_per_1 B C I).

*****
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I B
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).

*****
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.

*****
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per I B C).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).

*****
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B C
+++++
apply (l8_2 C B I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
apply (l8_2 C B I).

*****
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per C B I
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col A C B).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C B
+++++
apply cop_per2__col with I.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I A C B
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
assert_diffs.

*****
H8 : not (eq I H1)
H6 : not (eq I B)
H0 : not (eq C I)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A B I
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A B I
+++++
apply (l11_17 I B C A B I).
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l11_17 I B C A B I).

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B C
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l11_17 I B C A B I).

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B C A B I
+++++
auto.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.
Cop.
apply (l11_17 I B C A B I).
auto.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B C A B I
+++++
CongA.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
apply cop_per2__col with I.

*****
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per C B I
+++++
Cop.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).

*****
H2 : Col A C B
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.
intro.
subst.
assert (Per C B I).
idtac.
assert (Per I B C).
idtac.
assert (Col A C B).
elim HNCOL.

*****
H2 : Col A C B
H0 : Per I B C
H : Per C B I
HORTHC : Perp B C I B
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C B
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
Col.
-----
Lemma not_col_bfoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2 -> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC.
split.

*****

*****

+++++
Qed.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C ->\nCoplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C->\nPerp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : CongA A B I I B C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Out B H1 A), Out B H2 C
+++++
Proof.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : CongA A B I I B C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Out B H1 A), Out B H2 C
+++++
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (Acute H1 B I).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute H1 B I
+++++
apply (perp_out_acute H1 B I H1).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 H1
+++++
apply (out_trivial B H1).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (out_trivial B H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
apply (perp_col2 A B H1 B I H1).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (perp_col2 A B H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (perp_col2 A B H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (perp_col2 A B H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (perp_col2 A B H1 B I H1).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
apply (perp_out_acute H1 B I H1).
auto.
apply (perp_col2 A B H1 B I H1).
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (CongA H1 B I I B C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I I B C
+++++
apply (out_conga A B I I B C H1 I I C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
apply (l6_6 B H1 A).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (l6_6 B H1 A).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C C
+++++
apply (out_trivial B C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B C).

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B C).
auto.

*****
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
assert_diffs.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
apply (out_conga A B I I B C H1 I I C).
auto.
apply (out_trivial B C).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).

*****
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (Acute I B C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).

*****
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute I B C
+++++
apply (acute_conga__acute H1 B I I B C).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
apply (acute_conga__acute H1 B I I B C).

*****
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute H1 B I
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
apply (acute_conga__acute H1 B I I B C).

*****
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I I B C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).

*****
H3 : Acute I B C
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
idtac.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
idtac.

*****
H3 : Acute I B C
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
apply (acute_col_perp__out I B C H2).
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
idtac.
apply (acute_col_perp__out I B C H2).

*****
H3 : Acute I B C
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute I B C
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
idtac.
apply (acute_col_perp__out I B C H2).

*****
H3 : Acute I B C
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert (Acute H1 B I).
assert (CongA H1 B I I B C).
assert (Acute I B C).
idtac.
apply (acute_col_perp__out I B C H2).

*****
H3 : Acute I B C
H0 : CongA H1 B I I B C
H : Acute H1 B I
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUT1 : Out B H1 A
HORTHC : Perp B C I H2
HORTHA : Perp A B I H1
HCONGA : CongA A B I I B C
HCOL2 : Col B C H2
HCOL1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> CongA A B I I B C-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOL1 HCOL2 HCONGA HORTHA HORTHC HOUT1.
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****

*****

+++++
Qed.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I ->\nCol A B H1 -> Col B C H2-> Cong I H1 I H2->\nPerp A B I H1 -> Perp B C I H2 -> H1 <> B /\ H2 <> B.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : Cong I H1 I H2) (_ : Perp A B I H1) (_ : Perp B C I H2), and (not (eq H1 B)) (not (eq H2 B))
+++++
Proof.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : Coplanar A B C I) (_ : Col A B H1) (_ : Col B C H2) (_ : Cong I H1 I H2) (_ : Perp A B I H1) (_ : Perp B C I H2), and (not (eq H1 B)) (not (eq H2 B))
+++++
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.

*****
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq H1 B)) (not (eq H2 B))
+++++
assert (H1 <> B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).

*****
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
intro.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.

*****
H : eq H1 B
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.

*****
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (H2 <> B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).

*****
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 B)
+++++
intro.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.

*****
H : eq H2 B
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col B A C).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A C
+++++
apply (cop_perp2__col B A C I B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
apply (cop_perp2__col B A C I B).

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I B A C
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
apply (cop_perp2__col B A C I B).
auto.

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I B A C
+++++
Cop.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
apply (cop_perp2__col B A C I B).

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
apply (cop_perp2__col B A C I B).
auto.

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I B
+++++
Perp.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
apply (cop_perp2__col B A C I B).

*****
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).

*****
H : Col B A C
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
intro.
subst.
assert (Col B A C).
elim HNCOL.

*****
H : Col B A C
HCONG : Cong I B I B
HPERH2 : Perp B C I B
HPERH1 : Perp A B I B
HCOLH2 : Col B C B
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
Col.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).

*****
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Perp B H2 I H2).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).

*****
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H2 I H2
+++++
apply (perp_col B C I H2 H2).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).

*****
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per B H2 I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).

*****
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
apply (perp_per_1 H2 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
apply (perp_per_1 H2 B I).

*****
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
apply (perp_per_1 H2 B I).
auto.

*****
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
Perp.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per H2 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per H2 B I
+++++
apply (l11_17 B H2 I H2 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H2 I H2 B I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H2 I H2 B I
+++++
apply (isosceles_conga H2 I B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 B)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 I)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).
auto.

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 I)
+++++
assert_diffs.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).
auto.
assert_diffs.

*****
H4 : not (eq I H2)
H3 : not (eq B I)
H8 : not (eq A C)
H5 : not (eq B C)
H6 : not (eq A B)
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 I)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles H2 I B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).
auto.

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles H2 I B
+++++
unfold isosceles.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
apply (l11_17 B H2 I H2 B I).
auto.
apply (isosceles_conga H2 I B).
auto.
unfold isosceles.

*****
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong H2 I I B
+++++
Cong.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (H2 = B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq H2 B
+++++
apply (l8_7 I H2 B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I H2 B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).
auto.

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I H2 B
+++++
apply (l8_2 B H2 I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).
auto.
apply (l8_2 B H2 I).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B H2
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).
auto.

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B H2
+++++
apply (l8_2 H2 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).
apply (l8_7 I H2 B).
auto.
apply (l8_2 H2 B I).

*****
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per H2 B I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
intro.
subst.
assert (H2 <> B).
assert (Perp B H2 I H2).
assert (Per B H2 I).
assert (Per H2 B I).
assert (H2 = B).

*****
H4 : eq H2 B
H3 : Per H2 B I
H1 : Per B H2 I
H0 : Perp B H2 I H2
H : not (eq H2 B)
HPERH2 : Perp B C I H2
HCONG : Cong I B I H2
HPERH1 : Perp A B I B
HCOLH2 : Col B C H2
HCOLH1 : Col A B B
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
contradiction.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).

*****
H : not (eq H1 B)
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq H1 B)) (not (eq H2 B))
+++++
split.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 B)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H2 B)
+++++
intro.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.

*****
H0 : eq H2 B
H : not (eq H1 B)
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Perp B H1 I H1).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H1 I H1
+++++
apply (perp_col B A I H1 H1).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Perp.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.
Perp.

*****
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).

*****
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.

*****
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per B H1 I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).

*****
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
apply (perp_per_1 H1 B I).

*****
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.

*****
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
Perp.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Per H1 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per H1 B I
+++++
apply (l11_17 B H1 I H1 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I H1 B I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I H1 B I
+++++
apply (isosceles_conga H1 I B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 I)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).
auto.

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 I)
+++++
assert_diffs.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).
auto.
assert_diffs.

*****
H4 : not (eq I H1)
H3 : not (eq B I)
H8 : not (eq A C)
H5 : not (eq B C)
H6 : not (eq A B)
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 I)
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles H1 I B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).
auto.

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
isosceles H1 I B
+++++
unfold isosceles.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
apply (l11_17 B H1 I H1 B I).
auto.
apply (isosceles_conga H1 I B).
auto.
unfold isosceles.

*****
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong H1 I I B
+++++
Cong.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (H1 = B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq H1 B
+++++
apply (l8_7 I H1 B).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I H1 B
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).
auto.

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I H1 B
+++++
apply (l8_2 B H1 I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).
auto.
apply (l8_2 B H1 I).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B H1
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).
auto.

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per I B H1
+++++
apply (l8_2 H1 B I).
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).
apply (l8_7 I H1 B).
auto.
apply (l8_2 H1 B I).

*****
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per H1 B I
+++++
auto.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).
split.
auto.
intro.
subst.
assert (Perp B H1 I H1).
idtac.
assert (Per B H1 I).
idtac.
assert (Per H1 B I).
assert (H1 = B).

*****
H4 : eq H1 B
H3 : Per H1 B I
H2 : Per B H1 I
H0 : Perp B H1 I H1
H : not (eq H1 B)
HPERH2 : Perp B C I B
HPERH1 : Perp A B I H1
HCOLH2 : Col B C B
HCONG : Cong I H1 I B
HCOLH1 : Col A B H1
HCOP : Coplanar A B C I
HNCOL : not (Col A B C)
A,B,C,I,H1 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
contradiction.
-----
Lemma not_col_efoot_not_equality : forall A B C I H1 H2, ~ Col A B C -> Coplanar A B C I -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> H1 <> B /\\ H2 <> B.
Proof.
intros A B C I H1 H2 HNCOL HCOP HCOLH1 HCOLH2 HCONG HPERH1 HPERH2.
assert (H1 <> B).

*****

*****

+++++
Qed.
-----
End Bisector.
-----
Ltac col_with_conga := \nmatch goal with\n   | H: (CongA ?A ?B ?I ?I ?B ?C) |- Col ?A ?B ?C => \n      assert (Col A B I) by (assert_diffs;ColR); assert (HH : Col I B C) by (apply (col_conga_col A B I I B C);assumption);\n      assert_diffs;ColR\n   | H :(CongA ?A ?B ?I ?C ?B ?I) |- Col ?A ?B ?C => \n      assert (CongA A B I I B C) by (apply (conga_right_comm A B I C B I);assumption); col_with_conga\n   | H :(CongA ?I ?B ?A ?I ?B ?C) |- Col ?A ?B ?C => \n      assert (CongA A B I I B C) by (apply (conga_left_comm I B A I B C);assumption); col_with_conga\n   | H :(CongA ?I ?B ?A ?C ?B ?I) |- Col ?A ?B ?C => \n      assert (CongA A B I C B I) by (apply (conga_left_comm I B A C B I);assumption); col_with_conga\n   | H :(CongA ?I ?B ?C ?A ?B ?I) |- Col ?A ?B ?C =>\n      assert (CongA A B I I B C) by (apply (conga_sym I B C A B I);assumption); col_with_conga\n   | H :(CongA ?C ?B ?I ?A ?B ?I) |- Col ?A ?B ?C =>\n      assert (CongA A B I C B I) by (apply (conga_sym C B I A B I);assumption); col_with_conga\n   | H :(CongA ?I ?B ?C ?I ?B ?A) |- Col ?A ?B ?C =>\n      assert (CongA I B A I B C) by (apply (conga_sym I B C I B A);assumption); col_with_conga\n   | H: (CongA ?C ?B ?I ?I ?B ?A) |- Col ?A ?B ?C =>\n      assert (CongA I B A C B I) by (apply (conga_sym C B I I B A);assumption); col_with_conga\n   | H: (CongA ?A ?B ?I ?I ?B ?C) |- Col ?C ?B ?A => \n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?A ?B ?I ?C ?B ?I) |- Col ?C ?B ?A => \n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?I ?B ?A ?I ?B ?C) |- Col ?C ?B ?A => \n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?I ?B ?A ?C ?B ?I) |- Col ?C ?B ?A => \n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?I ?B ?C ?A ?B ?I) |- Col ?C ?B ?A =>\n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?C ?B ?I ?A ?B ?I) |- Col ?C ?B ?A =>\n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H :(CongA ?I ?B ?C ?I ?B ?A) |- Col ?C ?B ?A =>\n      apply (col_permutation_3 A B C);auto;col_with_conga\n   | H: (CongA ?C ?B ?I ?I ?B ?A) |- Col ?C ?B ?A =>\n      apply (col_permutation_3 A B C);auto;col_with_conga\nend.
-----
Section Bisector_2.
-----
Context `{TE:Tarski_euclidean}.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, \n ~ Col A B C -> InAngle I A B C ->\n Col A B H1 -> Col B C H2-> Cong I H1 I H2->\n Perp A B I H1 -> Perp B C I H2 -> \n (Out B H1 A -> Out B H2 C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : InAngle I A B C) (_ : Col A B H1) (_ : Col B C H2) (_ : Cong I H1 I H2) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Out B H1 A), Out B H2 C
+++++
Proof.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : InAngle I A B C) (_ : Col A B H1) (_ : Col B C H2) (_ : Cong I H1 I H2) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Out B H1 A), Out B H2 C
+++++
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
Cop.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert(HMY : Cong H1 B H2 B /\ CongA H1 B I H2 B I /\ CongA H1 I B H2 I B).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Cong H1 B H2 B) (and (CongA H1 B I H2 B I) (CongA H1 I B H2 I B))
+++++
apply (l11_52 B H1 I B H2 I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
apply (l11_16 B H1 I B H2 I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert (Perp B H1 I H1).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H1 I H1
+++++
apply (perp_col B A I H1 H1).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.
Perp.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
idtac.

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
apply (perp_per_1 H2 B I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
assert (Perp B H2 I H2).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H2 I H2
+++++
apply (perp_col B C I H2 H2).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).

*****
H0 : Perp B H2 I H2
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
idtac.

*****
H0 : Perp B H2 I H2
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B I B I
+++++
Cong.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong H1 I H2 I
+++++
Cong.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Le H1 I B I
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Le H1 I B I
+++++
apply (l11_46 B H1 I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 I)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Per B H1 I) (Obtuse B H1 I)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Per B H1 I) (Obtuse B H1 I)
+++++
left.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert (Perp B H1 I H1).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H1 I H1
+++++
apply (perp_col B A I H1 H1).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.
Perp.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
idtac.

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
Perp.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).

*****
HMY : and (Cong H1 B H2 B) (and (CongA H1 B I H2 B I) (CongA H1 I B H2 I B))
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (TS I B A C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B A C
+++++
apply (in_angle_two_sides A B C I).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B A I)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B A I)
+++++
intro.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.

*****
H : Col B A I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col H1 B H2).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H1 B H2).

*****
H : Col B A I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H1 B H2
+++++
col_with_conga.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H1 B H2).

*****
H0 : Col H1 B H2
H : Col B A I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H1 B H2).
idtac.

*****
H0 : Col H1 B H2
H : Col B A I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H1 B H2).
idtac.
elim HNCOL.

*****
H0 : Col H1 B H2
H : Col B A I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B C I)
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B C I)
+++++
intro.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.

*****
H : Col B C I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col H2 B H1).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H2 B H1).

*****
H : Col B C I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 B H1
+++++
col_with_conga.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H2 B H1).

*****
H0 : Col H2 B H1
H : Col B C I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H2 B H1).
idtac.

*****
H0 : Col H2 B H1
H : Col B C I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).
auto.
intro.
assert (Col H2 B H1).
idtac.
elim HNCOL.

*****
H0 : Col H2 B H1
H : Col B C I
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
apply (in_angle_two_sides A B C I).

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I A B C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).

*****
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].

*****
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I B H1 H2
+++++
assert_diffs.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I B H1 H2
+++++
apply coplanar_perm_2, col_cop__cop with C.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I H1 B C
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.
Col.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I H1 B C
+++++
apply coplanar_perm_5, col_cop__cop with A.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.
Col.
apply coplanar_perm_5, col_cop__cop with A.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I C B A
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.
Col.
apply coplanar_perm_5, col_cop__cop with A.
Col.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I C B A
+++++
Cop.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.
Col.
apply coplanar_perm_5, col_cop__cop with A.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B A)
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.
Col.
apply coplanar_perm_5, col_cop__cop with A.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C)
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert_diffs.
apply coplanar_perm_2, col_cop__cop with C.

*****
H9 : not (eq I C)
H10 : not (eq I A)
H8 : not (eq I B)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].

*****
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B H1 I B H2
+++++
CongA.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].

*****
HOUTH1H2 : Out B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
elim HNCOL.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
elim HNCOL.

*****
HOUTH1H2 : Out B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (TS I B A H2).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B A H2
+++++
apply (l9_5 I B H1 H2 B A).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
apply (l9_5 I B H1 H2 B A).

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B H1 H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
apply (l9_5 I B H1 H2 B A).

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B I B
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
apply (l9_5 I B H1 H2 B A).
auto.

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B I B
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
apply (l9_5 I B H1 H2 B A).

*****
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
idtac.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
assert (OS I B H2 C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS I B H2 C
+++++
apply (l9_8_1 I B H2 C A).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B H2 A
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).
auto.

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B H2 A
+++++
apply (l9_2 I B A H2).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).
auto.
apply (l9_2 I B A H2).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B A H2
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B C A
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).
auto.

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B C A
+++++
apply (l9_2 I B A C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (l9_8_1 I B H2 C A).
auto.
apply (l9_2 I B A C).

*****
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS I B A C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
apply (col_one_side_out B I H2 C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (col_one_side_out B I H2 C).

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B H2 C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (col_one_side_out B I H2 C).
auto.

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B H2 C
+++++
Col.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (col_one_side_out B I H2 C).

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS B I H2 C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (col_one_side_out B I H2 C).
auto.

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS B I H2 C
+++++
apply (invert_one_side I B H2 C).
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
assert (TS I B A C).
destruct (conga_cop__or_out_ts I B H1 H2) as [HOUTH1H2 | HTSH1H2].
assert (TS I B A H2).
idtac.
assert (OS I B H2 C).
apply (col_one_side_out B I H2 C).
auto.
apply (invert_one_side I B H2 C).

*****
H3 : OS I B H2 C
H0 : TS I B A H2
HTSH1H2 : TS I B H1 H2
H : TS I B A C
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HOUTH1 : Out B H1 A
HPERH2 : Perp B C I H2
HPERH1 : Perp A B I H1
HCONG : Cong I H1 I H2
HCOLH2 : Col B C H2
HCOLH1 : Col A B H1
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS I B H2 C
+++++
auto.
-----
Lemma equality_foot_out_out : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col A B H1 -> Col B C H2-> Cong I H1 I H2-> Perp A B I H1 -> Perp B C I H2 -> (Out B H1 A -> Out B H2 C).
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HCONG HPERH1 HPERH2 HOUTH1.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****

*****

+++++
Qed.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I ->\n Col B H1 A -> Col B H2 C ->\n Perp A B I H1 -> Perp B C I H2 ->\n CongA A B I I B C ->  Cong I H1 I H2.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : Coplanar A B C I) (_ : Col B H1 A) (_ : Col B H2 C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : CongA A B I I B C), Cong I H1 I H2
+++++
Proof.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : Coplanar A B C I) (_ : Col B H1 A) (_ : Col B H2 C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : CongA A B I I B C), Cong I H1 I H2
+++++
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.

*****
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
destruct (col_dec A B C) as [HCOL | HNCOL].
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (H1 = H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq H1 H2
+++++
apply (l8_14_2_1b H1 A B I H1 H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at H1 A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at H1 A B I H1
+++++
apply (l8_14_2_1b_bis A B I H1 H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
apply (l8_14_2_1b_bis A B I H1 H1).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
apply (l8_14_2_1b_bis A B I H1 H1).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H1 A B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
apply (l8_14_2_1b_bis A B I H1 H1).
auto.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H1 A B
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
apply (l8_14_2_1b_bis A B I H1 H1).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H1 I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
apply (l8_14_2_1b_bis A B I H1 H1).
auto.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H1 I H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 A B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 A B
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H7 : not (eq I H1)
H5 : not (eq B C)
H4 : not (eq I H2)
H3 : not (eq A B)
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 A B
+++++
ColR.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
assert (Perp I H1 A B).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp I H1 A B
+++++
Perp.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).

*****
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.

*****
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
assert (Perp I H2 A B).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).

*****
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp I H2 A B
+++++
Perp.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
assert (Col I H1 H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I H1 H2
+++++
apply (cop_perp2__col I H1 H2 A B).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).
apply (cop_perp2__col I H1 H2 A B).

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B H1 H2
+++++
Cop.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).
apply (cop_perp2__col I H1 H2 A B).

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp I H1 A B
+++++
Cop.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).
apply (cop_perp2__col I H1 H2 A B).

*****
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp I H2 A B
+++++
Cop.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).

*****
H4 : Col I H1 H2
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
apply (l8_14_2_1b H1 A B I H1 H2).
auto.
assert (Perp I H1 A B).
idtac.
assert (Perp I H2 A B).
idtac.
assert (Col I H1 H2).
idtac.

*****
H4 : Col I H1 H2
H3 : Perp I H2 A B
H0 : Perp I H1 A B
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col H2 I H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).

*****
H0 : eq H1 H2
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
subst.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
assert (Perp A B I H2) by(apply (perp_col2 B C A B I H2);auto;assert_diffs;auto;Col;Col).
assert (H1 = H2).
subst.

*****
H : Perp A B I H2
HCOL : Col A B C
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H2
HCCBH : Col B H2 C
HCABH : Col B H2 A
HCOP : Coplanar A B C I
A,B,C,I,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H2 I H2
+++++
Cong.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
destruct (out_dec B H1 A) as [HOUT | HNOUT].
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Out B H2 C).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
apply (bisector_foot_out_out A B C I H1 H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).
auto.

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).
auto.

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
apply (bisector_foot_out_out A B C I H1 H2).

*****
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
apply (l11_50_2 I B H1 I B H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col I B H1)
+++++
intro.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
intro.

*****
H0 : Col I B H1
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
intro.
elim HNCOL.

*****
H0 : Col I B H1
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
col_with_conga.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
apply (l11_16 B H1 I B H2 I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
apply (perp_col2 A B H1 B I H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
assert (Perp B H2 I H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H2 I H2
+++++
apply (perp_col B C I H2 H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).

*****
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
idtac.

*****
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
assert (Perp H2 B I H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
idtac.
assert (Perp H2 B I H2).

*****
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
Perp.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
idtac.
assert (Perp H2 B I H2).

*****
H3 : Perp H2 B I H2
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
idtac.
assert (Perp H2 B I H2).
idtac.

*****
H3 : Perp H2 B I H2
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
apply (perp_per_1 H2 B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert (Perp B H2 I H2).
idtac.
assert (Perp H2 B I H2).
idtac.
apply (perp_per_1 H2 B I).

*****
H3 : Perp H2 B I H2
H0 : Perp B H2 I H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
apply (l11_16 B H1 I B H2 I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B H1 I B H2
+++++
assert (CongA H1 B I I B H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I I B H2
+++++
apply (out_conga A B I I B C H1 I I H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
apply (l6_6 B H1 A).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (l6_6 B H1 A).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H0 : not (eq I B)
H8 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C H2
+++++
apply (l6_6 B H2 C).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A B I I B C H1 I I H2).
auto.
apply (l6_6 B H2 C).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).

*****
H0 : CongA H1 B I I B H2
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B H1 I B H2
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
assert (Out B H2 C).
idtac.
apply (l11_50_2 I B H1 I B H2).

*****
H : Out B H2 C
HOUT : Out B H1 A
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I B I B
+++++
Cong.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].

*****
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
destruct (symmetric_point_construction A B) as [A' HCONHA'].
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].

*****
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
destruct (symmetric_point_construction C B) as [C' HCONHC'].
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].

*****
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Bet A B A').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').

*****
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B A'
+++++
apply (midpoint_bet A B A').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
apply (midpoint_bet A B A').

*****
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint B A A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').

*****
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.

*****
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Bet C B C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').

*****
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C B C'
+++++
apply (midpoint_bet C B C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
apply (midpoint_bet C B C').

*****
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint B C C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Out B H1 A').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A'
+++++
assert (Bet A B H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B H1
+++++
apply (not_out_bet A B H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Out B A H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.

*****
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Out B A H1)
+++++
intro.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.
intro.

*****
H3 : Out B A H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNOUT.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.
intro.
elim HNOUT.

*****
H3 : Out B A H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
apply (l6_6 B A H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.
intro.
elim HNOUT.
apply (l6_6 B A H1).

*****
H3 : Out B A H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A'
+++++
apply (l6_3_2 H1 A' B).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq H1 B)) (and (not (eq A' B)) (ex (fun C : Tpoint => and (not (eq C B)) (and (Bet H1 B C) (Bet A' B C)))))
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq H1 B)) (and (not (eq A' B)) (ex (fun C : Tpoint => and (not (eq C B)) (and (Bet H1 B C) (Bet A' B C)))))
+++++
repeat split.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
assert_diffs.

*****
H10 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H8 : not (eq C C')
H5 : not (eq A A')
H4 : not (eq A H1)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
assert_diffs.

*****
H10 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H8 : not (eq C C')
H5 : not (eq A A')
H4 : not (eq A H1)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C : Tpoint => and (not (eq C B)) (and (Bet H1 B C) (Bet A' B C)))
+++++
exists A.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
exists A.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq A B)) (and (Bet H1 B A) (Bet A' B A))
+++++
repeat split.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
exists A.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
exists A.
repeat split.
assert_diffs.

*****
H10 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H8 : not (eq C C')
H5 : not (eq A A')
H4 : not (eq A H1)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
exists A.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet H1 B A
+++++
Between.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Bet A B H1).
apply (l6_3_2 H1 A' B).
auto.
repeat split.
exists A.
repeat split.

*****
H3 : Bet A B H1
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A' B A
+++++
Between.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
assert (Out B H2 C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C'
+++++
apply (bisector_foot_out_out A' B C' I H1 H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A' B C')
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A' B C')
+++++
intro.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
intro.

*****
H4 : Col A' B C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
intro.
elim HNCOL.

*****
H4 : Col A' B C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
intro.
elim HNCOL.
assert_diffs.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Col A' B C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
intro.
elim HNCOL.
assert_diffs.
auto.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Col A' B C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A' B C' I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A' B C' I
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A' B C' I
+++++
apply coplanar_perm_3, col_cop__cop with C.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A' I B C
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.
Col.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A' I B C
+++++
apply coplanar_perm_19, col_cop__cop with A.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.
Col.
apply coplanar_perm_19, col_cop__cop with A.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I C B A
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.
Col.
apply coplanar_perm_19, col_cop__cop with A.
Col.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar I C B A
+++++
Cop.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.
Col.
apply coplanar_perm_19, col_cop__cop with A.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B A)
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.
Col.
apply coplanar_perm_19, col_cop__cop with A.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A A'
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C)
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
apply coplanar_perm_3, col_cop__cop with C.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C C'
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A' B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A' B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C' H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C' H2
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C' H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
assert_diffs.
auto.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C' H2
+++++
ColR.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
apply (conga_right_comm A' B I C' B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I C' B I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I C' B I
+++++
apply (l11_13 A B I C B I A' C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C B C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (conga_right_comm A' B I C' B I).
auto.
apply (l11_13 A B I C B I A' C').
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A' B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A' B I H1
+++++
apply (perp_col2 A B A' B I H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A'
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 A B A' B I H1).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C' I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C' I H2
+++++
apply (perp_col2 B C B C' I H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C')
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C')
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).
auto.
assert_diffs.

*****
H8 : not (eq I B)
H14 : not (eq I H1)
H13 : not (eq I H2)
H12 : not (eq B A')
H11 : not (eq B C')
H5 : not (eq C C')
H4 : not (eq A A')
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C')
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C B
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).
auto.
apply (perp_col2 B C B C' I H2).
auto.

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C C'
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (bisector_foot_out_out A' B C' I H1 H2).

*****
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
apply (l11_50_2 I B H1 I B H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col I B H1)
+++++
intro.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
intro.

*****
H5 : Col I B H1
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
intro.
elim HNCOL.

*****
H5 : Col I B H1
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
col_with_conga.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
assert (Per B H1 I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
apply (perp_col2 A B H1 B I H1).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
apply (perp_per_1 H1 B I).
auto.
apply (perp_col2 A B H1 B I H1).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).

*****
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
assert (Per B H2 I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).

*****
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
apply (perp_per_1 H2 B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
apply (perp_per_1 H2 B I).

*****
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
apply (perp_per_1 H2 B I).
auto.

*****
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
assert (Perp B H2 I H2) by (apply (perp_col B C I H2 H2);auto;Col).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
apply (perp_per_1 H2 B I).
auto.
assert (Perp B H2 I H2) by (apply (perp_col B C I H2 H2);auto;Col).

*****
H6 : Perp B H2 I H2
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
Perp...
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
apply (l11_16 B H1 I B H2 I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).
auto.

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).
auto.
assert_diffs.

*****
H18 : not (eq I H1)
H17 : not (eq I H2)
H11 : not (eq B I)
H15 : not (eq B A')
H14 : not (eq B C')
H8 : not (eq C C')
H7 : not (eq A A')
H12 : not (eq A C)
H9 : not (eq B C)
H10 : not (eq A B)
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).
auto.

*****
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (Per B H1 I).
assert (Per B H2 I).
idtac.
apply (l11_16 B H1 I B H2 I).
auto.
assert_diffs.

*****
H18 : not (eq I H1)
H17 : not (eq I H2)
H11 : not (eq B I)
H15 : not (eq B A')
H14 : not (eq B C')
H8 : not (eq C C')
H7 : not (eq A A')
H12 : not (eq A C)
H9 : not (eq B C)
H10 : not (eq A B)
H6 : Per B H2 I
H5 : Per B H1 I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B H1 I B H2
+++++
assert (CongA H1 B I I B H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I I B H2
+++++
apply (out_conga A' B I I B C' H1 I I H2).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
assert (CongA A' B I C' B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I C' B I
+++++
apply (l11_13 A B I C B I A' C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.
CongA.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.
CongA.
assert_diffs.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C B C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.
CongA.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
apply (l11_13 A B I C B I A' C').
auto.
CongA.
assert_diffs.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).

*****
H5 : CongA A' B I C' B I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
idtac.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
assert (CongA A' B I C' B I).
idtac.

*****
H5 : CongA A' B I C' B I
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A' B I I B C'
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A' H1
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A' H1
+++++
apply (l6_6 B H1 A').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (l6_6 B H1 A').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H9 : not (eq I B)
H15 : not (eq I H1)
H14 : not (eq I H2)
H13 : not (eq B A')
H12 : not (eq B C')
H6 : not (eq C C')
H5 : not (eq A A')
H10 : not (eq A C)
H7 : not (eq B C)
H8 : not (eq A B)
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C' H2
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C' H2
+++++
apply (l6_6 B H2 C').
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).
apply (out_conga A' B I I B C' H1 I I H2).
auto.
apply (l6_6 B H2 C').

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C'
+++++
auto.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).
assert (CongA H1 B I I B H2).

*****
H5 : CongA H1 B I I B H2
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA I B H1 I B H2
+++++
CongA.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].
destruct (not_col_bfoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
destruct (out_dec B H1 A) as [HOUT | HNOUT].
destruct (symmetric_point_construction A B) as [A' HCONHA'].
destruct (symmetric_point_construction C B) as [C' HCONHC'].
assert (Bet A B A').
idtac.
assert (Bet C B C').
idtac.
assert (Out B H1 A').
assert (Out B H2 C').
apply (l11_50_2 I B H1 I B H2).

*****
H4 : Out B H2 C'
H3 : Out B H1 A'
H0 : Bet C B C'
H : Bet A B A'
HCONHC' : Midpoint B C C'
C' : Tpoint
HCONHA' : Midpoint B A A'
A' : Tpoint
HNOUT : not (Out B H1 A)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HNCOL : not (Col A B C)
HCONGA : CongA A B I I B C
HPH2 : Perp B C I H2
HPH1 : Perp A B I H1
HCCBH : Col B H2 C
HCABH : Col B H1 A
HCOP : Coplanar A B C I
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I B I B
+++++
Cong.
-----
Lemma bisector_perp_equality : forall A B C I H1 H2, Coplanar A B C I -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> CongA A B I I B C -> Cong I H1 I H2.
Proof.
intros A B C I H1 H2 HCOP HCABH HCCBH HPH1 HPH2 HCONGA.
destruct (col_dec A B C) as [HCOL | HNCOL].

*****

*****

+++++
Qed.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2,  ~ Col A B C ->\n InAngle I A B C -> Col B H1 A -> \n Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 ->\n CongA A B I I B C.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : InAngle I A B C) (_ : Col B H1 A) (_ : Col B H2 C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Cong I H1 I H2), CongA A B I I B C
+++++
Proof.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C I H1 H2 : Tpoint) (_ : not (Col A B C)) (_ : InAngle I A B C) (_ : Col B H1 A) (_ : Col B H2 C) (_ : Perp A B I H1) (_ : Perp B C I H2) (_ : Cong I H1 I H2), CongA A B I I B C
+++++
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C I
+++++
Cop.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert(HMY : Cong H1 B H2 B /\ CongA H1 B I H2 B I /\ CongA H1 I B H2 I B).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Cong H1 B H2 B) (and (CongA H1 B I H2 B I) (CongA H1 I B H2 I B))
+++++
apply (l11_52 B H1 I B H2 I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA B H1 I B H2 I
+++++
apply (l11_16 B H1 I B H2 I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert (Perp B H1 I H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H1 I H1
+++++
apply (perp_col B A I H1 H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.
Perp.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H2 I
+++++
apply (perp_per_1 H2 B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
assert (Perp B H2 I H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H2 I H2
+++++
apply (perp_col B C I H2 H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
apply (perp_col B C I H2 H2).
auto.
Perp.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).

*****
H0 : Perp B H2 I H2
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
apply (perp_per_1 H2 B I).
assert_diffs.
auto.
assert (Perp B H2 I H2).
idtac.

*****
H0 : Perp B H2 I H2
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H2 B I H2
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H2)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
apply (l11_16 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I H2)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B I B I
+++++
Cong.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong H1 I H2 I
+++++
Cong.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).

*****
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Le H1 I B I
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Le H1 I B I
+++++
apply (l11_46 B H1 I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq H1 I)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Per B H1 I) (Obtuse B H1 I)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Per B H1 I) (Obtuse B H1 I)
+++++
left.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B H1 I
+++++
apply (perp_per_1 H1 B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
assert (Perp B H1 I H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B H1 I H1
+++++
apply (perp_col B A I H1 H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
apply (perp_col B A I H1 H1).
auto.
Perp.

*****
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
apply (l11_52 B H1 I B H2 I).
assert_diffs.
apply (l11_46 B H1 I).
auto.
left.
apply (perp_per_1 H1 B I).
assert_diffs.
auto.
assert (Perp B H1 I H1).
idtac.

*****
H0 : Perp B H1 I H1
H10 : not (eq I B)
H : not (eq I H1)
H5 : not (eq I H2)
H6 : not (eq A C)
H3 : not (eq B C)
H4 : not (eq A B)
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp H1 B I H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).

*****
HMY : and (Cong H1 B H2 B) (and (CongA H1 B I H2 B I) (CongA H1 I B H2 I B))
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].

*****
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
destruct (out_dec B A H1) as [HOUT | HBET].
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (Out B H2 C).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
apply (equality_foot_out_out A B C I H1 H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I A B C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B C H2
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H1 I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A B I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B C I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.
Col.

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.
Col.
Col.

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
apply (l6_6 B A H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
apply (equality_foot_out_out A B C I H1 H2).
auto.
Col.
Col.
apply (l6_6 B A H1).

*****
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (CongA A B I C B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
apply (out_conga H1 B I H2 B I A I C I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I H2 B I
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
apply (l6_6 B A H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (l6_6 B A H1).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).
auto.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H3 : not (eq B I)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B I I
+++++
apply (out_trivial B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).
auto.

*****
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).
apply (out_conga H1 B I H2 B I A I C I).
auto.
apply (out_trivial B I).
auto.
assert_diffs.

*****
H3 : not (eq B I)
H0 : not (eq I H1)
H6 : not (eq I H2)
H7 : not (eq A C)
H4 : not (eq B C)
H5 : not (eq A B)
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (Out B H2 C).
idtac.
assert (CongA A B I C B I).

*****
H0 : CongA A B I C B I
H : Out B H2 C
HOUT : Out B A H1
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
CongA.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].

*****
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (~ Out B C H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).

*****
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Out B C H2)
+++++
intro.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Out B H1 A).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
apply (equality_foot_out_out C B A I H2 H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C B A)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C B A)
+++++
intro.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.
intro.

*****
H0 : Col C B A
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HNCOL.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.
intro.
elim HNCOL.

*****
H0 : Col C B A
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I C B A
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I C B A
+++++
apply (l11_24 I A B C).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.
apply (l11_24 I A B C).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle I A B C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C B H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C B H2
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H2 I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I H2 I H1
+++++
Cong.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C B I H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C B I H2
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp B A I H1
+++++
Perp.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H2 C
+++++
apply (l6_6 B C H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
apply (equality_foot_out_out C B A I H2 H1).
auto.
apply (l6_6 B C H2).

*****
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B C H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).

*****
H0 : Out B H1 A
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim HBET.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
elim HBET.

*****
H0 : Out B H1 A
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A H1
+++++
apply (l6_6 B H1 A).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
intro.
assert (Out B H1 A).
elim HBET.
apply (l6_6 B H1 A).

*****
H0 : Out B H1 A
H : Out B C H2
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B H1 A
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).

*****
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (Bet A B H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).

*****
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A B H1
+++++
apply (not_out_bet A B H1).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
apply (not_out_bet A B H1).

*****
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
apply (not_out_bet A B H1).
auto.

*****
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B H1
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
apply (not_out_bet A B H1).

*****
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Out B A H1)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (Bet C B H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C B H2
+++++
apply (not_out_bet C B H2).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
apply (not_out_bet C B H2).

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C B H2
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
apply (not_out_bet C B H2).
auto.

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C B H2
+++++
Col.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
apply (not_out_bet C B H2).

*****
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Out B C H2)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
assert (CongA A B I C B I).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I C B I
+++++
apply (l11_13 H1 B I H2 B I A C).
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA H1 B I H2 B I
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet H1 B A
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet H1 B A
+++++
Between.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Between.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.
Between.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.
Between.
assert_diffs.

*****
H10 : not (eq B I)
H8 : not (eq I H1)
H11 : not (eq I H2)
H5 : not (eq C H2)
H4 : not (eq A H1)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet H2 B C
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet H2 B C
+++++
Between.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
Between.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.
Between.

*****
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
assert_diffs.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
apply (l11_13 H1 B I H2 B I A C).
auto.
Between.
assert_diffs.

*****
H10 : not (eq B I)
H8 : not (eq I H1)
H11 : not (eq I H2)
H5 : not (eq C H2)
H4 : not (eq A H1)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).

*****
H4 : CongA A B I C B I
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
idtac.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].
auto.
assert(HMY : Cong H1 B H2 B /\\ CongA H1 B I H2 B I /\\ CongA H1 I B H2 I B).
destruct HMY as [HSH1BH2B [HAH1BI HAH1IB]].
destruct (out_dec B A H1) as [HOUT | HBET].
assert (~ Out B C H2).
assert (Bet A B H1).
idtac.
assert (Bet C B H2).
idtac.
assert (CongA A B I C B I).
idtac.

*****
H4 : CongA A B I C B I
H3 : Bet C B H2
H0 : Bet A B H1
H : not (Out B C H2)
HBET : not (Out B A H1)
HAH1IB : CongA H1 I B H2 I B
HAH1BI : CongA H1 B I H2 B I
HSH1BH2B : Cong H1 B H2 B
HNEQH2 : not (eq H2 B)
HNEQH1 : not (eq H1 B)
HCONG : Cong I H1 I H2
HPERPH2 : Perp B C I H2
HPERPH1 : Perp A B I H1
HCOLH2 : Col B H2 C
HCOLH1 : Col B H1 A
HINANGLE : InAngle I A B C
HNCOL : not (Col A B C)
A,B,C,I,H1,H2 : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A B I I B C
+++++
CongA.
-----
Lemma perp_equality_bisector : forall A B C I H1 H2, ~ Col A B C -> InAngle I A B C -> Col B H1 A -> Col B H2 C -> Perp A B I H1 -> Perp B C I H2 -> Cong I H1 I H2 -> CongA A B I I B C.
Proof.
intros A B C I H1 H2 HNCOL HINANGLE HCOLH1 HCOLH2 HPERPH1 HPERPH2 HCONG.
destruct (not_col_efoot_not_equality A B C I H1 H2) as [HNEQH1 HNEQH2].

*****

*****

+++++
Qed.
-----
End Bisector_2.
-----
