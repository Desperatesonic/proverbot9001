Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Annexes.saccheri.
-----
Section thales_postulate_thales_converse_postulate.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : thales_postulate, thales_converse_postulate
+++++
Proof.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : thales_postulate, thales_converse_postulate
+++++
intros thales A B C M HNCol HM HPer.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.

*****
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
assert_diffs.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.

*****
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
assert(M <> C).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).

*****
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M C)
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
intro.

*****
H : eq M C
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
intro.
subst.

*****
H0 : not (eq C A)
H3 : not (eq C B)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint C A B
HNCol : not (Col A B C)
A,B,C : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
intro.
subst.
apply HNCol.

*****
H0 : not (eq C A)
H3 : not (eq C B)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint C A B
HNCol : not (Col A B C)
A,B,C : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).

*****
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
idtac.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.

*****
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].

*****
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M C)
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].

*****
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M A)
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].

*****
HCong : Cong M C' M A
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.

*****
HCong : Cong M C' M A
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
apply cong_symmetry in HCong.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.

*****
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
elim(eq_dec_points C C').
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').

*****
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq C C', Cong M A M C
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.

*****
H5 : eq C C'
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
subst.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
subst.

*****
HCong : Cong M A M C'
H : not (eq M C')
H3 : not (eq M B)
H0 : not (eq M A)
H1 : not (eq B C')
H4 : not (eq A C')
H2 : not (eq A B)
HPer : Per A C' B
HM : Midpoint M A B
HNCol : not (Col A B C')
HC' : Out M C' C'
A,B,M,C' : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C'
+++++
assumption.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').

*****
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq C C'), Cong M A M C
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.

*****
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C
+++++
exfalso.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.

*****
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert_diffs.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.

*****
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(~ Col A B C').
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').

*****
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C')
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
intro.

*****
H7 : Col A B C'
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
intro.
apply HNCol.

*****
H7 : Col A B C'
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').

*****
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.

*****
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(~ Col A C C').
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').

*****
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A C C')
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
intro.

*****
H8 : Col A C C'
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
intro.
apply HNCol.

*****
H8 : Col A C C'
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').

*****
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.

*****
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(~ Col B C C').
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').

*****
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B C C')
+++++
intro.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
intro.

*****
H9 : Col B C C'
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
intro.
apply HNCol.

*****
H9 : Col B C C'
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').

*****
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.

*****
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert_diffs.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(CongA A C B A C' B).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A C B A C' B
+++++
apply l11_16.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A C B
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A C)
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C)
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A C' B
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.
auto.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A C' B
+++++
apply (thales _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.
auto.
apply (thales _ _ _ M).

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C')
+++++
assumption.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.
auto.
apply (thales _ _ _ M).

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint M A B
+++++
assumption.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.
auto.
apply (thales _ _ _ M).

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong M A M C'
+++++
assumption.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A C')
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
apply l11_16.

*****
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B C')
+++++
auto.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).

*****
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(OS A B C C').
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').

*****
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C C'
+++++
apply (out_one_side_1 _ _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
apply (out_one_side_1 _ _ _ _ M).

*****
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
apply (out_one_side_1 _ _ _ _ M).

*****
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B M
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
apply (out_one_side_1 _ _ _ _ M).

*****
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out M C C'
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HC' : Out M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(Hlta : LtA A C' B A C B).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA A C' B A C B
+++++
apply os3__lta.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' A B C
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' A B C
+++++
apply (one_side_transitivity _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' A B M
+++++
apply invert_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A C' B M
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col A C' B)) (not (Col A C' M))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A B M
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A B M
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A M B
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M A)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A M B
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' A M C
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C' A M)) (not (Col C' A C))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' M C
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' M C
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' C M
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C C')
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' C M
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C' C
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' B A C
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' B A C
+++++
apply (one_side_transitivity _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' B A M
+++++
apply invert_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS B C' A M
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col B C' A)) (not (Col B C' M))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A M
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A M
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B M A
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M B)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B M A
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C' B M C
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C' B M)) (not (Col C' B C))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' M C
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' M C
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C' C M
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C C')
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C' C M
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).

*****
Hlta : LtA A C' B A C B
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
destruct Hlta.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C' B A C B).
destruct Hlta.

*****
H13 : not (CongA A C' B A C B)
H12 : LeA A C' B A C B
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMCC' : Bet M C C'
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
CongA.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(Hlta : LtA A C B A C' B).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA A C B A C' B
+++++
apply os3__lta.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C A B C'
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C A B C'
+++++
apply (one_side_transitivity _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C A B M
+++++
apply invert_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A C B M
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col A C B)) (not (Col A C M))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A B M
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A B M
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A M B
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M A)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet A M B
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C A M C'
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C A M)) (not (Col C A C'))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C M C'
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C M C'
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C C' M
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' C)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C C' M
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C C'
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C B A C'
+++++
Side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C B A C'
+++++
apply (one_side_transitivity _ _ _ M).
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C B A M
+++++
apply invert_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS B C A M
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col B C A)) (not (Col B C M))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A M
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B A M
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out B M A
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq M B)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply invert_one_side.
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet B M A
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C B M C'
+++++
apply out_one_side.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C B M)) (not (Col C B C'))
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C M C'
+++++
Col.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C M C'
+++++
apply l6_6.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C C' M
+++++
apply bet_out.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C' C)
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
apply os3__lta.
Side.
apply (one_side_transitivity _ _ _ M).
apply out_one_side.
Col.
apply l6_6.
apply bet_out.

*****
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C C' M
+++++
Between.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).

*****
Hlta : LtA A C B A C' B
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
destruct Hlta.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).
idtac.
destruct (segment_construction_3 M C M A) as [C' [HC' HCong]].
auto.
apply cong_symmetry in HCong.
elim(eq_dec_points C C').
intro.
exfalso.
assert_diffs.
assert(~ Col A B C').
idtac.
assert(~ Col A C C').
idtac.
assert(~ Col B C C').
idtac.
assert_diffs.
assert(CongA A C B A C' B).
assert(OS A B C C').
idtac.
destruct HC' as [_ [_ [HMCC'|HMC'C]]].
assert(Hlta : LtA A C B A C' B).
destruct Hlta.

*****
H13 : not (CongA A C B A C' B)
H12 : LeA A C B A C' B
H11 : OS A B C C'
H10 : CongA A C B A C' B
H16 : not (eq A C')
H15 : not (eq B C')
H9 : not (Col B C C')
H8 : not (Col A C C')
H7 : not (Col A B C')
H6 : not (eq M C')
H5 : not (eq C C')
HCong : Cong M A M C'
HMC'C : Bet M C' C
C' : Tpoint
H : not (eq M C)
H3 : not (eq M B)
H0 : not (eq M A)
H4 : not (eq A C)
H1 : not (eq B C)
H2 : not (eq A B)
HPer : Per A C B
HM : Midpoint M A B
HNCol : not (Col A B C)
A,B,C,M : Tpoint
thales : thales_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
CongA.
-----
Lemma thales_postulate__thales_converse_postulate : thales_postulate -> thales_converse_postulate.
Proof.
intros thales A B C M HNCol HM HPer.
assert_diffs.
assert(M <> C).

*****

*****

+++++
Qed.
-----
End thales_postulate_thales_converse_postulate.
-----
