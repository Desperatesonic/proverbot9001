Require Export area_method.
-----
Lemma centroid_check : forall A B C G A',\n is_centroid G A B C ->\n is_midpoint A' B C ->\n Col A G A'.
-----
Lemma centroid_check : forall A B C G A', is_centroid G A B C -> is_midpoint A' B C -> Col A G A'.

*****

*****
forall (A B C G A' : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C), Col A G A'
+++++
Proof.
-----
Lemma centroid_check : forall A B C G A', is_centroid G A B C -> is_midpoint A' B C -> Col A G A'.
Proof.

*****

*****
forall (A B C G A' : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C), Col A G A'
+++++
area_method.
-----
Lemma centroid_check : forall A B C G A', is_centroid G A B C -> is_midpoint A' B C -> Col A G A'.
Proof.
area_method.

*****

*****

+++++
Qed.
-----
Lemma euler_line : forall A B C H O G,\n  is_circumcenter O A B C ->\n  is_orthocenter H A B C ->\n  is_centroid G A B C ->\n  Col O G H.
-----
Lemma euler_line : forall A B C H O G, is_circumcenter O A B C -> is_orthocenter H A B C -> is_centroid G A B C -> Col O G H.

*****

*****
forall (A B C H O G : Point) (_ : is_circumcenter O A B C) (_ : is_orthocenter H A B C) (_ : is_centroid G A B C), Col O G H
+++++
Proof.
-----
Lemma euler_line : forall A B C H O G, is_circumcenter O A B C -> is_orthocenter H A B C -> is_centroid G A B C -> Col O G H.
Proof.

*****

*****
forall (A B C H O G : Point) (_ : is_circumcenter O A B C) (_ : is_orthocenter H A B C) (_ : is_centroid G A B C), Col O G H
+++++
area_method.
-----
Lemma euler_line : forall A B C H O G, is_circumcenter O A B C -> is_orthocenter H A B C -> is_centroid G A B C -> Col O G H.
Proof.
area_method.

*****

*****

+++++
Qed.
-----
Lemma centroid_midpoint_centroid : forall A B C G A' B' C' G' X,\n is_centroid G A B C ->\n is_midpoint A' B C ->\n is_midpoint B' A C ->\n is_midpoint C' A B ->\n is_centroid G' A' B' C' ->\n 1+2<>0 ->\n Col G G' X.
-----
Lemma centroid_midpoint_centroid : forall A B C G A' B' C' G' X, is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Col G G' X.

*****

*****
forall (A B C G A' B' C' G' X : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C) (_ : is_midpoint B' A C) (_ : is_midpoint C' A B) (_ : is_centroid G' A' B' C') (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), Col G G' X
+++++
Proof.
-----
Lemma centroid_midpoint_centroid : forall A B C G A' B' C' G' X, is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Col G G' X.
Proof.

*****

*****
forall (A B C G A' B' C' G' X : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C) (_ : is_midpoint B' A C) (_ : is_midpoint C' A B) (_ : is_centroid G' A' B' C') (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), Col G G' X
+++++
area_method.
-----
Lemma centroid_midpoint_centroid : forall A B C G A' B' C' G' X, is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Col G G' X.
Proof.
area_method.

*****

*****

+++++
Qed.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G',\n is_centroid G A B C ->\n is_midpoint A' B C ->\n is_midpoint B' A C ->\n is_midpoint C' A B ->\n is_centroid G' A' B' C' ->\n 1+2<>0 ->\n Py G G' G = 0.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.

*****

*****
forall (A B C G A' B' C' G' : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C) (_ : is_midpoint B' A C) (_ : is_midpoint C' A B) (_ : is_centroid G' A' B' C') (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), eq (Py G G' G) F0
+++++
Proof.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.

*****

*****
forall (A B C G A' B' C' G' : Point) (_ : is_centroid G A B C) (_ : is_midpoint A' B C) (_ : is_midpoint B' A C) (_ : is_midpoint C' A B) (_ : is_centroid G' A' B' C') (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), eq (Py G G' G) F0
+++++
geoInit.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H3 : a_ratio G' A' B' C' (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
H2 : on_line_d C' A B (Fdiv F1 (Fplus F1 F1))
H1 : on_line_d B' A C (Fdiv F1 (Fplus F1 F1))
H0 : on_line_d A' B C (Fdiv F1 (Fplus F1 F1))
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G,A',B',C',G' : Point
*****
eq (Py G G' G) F0
+++++
eliminate G'.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H2 : on_line_d C' A B (Fdiv F1 (Fplus F1 F1))
H1 : on_line_d B' A C (Fdiv F1 (Fplus F1 F1))
H0 : on_line_d A' B C (Fdiv F1 (Fplus F1 F1))
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G,A',B',C' : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A' G A')) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A' G B'))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A' G C')))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B' G A')) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B' G B'))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B' G C'))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G A')) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G B'))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G C'))))) F0
+++++
eliminate A'.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H2 : on_line_d C' A B (Fdiv F1 (Fplus F1 F1))
H1 : on_line_d B' A C (Fdiv F1 (Fplus F1 F1))
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G,B',C' : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B' G B))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B' G B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B' G B'))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B' G C'))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G B'))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G C'))))) F0
+++++
eliminate B'.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H2 : on_line_d C' A B (Fdiv F1 (Fplus F1 F1))
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G,C' : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C' G A))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C' G C'))))) F0
+++++
eliminate C'.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.
eliminate C'.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A)))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G C)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G A))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py C G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G A))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py B G A)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G B)) (Fmult (Fdiv F1 (Fplus F1 F1)) (Py A G A))))))))) F0
+++++
eliminate G.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.
eliminate C'.
eliminate G.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
A,B,C : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B C)))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B C)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B C)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A C))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A C))))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B C)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A C))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A B C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B A)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C B C)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B C A)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py A C B)) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A B A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py A C A))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Py B C B)))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py B A C)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A B)) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Py C A C))))))))))))) F0
+++++
unfold_Py.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.
eliminate C'.
eliminate G.
unfold_Py.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
A,B,C : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C B)) (DSeg C B))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C)))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C B)) (DSeg C B))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B A)) (DSeg B A))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C A)) (DSeg C A)))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B A)) (DSeg B A))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C A)) (DSeg C A)))))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C B)) (DSeg C B))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B A)) (DSeg B A))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C A)) (DSeg C A)))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C B) (DSeg C B)) (Fmult (DSeg B A) (DSeg B A))) (Fmult (DSeg C A) (DSeg C A)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C B)) (DSeg C B))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (DSeg C A) (DSeg C A))) (Fmult (DSeg B A) (DSeg B A)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (DSeg C B) (DSeg C B))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B A)) (DSeg B A))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B A) (DSeg B A)) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg C A) (DSeg C A)) (Fmult (DSeg A B) (DSeg A B))) (Fmult (DSeg C B) (DSeg C B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg C A)) (DSeg C A)))))))))))))) F0
+++++
uniformize_dir_seg.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.
eliminate C'.
eliminate G.
unfold_Py.
uniformize_dir_seg.

*****
H4 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
A,B,C : Point
*****
eq (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg B C))) (Fopp (DSeg B C)))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C)))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg B C))) (Fopp (DSeg B C)))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A B))) (Fopp (DSeg A B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A C))) (Fopp (DSeg A C))))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A B))) (Fopp (DSeg A B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A C))) (Fopp (DSeg A C))))))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg B C))) (Fopp (DSeg B C)))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A B))) (Fopp (DSeg A B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A C))) (Fopp (DSeg A C))))))))))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A B) (DSeg A B)) (Fmult (DSeg B C) (DSeg B C))) (Fmult (DSeg A C) (DSeg A C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B)))) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg B C))) (Fopp (DSeg B C)))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg B C) (DSeg B C)) (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C)))) (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus F1 F1)) (Fminus (Fminus (Fminus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (DSeg A C) (DSeg A C)) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C)))) (Fmult (DSeg A B) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A B)) (DSeg A B)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg A C)) (DSeg A C)))) (Fmult (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))) (Fmult (Fmult (Fplus F1 F1) (DSeg B C)) (DSeg B C))))) (Fmult (Fdiv F1 (Fplus F1 F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A B))) (Fopp (DSeg A B)))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A B)) (Fopp (DSeg A B))) (Fmult (DSeg A C) (DSeg A C))) (Fmult (DSeg B C) (DSeg B C)))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fplus (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fminus (Fplus (Fmult (Fopp (DSeg A C)) (Fopp (DSeg A C))) (Fmult (DSeg A B) (DSeg A B))) (Fmult (Fopp (DSeg B C)) (Fopp (DSeg B C))))) (Fmult (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fmult (Fmult (Fplus F1 F1) (Fopp (DSeg A C))) (Fopp (DSeg A C))))))))))))))) F0
+++++
field_and_conclude.
-----
Lemma centroid_midpoint_centroid_2 : forall A B C G A' B' C' G', is_centroid G A B C -> is_midpoint A' B C -> is_midpoint B' A C -> is_midpoint C' A B -> is_centroid G' A' B' C' -> 1+2<>0 -> Py G G' G = 0.
Proof.
geoInit.
eliminate G'.
eliminate A'.
eliminate B'.
eliminate C'.
eliminate G.
unfold_Py.
uniformize_dir_seg.
field_and_conclude.

*****

*****

+++++
Qed.
-----
Lemma l6_44 : forall A B C G P Q,\n is_centroid G A B C ->\n on_inter_line_parallel P G A B B C  ->\n on_inter_line_parallel Q G A C B C  ->\n G<>Q -> G<>P -> 1+2 <> 0 ->\n 2*2*S4 P Q C B = (2+2+1)* S A Q P.
-----
Lemma l6_44 : forall A B C G P Q, is_centroid G A B C -> on_inter_line_parallel P G A B B C -> on_inter_line_parallel Q G A C B C -> G<>Q -> G<>P -> 1+2 <> 0 -> 2*2*S4 P Q C B = (2+2+1)* S A Q P.

*****

*****
forall (A B C G P Q : Point) (_ : is_centroid G A B C) (_ : on_inter_line_parallel P G A B B C) (_ : on_inter_line_parallel Q G A C B C) (_ : not (eq G Q)) (_ : not (eq G P)) (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), eq (Fmult (Fmult (Fplus F1 F1) (Fplus F1 F1)) (S4 P Q C B)) (Fmult (Fplus (Fplus (Fplus F1 F1) (Fplus F1 F1)) F1) (S A Q P))
+++++
Proof.
-----
Lemma l6_44 : forall A B C G P Q, is_centroid G A B C -> on_inter_line_parallel P G A B B C -> on_inter_line_parallel Q G A C B C -> G<>Q -> G<>P -> 1+2 <> 0 -> 2*2*S4 P Q C B = (2+2+1)* S A Q P.
Proof.

*****

*****
forall (A B C G P Q : Point) (_ : is_centroid G A B C) (_ : on_inter_line_parallel P G A B B C) (_ : on_inter_line_parallel Q G A C B C) (_ : not (eq G Q)) (_ : not (eq G P)) (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)), eq (Fmult (Fmult (Fplus F1 F1) (Fplus F1 F1)) (S4 P Q C B)) (Fmult (Fplus (Fplus (Fplus F1 F1) (Fplus F1 F1)) F1) (S A Q P))
+++++
area_method.
-----
Lemma l6_44 : forall A B C G P Q, is_centroid G A B C -> on_inter_line_parallel P G A B B C -> on_inter_line_parallel Q G A C B C -> G<>Q -> G<>P -> 1+2 <> 0 -> 2*2*S4 P Q C B = (2+2+1)* S A Q P.
Proof.
area_method.

*****

*****

+++++
Qed.
-----
Lemma l6_47 : forall A B C G M N,\n is_centroid G A B C ->\n on_line M A B ->\n inter_ll N G M A C ->\n parallel M B A M -> A<>M -> A<>N ->\n parallel N C A N -> B<>M ->\n 1+2<> 0 -> 2+1 <> 0 ->\n M**B/A**M + N**C/A**N = 1.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.

*****

*****
forall (A B C G M N : Point) (_ : is_centroid G A B C) (_ : on_line M A B) (_ : inter_ll N G M A C) (_ : parallel M B A M) (_ : not (eq A M)) (_ : not (eq A N)) (_ : parallel N C A N) (_ : not (eq B M)) (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)) (_ : not (eq (Fplus (Fplus F1 F1) F1) F0)), eq (Fplus (Fdiv (DSeg M B) (DSeg A M)) (Fdiv (DSeg N C) (DSeg A N))) F1
+++++
Proof.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.

*****

*****
forall (A B C G M N : Point) (_ : is_centroid G A B C) (_ : on_line M A B) (_ : inter_ll N G M A C) (_ : parallel M B A M) (_ : not (eq A M)) (_ : not (eq A N)) (_ : parallel N C A N) (_ : not (eq B M)) (_ : not (eq (Fplus F1 (Fplus F1 F1)) F0)) (_ : not (eq (Fplus (Fplus F1 F1) F1) F0)), eq (Fplus (Fdiv (DSeg M B) (DSeg A M)) (Fdiv (DSeg N C) (DSeg A N))) F1
+++++
geoInit.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.

*****
H11 : not (eq B M)
H10 : not (eq A N)
H3 : not (eq A M)
H4 : not (eq (DSeg A M) F0)
H6 : not (eq (DSeg A N) F0)
H0 : not (eq (DSeg B M) F0)
H9 : on_line_d M A B f
f : F
H8 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H7 : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H5 : parallel N C A N
H2 : parallel M B A M
H1 : inter_ll N G M A C
H : a_ratio G A B C (Fdiv F1 (Fplus (Fplus F1 F1) F1))\n (Fdiv F1 (Fplus (Fplus F1 F1) F1)) (Fdiv F1 (Fplus (Fplus F1 F1) F1))
A,B,C,G,M,N : Point
*****
eq (Fplus (Fdiv (DSeg M B) (DSeg A M)) (Fdiv (DSeg N C) (DSeg A N))) F1
+++++
am_before_field.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.

*****
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
eq (Fminus (Fopp (Fmult (Fplus (Fopp (Fmult (DSeg A B) (Finv (DSeg A B)))) f) (Finv f))) (Fmult (Fminus (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))) (Fmult (Fminus F1 f) (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B)))) (Finv (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))))) F1
+++++
field.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.

*****
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
and (not (eq (Fplus F1 (Fplus F1 F1)) F0)) (and (not (eq (Fopp (Fmult f (S C A B))) F0)) (and (not (eq f F0)) (not (eq (DSeg A B) F0))))
+++++
solve_conds.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.
solve_conds.

*****
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
not (eq (Fopp (Fmult f (S C A B))) F0)
+++++
intro.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.
solve_conds.
intro.

*****
H13 : eq (Fopp (Fmult f (S C A B))) F0
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
False
+++++
replace (- (f * (/ (2 + 1) * S C A B))) with (- (f * S C A B) / (2+1)) in H7 by (field;solve_conds).
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.
solve_conds.
intro.
replace (- (f * (/ (2 + 1) * S C A B))) with (- (f * S C A B) / (2+1)) in H7 by (field;solve_conds).

*****
H13 : eq (Fopp (Fmult f (S C A B))) F0
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not (eq (Fdiv (Fopp (Fmult f (S C A B))) (Fplus (Fplus F1 F1) F1)) F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
False
+++++
rewrite H13 in H7.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.
solve_conds.
intro.
replace (- (f * (/ (2 + 1) * S C A B))) with (- (f * S C A B) / (2+1)) in H7 by (field;solve_conds).
rewrite H13 in H7.

*****
H13 : eq (Fopp (Fmult f (S C A B))) F0
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not (eq (Fdiv F0 (Fplus (Fplus F1 F1) F1)) F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
False
+++++
replace (0 / (2 + 1)) with (0) in H7 by (field;solve_conds).
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.
field.
solve_conds.
intro.
replace (- (f * (/ (2 + 1) * S C A B))) with (- (f * S C A B) / (2+1)) in H7 by (field;solve_conds).
rewrite H13 in H7.
replace (0 / (2 + 1)) with (0) in H7 by (field;solve_conds).

*****
H13 : eq (Fopp (Fmult f (S C A B))) F0
H12 : eq F0 F0
H9 : not (eq (DSeg A B) F0)
H7 : not (eq F0 F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H23 : parallel A B A B
H21 : parallel A A A B
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
False
+++++
intuition.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.

*****
H13 : eq F0 F0
H12 : not (eq F0 F0)
H9 : not (eq (DSeg A B) F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H11 : not (eq A B)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H16 : parallel A M A B
H15 : parallel B A A B
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
eq (Fminus (Fopp (Fplus (Fopp (Fmult (DSeg A B) (Finv (DSeg A B)))) f)) (Fmult (Fminus (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))) (Fmult (Fminus F1 f) (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B)))) (Finv (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))))) F1
+++++
intuition.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.

*****
H11 : not (eq (Fopp (S A B M)) F0)
H9 : not (eq F0 F0)
H7 : not\n (eq\n (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))\n F0)
H4 : not (eq (DSeg A M) F0)
H2 : not (eq (DSeg A N) F0)
H1 : not (eq (DSeg B M) F0)
H0 : not (eq (Fplus (Fplus F1 F1) F1) F0)
H : not (eq (Fplus F1 (Fplus F1 F1)) F0)
H8 : not (eq A M)
H6 : not (eq A N)
H5 : not (eq B M)
H3 : parallel B M A M
H10 : parallel C N A N
f : F
A,B,C,M,N : Point
*****
eq (Fminus F0 (Fmult (Fminus (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))) (Fmult (Fminus F1 f) (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B)))) (Finv (Fopp (Fmult f (Fmult (Finv (Fplus (Fplus F1 F1) F1)) (S C A B))))))) F1
+++++
intuition.
-----
Lemma l6_47 : forall A B C G M N, is_centroid G A B C -> on_line M A B -> inter_ll N G M A C -> parallel M B A M -> A<>M -> A<>N -> parallel N C A N -> B<>M -> 1+2<> 0 -> 2+1 <> 0 -> M**B/A**M + N**C/A**N = 1.
Proof.
geoInit.
am_before_field.

*****

*****

+++++
Qed.
-----
