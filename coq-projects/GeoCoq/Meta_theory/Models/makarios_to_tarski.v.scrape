Require Import GeoCoq.Axioms.tarski_axioms.
-----
Require Import GeoCoq.Axioms.makarios_variant_axioms.
-----
Section Makarios_variant_to_Tarski83.
-----
Context `{MTn:Tarski_neutral_dimensionless_variant_with_decidable_point_equality}.
-----
Ltac prolong A B x C D :=\n assert (sg:= Msegment_construction A B C D);\n ex_and sg x.
-----
Lemma Mcong_reflexivity : forall A B,\n CongM A B A B.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A B A B
+++++
Proof.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A B A B
+++++
intros.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.
intros.

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B A B
+++++
prolong B A x A B.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.
intros.
prolong B A x A B.

*****
H0 : CongM A x A B
H : BetM B A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B A B
+++++
eapply Mcong_inner_transitivity with A x.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.
intros.
prolong B A x A B.
eapply Mcong_inner_transitivity with A x.

*****
H0 : CongM A x A B
H : BetM B A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A x A B
+++++
auto.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.
intros.
prolong B A x A B.
eapply Mcong_inner_transitivity with A x.

*****
H0 : CongM A x A B
H : BetM B A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A x A B
+++++
auto.
-----
Lemma Mcong_reflexivity : forall A B, CongM A B A B.
Proof.
intros.
prolong B A x A B.
eapply Mcong_inner_transitivity with A x.

*****

*****

+++++
Qed.
-----
Lemma Mcong_symmetry : forall A B C D ,\n CongM A B C D -> CongM C D A B.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D : MTpoint) (_ : CongM A B C D), CongM C D A B
+++++
Proof.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D : MTpoint) (_ : CongM A B C D), CongM C D A B
+++++
intros.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.
Proof.
intros.

*****
H : CongM A B C D
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C D A B
+++++
eapply Mcong_inner_transitivity.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.
Proof.
intros.
eapply Mcong_inner_transitivity.

*****
H : CongM A B C D
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM ?A ?B C D
+++++
apply H.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.
Proof.
intros.
eapply Mcong_inner_transitivity.

*****
H : CongM A B C D
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B A B
+++++
apply Mcong_reflexivity.
-----
Lemma Mcong_symmetry : forall A B C D , CongM A B C D -> CongM C D A B.
Proof.
intros.
eapply Mcong_inner_transitivity.

*****

*****

+++++
Qed.
-----
Lemma between_trivial : forall A B, BetM A B B.
-----
Lemma between_trivial : forall A B, BetM A B B.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, BetM A B B
+++++
Proof.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, BetM A B B
+++++
intros.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B B
+++++
prolong A B x B B.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.

*****
H0 : CongM B x B B
H : BetM A B x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B B
+++++
assert (x = B).
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).

*****
H0 : CongM B x B B
H : BetM A B x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
eq x B
+++++
apply Mcong_identity in H0.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).
apply Mcong_identity in H0.

*****
H0 : eq B x
H : BetM A B x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
eq x B
+++++
auto.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).

*****
H1 : eq x B
H0 : CongM B x B B
H : BetM A B x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B B
+++++
idtac.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).
idtac.

*****
H1 : eq x B
H0 : CongM B x B B
H : BetM A B x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B B
+++++
subst.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).
idtac.
subst.

*****
H : BetM A B B
H0 : CongM B B B B
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B B
+++++
assumption.
-----
Lemma between_trivial : forall A B, BetM A B B.
Proof.
intros.
prolong A B x B B.
assert (x = B).

*****

*****

+++++
Qed.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A A B B
+++++
Proof.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A A B B
+++++
intros.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A A B B
+++++
assert (sg:= Msegment_construction A A B B).
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).

*****
sg : ex (fun E : MTpoint => and (BetM A A E) (CongM A E B B))
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A A B B
+++++
ex_and sg x.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.

*****
H0 : CongM A x B B
H : BetM A A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A A B B
+++++
assert( A = x).
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).

*****
H0 : CongM A x B B
H : BetM A A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
eq A x
+++++
eapply Mcong_identity.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).
eapply Mcong_identity.

*****
H0 : CongM A x B B
H : BetM A A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A x ?C ?C
+++++
eauto.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).

*****
H1 : eq A x
H0 : CongM A x B B
H : BetM A A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A A B B
+++++
idtac.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).
idtac.

*****
H1 : eq A x
H0 : CongM A x B B
H : BetM A A x
A,B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A A B B
+++++
subst.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).
idtac.
subst.

*****
H : BetM x x x
H0 : CongM x x B B
B,x : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM x x B B
+++++
assumption.
-----
Lemma Mcong_trivial_identity : forall A B, CongM A A B B.
Proof.
intros.
assert (sg:= Msegment_construction A A B B).
ex_and sg x.
assert( A = x).

*****

*****

+++++
Qed.
-----
Lemma LmCoghGrab : forall A B C D E F,\n  A <> B -> BetM B A C -> BetM D A E ->\n  CongM B A D A -> CongM A C A E -> CongM B F D F ->\n  CongM F C E F.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D E F : MTpoint) (_ : not (eq A B)) (_ : BetM B A C) (_ : BetM D A E) (_ : CongM B A D A) (_ : CongM A C A E) (_ : CongM B F D F), CongM F C E F
+++++
Proof.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D E F : MTpoint) (_ : not (eq A B)) (_ : BetM B A C) (_ : BetM D A E) (_ : CongM B A D A) (_ : CongM A C A E) (_ : CongM B F D F), CongM F C E F
+++++
intros.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.

*****
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM F C E F
+++++
assert(CongM A F A F).
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).

*****
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A F A F
+++++
eapply Mcong_reflexivity.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).

*****
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM F C E F
+++++
idtac.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.

*****
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM F C E F
+++++
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM F C E F
+++++
apply (H6 B D A A).
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B A D A
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A C A E
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B F D F
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A F A F
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM B A C
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM D A E
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).
idtac.
assert(forall A A' B B' C C' D D':MTpoint, CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM D C C' D') by apply Mfive_segment.
apply (H6 B D A A).

*****
H6 : forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B')\n (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D')\n (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)),\nCongM D C C' D'
H5 : CongM A F A F
H4 : CongM B F D F
H3 : CongM A C A E
H2 : CongM B A D A
H1 : BetM D A E
H0 : BetM B A C
H : not (eq A B)
A,B,C,D,E,F : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
not (eq B A)
+++++
auto.
-----
Lemma LmCoghGrab : forall A B C D E F, A <> B -> BetM B A C -> BetM D A E -> CongM B A D A -> CongM A C A E -> CongM B F D F -> CongM F C E F.
Proof.
intros.
assert(CongM A F A F).

*****

*****

+++++
Qed.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D,\n  C <> D -> BetM D C B -> CongM A B B A.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D : MTpoint) (_ : not (eq C D)) (_ : BetM D C B), CongM A B B A
+++++
Proof.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A B C D : MTpoint) (_ : not (eq C D)) (_ : BetM D C B), CongM A B B A
+++++
intros.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.

*****
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
assert(CongM C B C B).
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).

*****
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C B C B
+++++
eapply Mcong_reflexivity.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).

*****
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
idtac.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.

*****
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
assert(CongM D C D C).
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).

*****
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C D C
+++++
eapply Mcong_reflexivity.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).

*****
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
idtac.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.

*****
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
assert(CongM D A D A).
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).

*****
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D A D A
+++++
eapply Mcong_reflexivity.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
idtac.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
eapply LmCoghGrab.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
not (eq ?A ?B)
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM D C B
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM ?D C B
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C D C
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C B C B
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).
idtac.
assert(CongM D C D C).
idtac.
assert(CongM D A D A).
idtac.
eapply LmCoghGrab.

*****
H3 : CongM D A D A
H2 : CongM D C D C
H1 : CongM C B C B
H0 : BetM D C B
H : not (eq C D)
A,B,C,D : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D A D A
+++++
eauto.
-----
Lemma cong_pre_pseudo_reflexivity : forall A B C D, C <> D -> BetM D C B -> CongM A B B A.
Proof.
intros.
assert(CongM C B C B).

*****

*****

+++++
Qed.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A B B A
+++++
Proof.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : MTpoint, CongM A B B A
+++++
intros.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
elim (Mpoint_equality_decidability A B).
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall _ : eq A B, CongM A B B A
+++++
intros.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.

*****
H : eq A B
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
subst.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
subst.

*****
B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B B B B
+++++
eapply Mcong_trivial_identity.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).

*****
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall _ : not (eq A B), CongM A B B A
+++++
intros.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.

*****
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
assert(BetM B A A).
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).

*****
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM B A A
+++++
eapply between_trivial.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
idtac.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).
idtac.

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B B A
+++++
eapply Mcong_symmetry.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).
idtac.
eapply Mcong_symmetry.

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B A A B
+++++
eauto.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).
idtac.
eapply Mcong_symmetry.
eauto.

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B A A B
+++++
eapply cong_pre_pseudo_reflexivity.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).
idtac.
eapply Mcong_symmetry.
eauto.
eapply cong_pre_pseudo_reflexivity.

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
not (eq ?C ?D)
+++++
eauto.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).
intros.
assert(BetM B A A).
idtac.
eapply Mcong_symmetry.
eauto.
eapply cong_pre_pseudo_reflexivity.

*****
H0 : BetM B A A
H : not (eq A B)
A,B : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM B A A
+++++
eauto.
-----
Lemma cong_pseudo_reflexivity : forall A B, CongM A B B A.
Proof.
intros.
elim (Mpoint_equality_decidability A B).

*****

*****

+++++
Qed.
-----
Lemma five_segment : forall A A' B B' C C' D D',\n  CongM A B A' B' ->\n  CongM B C B' C' ->\n  CongM A D A' D' ->\n  CongM B D B' D' ->\n  BetM A B C -> BetM A' B' C' -> A <> B ->\n  CongM C D C' D'.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B') (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D') (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)), CongM C D C' D'
+++++
Proof.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall (A A' B B' C C' D D' : MTpoint) (_ : CongM A B A' B') (_ : CongM B C B' C') (_ : CongM A D A' D') (_ : CongM B D B' D') (_ : BetM A B C) (_ : BetM A' B' C') (_ : not (eq A B)), CongM C D C' D'
+++++
intros.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C D C' D'
+++++
assert(CongM D C C' D').
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C C' D'
+++++
intros.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C C' D'
+++++
eapply Mfive_segment with A A' B B'.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A B A' B'
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B C B' C'
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM A D A' D'
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM B D B' D'
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A B C
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
BetM A' B' C'
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
intros.
eapply Mfive_segment with A A' B B'.

*****
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
not (eq A B)
+++++
assumption.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').

*****
H6 : CongM D C C' D'
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C D C' D'
+++++
assert(CongM D C C D).
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
assert(CongM D C C D).

*****
H6 : CongM D C C' D'
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C C D
+++++
eapply cong_pseudo_reflexivity.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
assert(CongM D C C D).

*****
H7 : CongM D C C D
H6 : CongM D C C' D'
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM C D C' D'
+++++
eapply Mcong_inner_transitivity with D C.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
assert(CongM D C C D).
eapply Mcong_inner_transitivity with D C.

*****
H7 : CongM D C C D
H6 : CongM D C C' D'
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C C D
+++++
eauto.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').
assert(CongM D C C D).
eapply Mcong_inner_transitivity with D C.

*****
H7 : CongM D C C D
H6 : CongM D C C' D'
H5 : not (eq A B)
H4 : BetM A' B' C'
H3 : BetM A B C
H2 : CongM B D B' D'
H1 : CongM A D A' D'
H0 : CongM B C B' C'
H : CongM A B A' B'
A,A',B,B',C,C',D,D' : MTpoint
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
CongM D C C' D'
+++++
eauto.
-----
Lemma five_segment : forall A A' B B' C C' D D', CongM A B A' B' -> CongM B C B' C' -> CongM A D A' D' -> CongM B D B' D' -> BetM A B C -> BetM A' B' C' -> A <> B -> CongM C D C' D'.
Proof.
intros.
assert(CongM D C C' D').

*****

*****

+++++
Qed.
-----
Instance Tarski_follows_from_Makarios_Variant : Tarski_neutral_dimensionless.
-----
Instance Tarski_follows_from_Makarios_Variant : Tarski_neutral_dimensionless.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
Tarski_neutral_dimensionless
+++++
Proof.
-----
Instance Tarski_follows_from_Makarios_Variant : Tarski_neutral_dimensionless.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
Tarski_neutral_dimensionless
+++++
exact (Build_Tarski_neutral_dimensionless MTpoint BetM CongM cong_pseudo_reflexivity Mcong_inner_transitivity Mcong_identity Msegment_construction five_segment Mbetween_identity Minner_pasch MPA MPB MPC Mlower_dim).
-----
Instance Tarski_follows_from_Makarios_Variant : Tarski_neutral_dimensionless.
Proof.
exact (Build_Tarski_neutral_dimensionless MTpoint BetM CongM cong_pseudo_reflexivity Mcong_inner_transitivity Mcong_identity Msegment_construction five_segment Mbetween_identity Minner_pasch MPA MPB MPC Mlower_dim).

*****

*****

+++++
Defined.
-----
Instance Tarski_follows_from_Makarios_Variant_with_decidable_point_equality' :\n  Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant.
-----
Instance Tarski_follows_from_Makarios_Variant_with_decidable_point_equality' : Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant
+++++
Proof.
-----
Instance Tarski_follows_from_Makarios_Variant_with_decidable_point_equality' : Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant.
Proof.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant
+++++
split.
-----
Instance Tarski_follows_from_Makarios_Variant_with_decidable_point_equality' : Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant.
Proof.
split.

*****
MTn : Tarski_neutral_dimensionless_variant_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless_variant
*****
forall A B : Tpoint, or (eq A B) (not (eq A B))
+++++
apply Mpoint_equality_decidability.
-----
Instance Tarski_follows_from_Makarios_Variant_with_decidable_point_equality' : Tarski_neutral_dimensionless_with_decidable_point_equality Tarski_follows_from_Makarios_Variant.
Proof.
split.
apply Mpoint_equality_decidability.

*****

*****

+++++
Defined.
-----
End Makarios_variant_to_Tarski83.
-----
