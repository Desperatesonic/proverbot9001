Require Import GeoCoq.Tarski_dev.Definitions.
-----
Section Continuity_Defs.
-----
Context `{Tn:Tarski_neutral_dimensionless}.
-----
Definition segment_circle := forall A B P Q,\n  InCircle P A B ->\n  OutCircle Q A B ->\n  exists Z, Bet P Z Q /\ OnCircle Z A B.
-----
Definition one_point_line_circle := forall A B U V P,\n  Col U V P -> U <> V -> Bet A P B ->\n  exists Z, Col U V Z /\ OnCircle Z A B.
-----
Definition two_points_line_circle := forall A B U V P,\n  Col U V P -> U <> V -> Bet A P B ->\n  exists Z1 Z2, Col U V Z1 /\ OnCircle Z1 A B /\\n                Col U V Z2 /\ OnCircle Z2 A B /\\n                Bet Z1 P Z2 /\ (P <> B -> Z1 <> Z2).
-----
Definition circle_circle := forall A B C D P Q,\n  OnCircle P C D ->\n  OnCircle Q C D ->\n  InCircle P A B ->\n  OutCircle Q A B ->\n  exists Z, OnCircle Z A B /\ OnCircle Z C D.
-----
Definition circle_circle_bis := forall A B C D P Q,\n  OnCircle P C D ->\n  InCircle P A B ->\n  OnCircle Q A B ->\n  InCircle Q C D ->\n  exists Z, OnCircle Z A B /\ OnCircle Z C D.
-----
Definition circle_circle_axiom := forall A B C D B' D',\n  Cong A B' A B -> Cong C D' C D ->\n  Bet A D' B -> Bet C B' D ->\n  exists Z, Cong A Z A B /\ Cong C Z C D.
-----
Definition circle_circle_two := forall A B C D P Q,\n  OnCircle P C D ->\n  OnCircle Q C D ->\n  InCircle P A B ->\n  OutCircle Q A B ->\n  exists Z1 Z2,\n    OnCircle Z1 A B /\ OnCircle Z1 C D /\\n    OnCircle Z2 A B /\ OnCircle Z2 C D /\\n    (InCircleS P A B -> OutCircleS Q A B -> Z1<>Z2).
-----
Definition euclid_s_prop_1_22 := forall A B C D E F A' B' C' D' E' F',\n  SumS A B C D E' F' -> SumS A B E F C' D' -> SumS C D E F A' B' ->\n  Le E F E' F' -> Le C D C' D' -> Le A B A' B' ->\n  exists P Q R, Cong P Q A B /\ Cong P R C D /\ Cong Q R E F.
-----
Definition Nested (A B:nat -> Tpoint -> Prop) :=\n  (forall n, exists An, A n An) /\ (forall n, exists Bn, B n Bn) /\\n  forall n An Am Bm Bn,\n    A n An -> A (S n) Am -> B (S n) Bm -> B n Bn -> Bet An Am Bm /\ Bet Am Bm Bn /\ Am <> Bm.
-----
Definition cantor_s_axiom := forall A B, Nested A B ->\n  exists X, forall n An Bn, A n An -> B n Bn -> Bet An X Bn.
-----
Definition dedekind_s_axiom := forall (Alpha Beta : Tpoint -> Prop),\n  (exists A, forall X Y, Alpha X -> Beta Y -> Bet A X Y) ->\n  (exists B, forall X Y, Alpha X -> Beta Y -> Bet X B Y).
-----
Inductive FOF : Prop -> Prop :=\n| eq_fof : forall A B:Tpoint, FOF (A = B)\n| bet_fof : forall A B C, FOF (Bet A B C)\n| cong_fof : forall A B C D, FOF (Cong A B C D)\n| not_fof : forall P, FOF P -> FOF (~ P)\n| and_fof : forall P Q, FOF P -> FOF Q -> FOF (P /\ Q)\n| or_fof : forall P Q, FOF P -> FOF Q -> FOF (P \/ Q)\n| implies_fof : forall P Q, FOF P -> FOF Q -> FOF (P -> Q)\n| forall_fof : forall P, (forall (A:Tpoint), FOF (P A)) -> FOF (forall A, P A)\n| exists_fof : forall P, (forall (A:Tpoint), FOF (P A)) -> FOF (exists A, P A).
-----
Definition first_order_dedekind := forall Alpha Beta,\n  (forall X, FOF (Alpha X)) -> (forall Y, FOF (Beta Y)) ->\n  (exists A, forall X Y, Alpha X -> Beta Y -> Bet A X Y) ->\n  (exists B, forall X Y, Alpha X -> Beta Y -> Bet X B Y).
-----
Definition archimedes_axiom := forall A B C D, A <> B -> Reach A B C D.
-----
Definition aristotle_s_axiom := forall P Q A B C,\n  ~ Col A B C -> Acute A B C ->\n  exists X Y, Out B A X /\ Out B C Y /\ Per B X Y /\ Lt P Q X Y.
-----
Definition greenberg_s_axiom := forall P Q R A B C,\n  ~ Col A B C ->\n  Acute A B C -> Q <> R -> Per P Q R ->\n  exists S, LtA P S Q A B C /\ Out Q S R.
-----
End Continuity_Defs.
-----
Section Completeness.
-----
Context `{Tn:Tarski_neutral_dimensionless}.
-----
Definition inj {T1 T2:Type} (f:T1->T2) := forall A B, f A = f B -> A = B.
-----
Definition pres_bet {Tm: Tarski_neutral_dimensionless}\n  (f : @Tpoint Tn -> @Tpoint Tm) := forall A B C, Bet A B C -> Bet (f A) (f B) (f C).
-----
Definition pres_cong {Tm: Tarski_neutral_dimensionless}\n  (f : @Tpoint Tn -> @Tpoint Tm) := forall A B C D, Cong A B C D -> Cong (f A) (f B) (f C) (f D).
-----
Definition extension {Tm: Tarski_neutral_dimensionless} f := inj f /\ pres_bet f /\ pres_cong f.
-----
Definition completeness_for_planes := forall (Tm: Tarski_neutral_dimensionless)\n  (Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm)\n  (M : Tarski_2D Tm2)\n  (f : @Tpoint Tn -> @Tpoint Tm),\n  @archimedes_axiom Tm ->\n  extension f ->\n  forall A, exists B, f B = A.
-----
Definition completeness_for_3d_spaces := forall (Tm: Tarski_neutral_dimensionless)\n  (Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm)\n  (M : Tarski_3D Tm2)\n  (f : @Tpoint Tn -> @Tpoint Tm),\n  @archimedes_axiom Tm ->\n  extension f ->\n  forall A, exists B, f B = A.
-----
Definition inj_line {T:Type} (f:Tpoint->T) P Q := forall A B, Col P Q A -> Col P Q B ->\n  f A = f B -> A = B.
-----
Definition pres_bet_line {Tm: Tarski_neutral_dimensionless}\n  (f : @Tpoint Tn -> @Tpoint Tm) P Q := forall A B C, Col P Q A -> Col P Q B -> Col P Q C ->\n  Bet A B C -> Bet (f A) (f B) (f C).
-----
Definition pres_cong_line {Tm: Tarski_neutral_dimensionless}\n  (f : @Tpoint Tn -> @Tpoint Tm) P Q := forall A B C D,\n  Col P Q A -> Col P Q B -> Col P Q C -> Col P Q D ->\n  Cong A B C D -> Cong (f A) (f B) (f C) (f D).
-----
Definition line_extension {Tm: Tarski_neutral_dimensionless} f P Q :=\n  P <> Q /\ inj_line f P Q /\ pres_bet_line f P Q /\ pres_cong_line f P Q.
-----
Definition line_completeness := forall (Tm: Tarski_neutral_dimensionless)\n  (Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm)\n  P Q\n  (f : @Tpoint Tn -> @Tpoint Tm),\n  @archimedes_axiom Tm ->\n  line_extension f P Q ->\n  forall A, Col (f P) (f Q) A -> exists B, Col P Q B /\ f B = A.
-----
End Completeness.
-----
