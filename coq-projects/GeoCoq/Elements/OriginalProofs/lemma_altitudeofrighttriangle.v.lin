c1615e6ab618943a38829c53bf09fb0c
Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.
Require Export GeoCoq.Elements.OriginalProofs.lemma_8_7.
Require Export GeoCoq.Elements.OriginalProofs.lemma_legsmallerhypotenuse.
Require Export GeoCoq.Elements.OriginalProofs.lemma_trichotomy2.
Require Export GeoCoq.Elements.OriginalProofs.lemma_tworays.
Section Euclid.
Context `{Ax:euclidean_neutral_ruler_compass}.
Lemma lemma_altitudeofrighttriangle : 
   forall A B C M p, 
   Per B A C -> Per A M p -> Col B C p -> Col B C M ->
   BetS B M C.
Proof.
  intros.
  assert (nCol B A C).
  {
    conclude lemma_rightangleNC.
  }
  {
    idtac.
    assert (neq C B).
    {
      forward_using lemma_NCdistinct.
    }
    {
      idtac.
      assert (~ eq B M).
      {
        intro.
        assert (Per A B p).
        {
          conclude cn_equalitysub.
        }
        {
          idtac.
          assert (Col p B C).
          {
            forward_using lemma_collinearorder.
          }
          {
            idtac.
            assert (Per p B A).
            {
              conclude lemma_8_2.
            }
            {
              idtac.
              assert (Per C B A).
              {
                conclude lemma_collinearright.
              }
              {
                idtac.
                assert (~ Per C B A).
                {
                  conclude lemma_8_7.
                }
                {
                  idtac.
                  contradict.
                }
              }
            }
          }
        }
      }
      {
        assert (Per p M A).
        {
          conclude lemma_8_2.
        }
        {
          idtac.
          assert (Col C B p).
          {
            forward_using lemma_collinearorder.
          }
          {
            idtac.
            assert (Col C B M).
            {
              forward_using lemma_collinearorder.
            }
            {
              idtac.
              assert (nCol B A C).
              {
                conclude lemma_rightangleNC.
              }
              {
                idtac.
                assert (neq C B).
                {
                  forward_using lemma_NCdistinct.
                }
                {
                  idtac.
                  assert (Col B p M).
                  {
                    conclude lemma_collinear4.
                  }
                  {
                    idtac.
                    assert (Col p M B).
                    {
                      forward_using lemma_collinearorder.
                    }
                    {
                      idtac.
                      assert (Per B M A).
                      {
                        conclude lemma_collinearright.
                      }
                      {
                        idtac.
                        assert (Col B C p).
                        {
                          forward_using lemma_collinearorder.
                        }
                        {
                          idtac.
                          assert (Col B C M).
                          {
                            forward_using lemma_collinearorder.
                          }
                          {
                            idtac.
                            assert (neq B C).
                            {
                              conclude lemma_inequalitysymmetric.
                            }
                            {
                              idtac.
                              assert (Col C p M).
                              {
                                conclude lemma_collinear4.
                              }
                              {
                                idtac.
                                assert (Col p M C).
                                {
                                  forward_using lemma_collinearorder.
                                }
                                {
                                  idtac.
                                  assert (Per C A B).
                                  {
                                    conclude lemma_8_2.
                                  }
                                  {
                                    idtac.
                                    assert (~ eq C M).
                                    {
                                      intro.
                                      assert (Per A C p).
                                      {
                                        conclude cn_equalitysub.
                                      }
                                      {
                                        idtac.
                                        assert (Col p C B).
                                        {
                                          forward_using lemma_collinearorder.
                                        }
                                        {
                                          idtac.
                                          assert (Per p C A).
                                          {
                                            conclude lemma_8_2.
                                          }
                                          {
                                            idtac.
                                            assert (Per B C A).
                                            {
                                              conclude lemma_collinearright.
                                            }
                                            {
                                              idtac.
                                              assert (~ Per B C A).
                                              {
                                                conclude lemma_8_7.
                                              }
                                              {
                                                idtac.
                                                contradict.
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      assert (Per C M A).
                                      {
                                        conclude lemma_collinearright.
                                      }
                                      {
                                        idtac.
                                        assert (Per A M B).
                                        {
                                          conclude lemma_8_2.
                                        }
                                        {
                                          idtac.
                                          assert (Per A M C).
                                          {
                                            conclude lemma_8_2.
                                          }
                                          {
                                            idtac.
                                            assert (Lt M B A B).
                                            {
                                              conclude lemma_legsmallerhypotenuse.
                                            }
                                            {
                                              idtac.
                                              assert (Lt B A B C).
                                              {
                                                conclude lemma_legsmallerhypotenuse.
                                              }
                                              {
                                                idtac.
                                                assert (Cong B A A B).
                                                {
                                                  conclude cn_equalityreverse.
                                                }
                                                {
                                                  idtac.
                                                  assert (Lt A B B C).
                                                  {
                                                    conclude lemma_lessthancongruence2.
                                                  }
                                                  {
                                                    idtac.
                                                    assert (Lt M B B C).
                                                    {
                                                      conclude lemma_lessthantransitive.
                                                    }
                                                    {
                                                      idtac.
                                                      assert (Cong M B B M).
                                                      {
                                                        conclude cn_equalityreverse.
                                                      }
                                                      {
                                                        idtac.
                                                        assert (Lt B M B C).
                                                        {
                                                          conclude lemma_lessthancongruence2.
                                                        }
                                                        {
                                                          idtac.
                                                          assert (Lt M C A C).
                                                          {
                                                            conclude lemma_legsmallerhypotenuse.
                                                          }
                                                          {
                                                            idtac.
                                                            assert (Cong M C C M).
                                                            {
                                                              conclude cn_equalityreverse.
                                                            }
                                                            {
                                                              idtac.
                                                              assert (Lt C M A C).
                                                              {
                                                                conclude lemma_lessthancongruence2.
                                                              }
                                                              {
                                                                idtac.
                                                                assert (Lt A C B C).
                                                                {
                                                                  conclude lemma_legsmallerhypotenuse.
                                                                }
                                                                {
                                                                  idtac.
                                                                  assert (Lt C M B C).
                                                                  {
                                                                    conclude lemma_lessthantransitive.
                                                                  }
                                                                  {
                                                                    idtac.
                                                                    assert (~ BetS M B C).
                                                                    {
                                                                      intro.
                                                                      assert (BetS C B M).
                                                                      {
                                                                        conclude axiom_betweennesssymmetry.
                                                                      }
                                                                      {
                                                                        idtac.
                                                                        assert (Cong C B C B).
                                                                        {
                                                                          conclude cn_congruencereflexive.
                                                                        }
                                                                        {
                                                                          idtac.
                                                                          assert (Lt C B C M).
                                                                          {
                                                                            conclude_def Lt .
                                                                          }
                                                                          {
                                                                            idtac.
                                                                            assert (Cong C B B C).
                                                                            {
                                                                              conclude cn_equalityreverse.
                                                                            }
                                                                            {
                                                                              idtac.
                                                                              assert (Lt B C C M).
                                                                              {
                                                                                conclude lemma_lessthancongruence2.
                                                                              }
                                                                              {
                                                                                idtac.
                                                                                assert (~ Lt C M B C).
                                                                                {
                                                                                  conclude lemma_trichotomy2.
                                                                                }
                                                                                {
                                                                                  idtac.
                                                                                  contradict.
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    {
                                                                      assert ((eq B C \/ eq B M \/ eq C M \/ BetS C B M \/ BetS B C M \/ BetS B M C)).
                                                                      {
                                                                        conclude_def Col .
                                                                      }
                                                                      {
                                                                        idtac.
                                                                        assert (Out B C M).
                                                                        {
                                                                          by cases on (eq B C \/ eq B M \/ eq C M \/ BetS C B M \/ BetS B C M \/ BetS B M C).
                                                                          {
                                                                            assert (~ ~ Out B C M).
                                                                            {
                                                                              intro.
                                                                              contradict.
                                                                            }
                                                                            {
                                                                              close.
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (~ ~ Out B C M).
                                                                            {
                                                                              intro.
                                                                              contradict.
                                                                            }
                                                                            {
                                                                              close.
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (~ ~ Out B C M).
                                                                            {
                                                                              intro.
                                                                              contradict.
                                                                            }
                                                                            {
                                                                              close.
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (~ ~ Out B C M).
                                                                            {
                                                                              intro.
                                                                              assert (BetS M B C).
                                                                              {
                                                                                conclude axiom_betweennesssymmetry.
                                                                              }
                                                                              {
                                                                                idtac.
                                                                                contradict.
                                                                              }
                                                                            }
                                                                            {
                                                                              close.
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (Out B C M).
                                                                            {
                                                                              conclude lemma_ray4.
                                                                            }
                                                                            {
                                                                              idtac.
                                                                              close.
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (Out B M C).
                                                                            {
                                                                              conclude lemma_ray4.
                                                                            }
                                                                            {
                                                                              idtac.
                                                                              assert (Out B C M).
                                                                              {
                                                                                conclude lemma_ray5.
                                                                              }
                                                                              {
                                                                                idtac.
                                                                                close.
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        {
                                                                          assert (~ BetS B C M).
                                                                          {
                                                                            intro.
                                                                            assert (Cong B C B C).
                                                                            {
                                                                              conclude cn_congruencereflexive.
                                                                            }
                                                                            {
                                                                              idtac.
                                                                              assert (Lt B C B M).
                                                                              {
                                                                                conclude_def Lt .
                                                                              }
                                                                              {
                                                                                idtac.
                                                                                assert (~ Lt B M B C).
                                                                                {
                                                                                  conclude lemma_trichotomy2.
                                                                                }
                                                                                {
                                                                                  idtac.
                                                                                  contradict.
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          {
                                                                            assert (Out C B M).
                                                                            {
                                                                              by cases on (eq B C \/ eq B M \/ eq C M \/ BetS C B M \/ BetS B C M \/ BetS B M C).
                                                                              {
                                                                                assert (~ ~ Out C B M).
                                                                                {
                                                                                  intro.
                                                                                  contradict.
                                                                                }
                                                                                {
                                                                                  close.
                                                                                }
                                                                              }
                                                                              {
                                                                                assert (~ ~ Out C B M).
                                                                                {
                                                                                  intro.
                                                                                  contradict.
                                                                                }
                                                                                {
                                                                                  close.
                                                                                }
                                                                              }
                                                                              {
                                                                                assert (~ ~ Out C B M).
                                                                                {
                                                                                  intro.
                                                                                  contradict.
                                                                                }
                                                                                {
                                                                                  close.
                                                                                }
                                                                              }
                                                                              {
                                                                                assert (Out C B M).
                                                                                {
                                                                                  conclude lemma_ray4.
                                                                                }
                                                                                {
                                                                                  idtac.
                                                                                  close.
                                                                                }
                                                                              }
                                                                              {
                                                                                assert (~ ~ Out C B M).
                                                                                {
                                                                                  intro.
                                                                                  contradict.
                                                                                }
                                                                                {
                                                                                  close.
                                                                                }
                                                                              }
                                                                              {
                                                                                assert (BetS C M B).
                                                                                {
                                                                                  conclude axiom_betweennesssymmetry.
                                                                                }
                                                                                {
                                                                                  idtac.
                                                                                  assert (Out C M B).
                                                                                  {
                                                                                    conclude lemma_ray4.
                                                                                  }
                                                                                  {
                                                                                    idtac.
                                                                                    assert (Out C B M).
                                                                                    {
                                                                                      conclude lemma_ray5.
                                                                                    }
                                                                                    {
                                                                                      idtac.
                                                                                      close.
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            {
                                                                              assert (BetS B M C).
                                                                              {
                                                                                conclude lemma_tworays.
                                                                              }
                                                                              {
                                                                                idtac.
                                                                                close.
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
Qed.
End Euclid.
