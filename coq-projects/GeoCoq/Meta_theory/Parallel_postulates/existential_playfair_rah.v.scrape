Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Annexes.saccheri.
-----
Require Import GeoCoq.Tarski_dev.Annexes.perp_bisect.
-----
Require Import GeoCoq.Tarski_dev.Ch12_parallel.
-----
Section existential_playfair_rah.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma existential_playfair__rah :\n  existential_playfair_s_postulate ->\n  postulate_of_right_saccheri_quadrilaterals.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : existential_playfair_s_postulate, postulate_of_right_saccheri_quadrilaterals
+++++
Proof.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : existential_playfair_s_postulate, postulate_of_right_saccheri_quadrilaterals
+++++
intro HP.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.

*****
HP : existential_playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].

*****
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].

*****
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 P)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].

*****
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.

*****
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HA3 : exists A3, Col A1 A2 A3 /\ A3 <> Q).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).

*****
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A3 : Tpoint => and (Col A1 A2 A3) (not (eq A3 Q)))
+++++
destruct (eq_dec_points A1 Q).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).

*****
H : eq A1 Q
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A3 : Tpoint => and (Col A1 A2 A3) (not (eq A3 Q)))
+++++
subst.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
subst.

*****
HNC1 : not (Col Q A2 P)
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par Q A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par Q A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HCcol1 : Col Q A2 Q
HPerp1 : Perp Q A2 P Q
A2,P,Q : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A3 : Tpoint => and (Col Q A2 A3) (not (eq A3 Q)))
+++++
exists A2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
subst.
exists A2.

*****
HNC1 : not (Col Q A2 P)
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par Q A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par Q A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HCcol1 : Col Q A2 Q
HPerp1 : Perp Q A2 P Q
A2,P,Q : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col Q A2 A2) (not (eq A2 Q))
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
subst.
exists A2.
assert_diffs.

*****
H4 : not (eq Q P)
H1 : not (eq A2 P)
H2 : not (eq Q A2)
HNC1 : not (Col Q A2 P)
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par Q A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par Q A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HCcol1 : Col Q A2 Q
HPerp1 : Perp Q A2 P Q
A2,P,Q : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col Q A2 A2) (not (eq A2 Q))
+++++
split.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
subst.
exists A2.
assert_diffs.
split.

*****
H4 : not (eq Q P)
H1 : not (eq A2 P)
H2 : not (eq Q A2)
HNC1 : not (Col Q A2 P)
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par Q A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par Q A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HCcol1 : Col Q A2 Q
HPerp1 : Perp Q A2 P Q
A2,P,Q : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q A2 A2
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
subst.
exists A2.
assert_diffs.
split.

*****
H4 : not (eq Q P)
H1 : not (eq A2 P)
H2 : not (eq Q A2)
HNC1 : not (Col Q A2 P)
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par Q A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par Q A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HCcol1 : Col Q A2 Q
HPerp1 : Perp Q A2 P Q
A2,P,Q : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A2 Q)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).

*****
H : not (eq A1 Q)
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A3 : Tpoint => and (Col A1 A2 A3) (not (eq A3 Q)))
+++++
exists A1.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
exists A1.

*****
H : not (eq A1 Q)
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col A1 A2 A1) (not (eq A1 Q))
+++++
split.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
exists A1.
split.

*****
H : not (eq A1 Q)
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A1
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct (eq_dec_points A1 Q).
exists A1.
split.

*****
H : not (eq A1 Q)
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 Q)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).

*****
HA3 : ex (fun A3 : Tpoint => and (Col A1 A2 A3) (not (eq A3 Q)))
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct HA3 as [A3 []].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].

*****
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].

*****
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert_diffs.

*****
H5 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
auto.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].

*****
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HPar1 : Par A1 A2 P R).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).

*****
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R
+++++
apply l12_9 with P Q.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A1 P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A1 P
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A1 R
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A1 R
+++++
apply coplanar_perm_3, col_cop__cop with A3.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P R Q A3
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q A3)
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q A3 A1
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.
Cop.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q A3 A1
+++++
ColR.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A2 P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A2 P
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A2 R
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q A2 R
+++++
apply coplanar_perm_3, col_cop__cop with A3.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P R Q A3
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q A3)
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q A3 A2
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.
Perp.
apply coplanar_perm_3, col_cop__cop with A3.
Cop.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q A3 A2
+++++
ColR.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 P Q
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert_diffs.
apply l12_9 with P Q.

*****
H5 : not (eq R P)
H2 : not (eq P Q)
H6 : not (eq A1 P)
H3 : not (eq A2 P)
H4 : not (eq A1 A2)
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P R P Q
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).

*****
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HCop1 : Coplanar A1 A2 P R).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).

*****
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 P R
+++++
apply par__coplanar, HPar1.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HNC2 : Par_strict A1 A2 P R).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A2 P R
+++++
apply par_not_col_strict with P.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
apply par_not_col_strict with P.

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
apply par_not_col_strict with P.

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R P
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
apply par_not_col_strict with P.

*****
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 P)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).

*****
HNC2 : Par_strict A1 A2 P R
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.

*****
HNC2 : Par_strict A1 A2 P R
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
apply par_strict_not_col_4 in HNC2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.

*****
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].

*****
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 R)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HPar2 : Par P Q R S).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P Q R S
+++++
apply l12_9 with A1 A2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 P R
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 P S
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.
Perp.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 P S
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 Q R
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.
Perp.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 Q R
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 Q S
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.
Perp.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 Q S
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P Q A1 A2
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
apply l12_9 with A1 A2.

*****
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp R S A1 A2
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).

*****
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.

*****
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HNC3 : ~ Col P Q R).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).

*****
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q R)
+++++
apply perp_not_col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
apply perp_not_col.

*****
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P Q R P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HNC4 : Par_strict P Q R S).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict P Q R S
+++++
apply par_not_col_strict with R.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P Q R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q R)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).

*****
HNC4 : Par_strict P Q R S
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.

*****
HNC4 : Par_strict P Q R S
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
apply par_strict_not_col_3 in HNC4.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.

*****
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].

*****
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col R S P)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].

*****
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.

*****
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (HPar3 : Par A1 A2 P R').
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').

*****
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R'
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R'
+++++
apply l12_9 with R S.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A1 P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A1 P
+++++
apply coplanar_perm_5, col_cop__cop with A2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A2.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R P A1 A2
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A2.
Col.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R P A1 A2
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A2.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A2)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A2.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A1 R'
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A1 R'
+++++
exists R'.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (and (Col R S R') (Col A1 R' R')) (or (and (Col R A1 R') (Col S R' R')) (and (Col R R' R') (Col S A1 R')))
+++++
left.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col R S R') (Col A1 R' R')
+++++
split.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.
split.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.
split.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 R' R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A2 P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A2 P
+++++
apply coplanar_perm_5, col_cop__cop with A1.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A1.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R P A2 A1
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A1.
Col.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R P A2 A1
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A1.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A2 A1)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
apply coplanar_perm_5, col_cop__cop with A1.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A2 A1 S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A2 R'
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar R S A2 R'
+++++
exists R'.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (and (Col R S R') (Col A2 R' R')) (or (and (Col R A2 R') (Col S R' R')) (and (Col R R' R') (Col S A2 R')))
+++++
left.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col R S R') (Col A2 R' R')
+++++
split.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.
split.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.
Perp.
exists R'.
left.
split.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A2 R' R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 R S
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
assert_diffs.
apply l12_9 with R S.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P R' R S
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').

*****
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
destruct (HP P R P R') as [_ HCol4].
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].

*****
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].

*****
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P P R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].

*****
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A1 A2 P R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].

*****
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P P R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
assert (R = R').
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq R R'
+++++
apply l6_21 with P R S R.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P R S)
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P R S)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S R)
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S R)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R R
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R R'
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S R R
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S R R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.

*****
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S R R'
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
apply l6_21 with P R S R.
assert_diffs.

*****
H12 : not (eq P R')
H14 : not (eq A1 P)
H10 : not (eq A2 P)
H11 : not (eq A1 R)
H8 : not (eq A2 R)
H9 : not (eq A1 A2)
H5 : not (eq Q R)
H7 : not (eq P Q)
H6 : not (eq R P)
H3 : not (eq S P)
H4 : not (eq R S)
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S R R'
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').

*****
H1 : eq R R'
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.

*****
H1 : eq R R'
HCol4 : Col R' P R
HPar3 : Par A1 A2 P R'
HPerp4 : Perp R S P R'
HCcol3 : Col R S R'
R' : Tpoint
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
treat_equalities.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
postulate_of_right_saccheri_quadrilaterals
+++++
rewrite <- (lam_per__rah P Q S R).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per Q S R
+++++
apply perp_in_per_1 with S S.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at S Q S R S
+++++
apply l8_14_2_1b_bis.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp Q S R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp Q S R S
+++++
apply perp_sym.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp R S Q S
+++++
apply perp_col0 with A1 A2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
assert (HPs : Par_strict P Q R S).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict P Q R S
+++++
apply par_not_col_strict with R.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P Q R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q R)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).

*****
HPs : Par_strict P Q R S
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
idtac.

*****
HPs : Par_strict P Q R S
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
apply par_strict_not_col_2 in HPs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.
Col.
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
assert_diffs.

*****
H15 : not (eq A1 P)
H11 : not (eq A2 P)
H12 : not (eq A1 R)
H7 : not (eq A2 R)
H10 : not (eq A1 A2)
H8 : not (eq P Q)
H9 : not (eq R P)
H5 : not (eq S P)
H6 : not (eq Q S)
H3 : not (eq R S)
H4 : not (eq Q R)
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q S)
+++++
auto.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.
Col.
apply perp_sym.
apply perp_col0 with A1 A2.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S Q S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
apply perp_in_per_1 with S S.
apply l8_14_2_1b_bis.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Lambert P Q S R
+++++
assert (HPs : Par_strict P Q R S).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict P Q R S
+++++
apply par_not_col_strict with R.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P Q R S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
apply par_not_col_strict with R.

*****
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q R)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).

*****
HPs : Par_strict P Q R S
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Lambert P Q S R
+++++
idtac.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.

*****
HPs : Par_strict P Q R S
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Lambert P Q S R
+++++
apply par_strict_not_col_2 in HPs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Lambert P Q S R
+++++
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Par P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per Q P R) (and (Per P R S) (and (Per P Q S) (Coplanar P Q S R)))
+++++
apply par__coplanar in HPar2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per Q P R) (and (Per P R S) (and (Per P Q S) (Coplanar P Q S R)))
+++++
repeat split.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per Q P R
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per Q P R
+++++
apply perp_in_per_1 with P P.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with P P.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at P Q P R P
+++++
apply l8_14_2_1b_bis.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with P P.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp Q P R P
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with P P.
apply l8_14_2_1b_bis.
Col.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp Q P R P
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with P P.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q P
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with P P.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P R P
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P R S
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P R S
+++++
apply perp_in_per_1 with R R.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with R R.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at R P R S R
+++++
apply l8_14_2_1b_bis.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with R R.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P R S R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with R R.
apply l8_14_2_1b_bis.
Col.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P R S R
+++++
Perp.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with R R.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R P R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with R R.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col R S R
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P Q S
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P Q S
+++++
apply perp_in_per_1 with Q Q.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp_at Q P Q S Q
+++++
apply l8_14_2_1b_bis.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P Q S Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp P Q S Q
+++++
apply perp_col0 with A1 A2.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 P Q
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.
assert_diffs.

*****
H15 : not (eq A1 P)
H11 : not (eq A2 P)
H12 : not (eq A1 R)
H7 : not (eq A2 R)
H10 : not (eq A1 A2)
H8 : not (eq P Q)
H9 : not (eq R P)
H5 : not (eq S P)
H6 : not (eq Q S)
H3 : not (eq R S)
H4 : not (eq Q R)
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 P Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S Q)
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.
assert_diffs.

*****
H15 : not (eq A1 P)
H11 : not (eq A2 P)
H12 : not (eq A1 R)
H7 : not (eq A2 R)
H10 : not (eq A1 A2)
H8 : not (eq P Q)
H9 : not (eq R P)
H5 : not (eq S P)
H6 : not (eq Q S)
H3 : not (eq R S)
H4 : not (eq Q R)
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S Q)
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 S
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.
assert_diffs.

*****
H15 : not (eq A1 P)
H11 : not (eq A2 P)
H12 : not (eq A1 R)
H7 : not (eq A2 R)
H10 : not (eq A1 A2)
H8 : not (eq P Q)
H9 : not (eq R P)
H5 : not (eq S P)
H6 : not (eq Q S)
H3 : not (eq R S)
H4 : not (eq Q R)
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 S
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 Q
+++++
assert_diffs.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.
Col.
apply perp_col0 with A1 A2.
assert_diffs.

*****
H15 : not (eq A1 P)
H11 : not (eq A2 P)
H12 : not (eq A1 R)
H7 : not (eq A2 R)
H10 : not (eq A1 A2)
H8 : not (eq P Q)
H9 : not (eq R P)
H5 : not (eq S P)
H6 : not (eq Q S)
H3 : not (eq R S)
H4 : not (eq Q R)
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q P Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.
Cop.
apply perp_in_per_1 with Q Q.
apply l8_14_2_1b_bis.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q S Q
+++++
Col.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].
Col.
assert (HA3 : exists A3, Col A1 A2 A3 /\\ A3 <> Q).
destruct HA3 as [A3 []].
destruct (ex_perp_cop P Q P A3) as [R [HPerp2 HCop]].
assert (HPar1 : Par A1 A2 P R).
assert (HCop1 : Coplanar A1 A2 P R).
idtac.
assert (HNC2 : Par_strict A1 A2 P R).
idtac.
apply par_strict_not_col_4 in HNC2.
destruct (l8_18_existence A1 A2 R) as [S [HCcol2 HPerp3]].
Col.
assert (HPar2 : Par P Q R S).
idtac.
assert (HNC3 : ~ Col P Q R).
idtac.
assert (HNC4 : Par_strict P Q R S).
idtac.
apply par_strict_not_col_3 in HNC4.
destruct (l8_18_existence R S P) as [R' [HCcol3 HPerp4]].
Col.
assert (HPar3 : Par A1 A2 P R').
destruct (HP P R P R') as [_ HCol4].
Col.
assert (R = R').
idtac.
treat_equalities.
rewrite <- (lam_per__rah P Q S R).
assert (HPs : Par_strict P Q R S).
idtac.
apply par_strict_not_col_2 in HPs.
repeat try (split; [intro; treat_equalities; assert_diffs; intuition|]).
apply par__coplanar in HPar2.
repeat split.

*****
HPs : not (Col Q R S)
HPerp4 : Perp R S P R
HNC4 : not (Col R S P)
HNC3 : not (Col P Q R)
HPar2 : Coplanar P Q R S
HPerp3 : Perp A1 A2 R S
HCcol2 : Col A1 A2 S
S : Tpoint
HNC2 : not (Col A1 A2 R)
HCop1 : Coplanar A1 A2 P R
HPar1 : Par A1 A2 P R
HCop : Coplanar P Q A3 R
HPerp2 : Perp P Q R P
R : Tpoint
H0 : not (eq A3 Q)
H : Col A1 A2 A3
A3 : Tpoint
HPerp1 : Perp A1 A2 P Q
HCcol1 : Col A1 A2 Q
Q : Tpoint
HP : forall (B1 B2 C1 C2 : Tpoint) (_ : Par A1 A2 B1 B2) \n (_ : Col P B1 B2) (_ : Par A1 A2 C1 C2) (_ : Col P C1 C2),\nand (Col C1 B1 B2) (Col C2 B1 B2)
HNC1 : not (Col A1 A2 P)
A1,A2,P : Tpoint
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P Q S R
+++++
Cop.
-----
Lemma existential_playfair__rah : existential_playfair_s_postulate -> postulate_of_right_saccheri_quadrilaterals.
Proof.
intro HP.
destruct HP as [A1 [A2 [P [HNC1 HP]]]].
destruct (l8_18_existence A1 A2 P) as [Q [HCcol1 HPerp1]].

*****

*****

+++++
Qed.
-----
End existential_playfair_rah.
-----
