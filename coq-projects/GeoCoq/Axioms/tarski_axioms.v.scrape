Require Export GeoCoq.Utils.general_tactics.
-----
Class Tarski_neutral_dimensionless :=\n{\n Tpoint : Type;\n Bet : Tpoint -> Tpoint -> Tpoint -> Prop;\n Cong : Tpoint -> Tpoint -> Tpoint -> Tpoint -> Prop;\n cong_pseudo_reflexivity : forall A B, Cong A B B A;\n cong_inner_transitivity : forall A B C D E F,\n   Cong A B C D -> Cong A B E F -> Cong C D E F;\n cong_identity : forall A B C, Cong A B C C -> A = B;\n segment_construction : forall A B C D,\n   exists E, Bet A B E /\ Cong B E C D;\n five_segment : forall A A' B B' C C' D D',\n   Cong A B A' B' ->\n   Cong B C B' C' ->\n   Cong A D A' D' ->\n   Cong B D B' D' ->\n   Bet A B C -> Bet A' B' C' -> A <> B -> Cong C D C' D';\n between_identity : forall A B, Bet A B A -> A = B;\n inner_pasch : forall A B C P Q,\n   Bet A P C -> Bet B Q C ->\n   exists X, Bet P X B /\ Bet Q X A;\n PA : Tpoint;\n PB : Tpoint;\n PC : Tpoint;\n lower_dim : ~ (Bet PA PB PC \/ Bet PB PC PA \/ Bet PC PA PB)\n}.
-----
Class Tarski_neutral_dimensionless_with_decidable_point_equality\n `(Tn : Tarski_neutral_dimensionless) :=\n{\n point_equality_decidability : forall A B : Tpoint, A = B \/ ~ A = B\n}.
-----
Class Tarski_2D\n `(TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality) :=\n{\n upper_dim : forall A B C P Q,\n   P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q ->\n   (Bet A B C \/ Bet B C A \/ Bet C A B)\n}.
-----
Class Tarski_3D\n `(TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality) :=\n{\n S1 : Tpoint;\n S2 : Tpoint;\n S3 : Tpoint;\n S4 : Tpoint;\n lower_dim_3 : ~ exists X,\n   (Bet S1 S2 X \/ Bet S2 X S1 \/ Bet X S1 S2) /\ (Bet S3 S4 X \/ Bet S4 X S3 \/ Bet X S3 S4) \/\n   (Bet S1 S3 X \/ Bet S3 X S1 \/ Bet X S1 S3) /\ (Bet S2 S4 X \/ Bet S4 X S2 \/ Bet X S2 S4) \/\n   (Bet S1 S4 X \/ Bet S4 X S1 \/ Bet X S1 S4) /\ (Bet S2 S3 X \/ Bet S3 X S2 \/ Bet X S2 S3);\n upper_dim_3 : forall A B C P Q R,\n   P <> Q -> Q <> R -> P <> R ->\n   Cong A P A Q -> Cong B P B Q -> Cong C P C Q ->\n   Cong A P A R -> Cong B P B R -> Cong C P C R ->\n   (Bet A B C \/ Bet B C A \/ Bet C A B)\n}.
-----
Class Tarski_euclidean\n `(TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality) :=\n{\n euclid : forall A B C D T,\n   Bet A D T -> Bet B D C -> A<>D ->\n   exists X, exists Y,\n   Bet A B X /\ Bet A C Y /\ Bet X T Y\n}.
-----
Class Tarski_ruler_and_compass\n `(TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality) :=\n{\n circle_circle_continuity : forall A B C D B' D',\n   Cong A B' A B -> Cong C D' C D ->\n   Bet A D' B -> Bet C B' D ->\n   exists Z, Cong A Z A B /\ Cong C Z C D\n}.
-----
Class Tarski_continuous\n `(TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality) :=\n{\n continuity : forall (Alpha Beta : Tpoint -> Prop),\n   (exists A, forall X Y, Alpha X -> Beta Y -> Bet A X Y) ->\n   (exists B, forall X Y, Alpha X -> Beta Y -> Bet X B Y)\n}.
-----
