Require Export area_elimination_lemmas.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, \n(on_parallel_d X C A B r) -> \n(inter_ll Y C X E F) ->\n~ Col C A B ->\n(on_inter_line_parallel Y C E F A B).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).

*****

*****
forall (A B C E F0 X Y : Point) (r : F) (_ : on_parallel_d X C A B r) (_ : inter_ll Y C X E F0) (_ : not (Col C A B)), on_inter_line_parallel Y C E F0 A B
+++++
Proof.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.

*****

*****
forall (A B C E F0 X Y : Point) (r : F) (_ : on_parallel_d X C A B r) (_ : inter_ll Y C X E F0) (_ : not (Col C A B)), on_inter_line_parallel Y C E F0 A B
+++++
intro.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.

*****
A : Point
*****
forall (B C E F0 X Y : Point) (r : F) (_ : on_parallel_d X C A B r) (_ : inter_ll Y C X E F0) (_ : not (Col C A B)), on_inter_line_parallel Y C E F0 A B
+++++
unfold on_parallel_d.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.

*****
A : Point
*****
forall (B C E F0 X Y : Point) (r : F) (_ : and (not (eq A B)) (and (parallel X C A B) (eq (DSeg C X) (Fmult r (DSeg A B))))) (_ : inter_ll Y C X E F0) (_ : not (Col C A B)), on_inter_line_parallel Y C E F0 A B
+++++
unfold inter_ll.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.

*****
A : Point
*****
forall (B C E F0 X Y : Point) (r : F) (_ : and (not (eq A B)) (and (parallel X C A B) (eq (DSeg C X) (Fmult r (DSeg A B))))) (_ : and (Col Y C X) (and (Col Y E F0) (not (parallel C X E F0)))) (_ : not (Col C A B)), on_inter_line_parallel Y C E F0 A B
+++++
unfold on_inter_line_parallel.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.

*****
A : Point
*****
forall (B C E F0 X Y : Point) (r : F) (_ : and (not (eq A B)) (and (parallel X C A B) (eq (DSeg C X) (Fmult r (DSeg A B))))) (_ : and (Col Y C X) (and (Col Y E F0) (not (parallel C X E F0)))) (_ : not (Col C A B)), and (not (Col C A B)) (and (Col Y E F0) (and (parallel Y C A B) (not (parallel A B E F0))))
+++++
intros.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.

*****
H1 : not (Col C A B)
H0 : and (Col Y C X) (and (Col Y E F) (not (parallel C X E F)))
H : and (not (eq A B))\n (and (parallel X C A B) (eq (DSeg C X) (Fmult r (DSeg A B))))
r : field\.F
A,B,C,E,F,X,Y : Point
*****
and (not (Col C A B)) (and (Col Y E F) (and (parallel Y C A B) (not (parallel A B E F))))
+++++
DecompAndAll.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
and (not (Col C A B)) (and (Col Y E F) (and (parallel Y C A B) (not (parallel A B E F))))
+++++
repeat split.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (Col C A B)
+++++
try assumption.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
Col Y E F
+++++
try assumption.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel Y C A B
+++++
try assumption.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel Y C A B
+++++
assert (C<>X).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (eq C X)
+++++
unfold not.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
unfold not.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
forall _ : eq C X, False
+++++
intro.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
unfold not.
intro.

*****
H : eq C X
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
False
+++++
assert (parallel C X E F).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
unfold not.
intro.
assert (parallel C X E F).

*****
H : eq C X
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel C X E F
+++++
subst C.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
unfold not.
intro.
assert (parallel C X E F).
subst C.

*****
H6 : parallel X X A B
H7 : eq (DSeg X X) (Fmult r (DSeg A B))
H0 : not (eq A B)
H5 : not (parallel X X E F)
H4 : Col Y E F
H1 : not (Col X A B)
H2 : Col Y X X
r : field\.F
A,B,E,F,X,Y : Point
*****
parallel X X E F
+++++
Geometry.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
unfold not.
intro.
assert (parallel C X E F).

*****
H3 : parallel C X E F
H : eq C X
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
False
+++++
intuition.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel Y C A B
+++++
cut (parallel A B C Y).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
cut (parallel A B C Y).

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
forall _ : parallel A B C Y, parallel Y C A B
+++++
Geometry.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
cut (parallel A B C Y).

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel A B C Y
+++++
eapply col_par_par.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
cut (parallel A B C Y).
eapply col_par_par.

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (eq C ?D)
+++++
apply H.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
cut (parallel A B C Y).
eapply col_par_par.

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel A B C X
+++++
Geometry.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
assert (C<>X).
cut (parallel A B C Y).
eapply col_par_par.

*****
H : not (eq C X)
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
Col C X Y
+++++
Geometry.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (parallel A B E F)
+++++
try assumption.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (parallel A B E F)
+++++
unfold not.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.

*****
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
forall _ : parallel A B E F, False
+++++
intro.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.

*****
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
False
+++++
assert (parallel C X E F).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).

*****
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel C X E F
+++++
assert (parallel C X A B).
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).
assert (parallel C X A B).

*****
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel C X A B
+++++
Geometry.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).
assert (parallel C X A B).

*****
H3 : parallel C X A B
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel C X E F
+++++
eapply parallel_transitivity.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).
assert (parallel C X A B).
eapply parallel_transitivity.

*****
H3 : parallel C X A B
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
not (eq ?C ?D)
+++++
eauto.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).
assert (parallel C X A B).
eapply parallel_transitivity.

*****
H3 : parallel C X A B
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel C X A B
+++++
eauto.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).
assert (parallel C X A B).
eapply parallel_transitivity.

*****
H3 : parallel C X A B
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
parallel A B E F
+++++
eauto.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.
try assumption.
unfold not.
intro.
assert (parallel C X E F).

*****
H3 : parallel C X E F
H : parallel A B E F
H7 : eq (DSeg C X) (Fmult r (DSeg A B))
H6 : parallel X C A B
H0 : not (eq A B)
H5 : not (parallel C X E F)
H4 : Col Y E F
H2 : Col Y C X
H1 : not (Col C A B)
r : field\.F
A,B,C,E,F,X,Y : Point
*****
False
+++++
intuition.
-----
Theorem combine_inter_parallel : forall A B C E F X Y r, (on_parallel_d X C A B r) -> (inter_ll Y C X E F) -> ~ Col C A B -> (on_inter_line_parallel Y C E F A B).
Proof.
intro.
unfold on_parallel_d.
unfold inter_ll.
unfold on_inter_line_parallel.
intros.
DecompAndAll.
repeat split.

*****

*****

+++++
Qed.
-----
Ltac put_on_inter_line_parallel :=\n  repeat match goal with\n  | H:(on_parallel_d  ?X ?C ?A ?B), G:(inter_ll ?Y ?C ?X ?E ?F) |- _ =>\n         let T:= fresh in  assert (T:=combine_inter_parallel A B C E F X Y H G);clear H G\nend.
-----
