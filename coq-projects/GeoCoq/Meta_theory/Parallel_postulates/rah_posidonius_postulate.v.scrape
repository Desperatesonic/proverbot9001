Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Annexes.saccheri.
-----
Require Import GeoCoq.Tarski_dev.Ch12_parallel.
-----
Section rah_posidonius.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals ->\n  forall A1 A2 A3 B1 B2 B3,\n  Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 ->\n  Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 ->\n  Cong A3 B3 A1 B1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (_ : postulate_of_right_saccheri_quadrilaterals) (A1 A2 A3 B1 B2 B3 : Tpoint) (_ : Per A2 A1 B1) (_ : Per A1 A2 B2) (_ : Cong A1 B1 A2 B2) (_ : OS A1 A2 B1 B2) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3), Cong A3 B3 A1 B1
+++++
Proof.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (_ : postulate_of_right_saccheri_quadrilaterals) (A1 A2 A3 B1 B2 B3 : Tpoint) (_ : Per A2 A1 B1) (_ : Per A1 A2 B2) (_ : Cong A1 B1 A2 B2) (_ : OS A1 A2 B1 B2) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3), Cong A3 B3 A1 B1
+++++
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.

*****
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
assert (HSac : Saccheri A1 B1 B2 A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).

*****
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Saccheri A1 B1 B2 A2
+++++
repeat (split; finish).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).

*****
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
idtac.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.

*****
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).

*****
Hdiff : and (not (eq A1 B1))\n (and (not (eq B1 B2))\n (and (not (eq B2 A2))\n (and (not (eq A1 A2)) (and (not (eq A1 B2)) (not (eq B1 A2))))))
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
spliter.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.

*****
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
assert_diffs.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.

*****
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
elim(eq_dec_points A1 A3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).

*****
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq A1 A3, Cong A3 B3 A1 B1
+++++
intro.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.

*****
H5 : eq A1 A3
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
subst A3.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A1 B3 A1 B1
+++++
assert(B1 = B3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq B1 B3
+++++
idtac.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq B1 B3
+++++
apply (l6_21 B1 B2 A1 B1).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B1 B2 A1)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B1 B2 A1)
+++++
apply not_col_permutation_1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
apply not_col_permutation_1.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 B1 B2)
+++++
apply (sac__ncol123 _ _ _ A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
apply not_col_permutation_1.
apply (sac__ncol123 _ _ _ A2).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Saccheri A1 B1 B2 A2
+++++
assumption.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 B1)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B1
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 B1 B1
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 B1 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 B1 B3
+++++
unfold Saccheri in HSac.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : and (Per B1 A1 A2)\n (and (Per A1 A2 B2) (and (Cong A1 B1 B2 A2) (OS A1 A2 B1 B2)))
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 B1 B3
+++++
spliter.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 B1 B3
+++++
apply (cop_perp2__col _ _ _ A1 A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 B1 B3
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).
Perp.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 B1 B3
+++++
apply col_cop__cop with B2.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).
Perp.
apply col_cop__cop with B2.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 A2 B1 B2
+++++
Cop.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).
Perp.
apply col_cop__cop with B2.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B1 B2)
+++++
Cop.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).
Perp.
apply col_cop__cop with B2.

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B3
+++++
Cop.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 B1 A1 A2
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
idtac.
apply (l6_21 B1 B2 A1 B1).
Col.
unfold Saccheri in HSac.
spliter.
apply (cop_perp2__col _ _ _ A1 A2).

*****
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H9 : OS A1 A2 B1 B2
H8 : Cong A1 B1 B2 A2
H6 : Per A1 A2 B2
H5 : Per B1 A1 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 B3 A1 A2
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).

*****
H5 : eq B1 B3
H7 : not (eq A1 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A1 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A1
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A1 B3 A1 B1
+++++
subst.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
subst A3.
assert(B1 = B3).
subst.

*****
H7 : not (eq A1 B3)
H4 : not (eq B3 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
HSac : Saccheri A1 B3 B2 A2
H : not (eq A1 B3)
H0 : not (eq B3 B2)
HPerp : Perp A1 A2 A1 B3
HB : Col B3 B2 B3
HA : Col A1 A2 A1
HCong : Cong A1 B3 A2 B2
HOS : OS A1 A2 B3 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B3
A1,A2,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A1 B3 A1 B3
+++++
Cong.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).

*****
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq A1 A3), Cong A3 B3 A1 B1
+++++
intro.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.

*****
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].

*****
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A3 B3)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].

*****
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 B1)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].

*****
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.

*****
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
assert_diffs.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
assert(B3 = B'3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq B3 B'3
+++++
idtac.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq B3 B'3
+++++
assert(Par_strict B1 B2 A1 A3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A3
+++++
apply (par_strict_col_par_strict _ _ _ A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A3)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A2
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).
auto.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A2
+++++
apply par_strict_symmetry.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).
auto.
apply par_strict_symmetry.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A2 B1 B2
+++++
apply sac__par_strict1423.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).
auto.
apply par_strict_symmetry.
apply sac__par_strict1423.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Saccheri A1 B1 B2 A2
+++++
assumption.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (par_strict_col_par_strict _ _ _ A2).

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq B3 B'3
+++++
apply (l6_21 B1 B2 A3 B3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B1 B2 A3)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B1 B2 A3)
+++++
apply (par_strict_not_col_4 _ _ A1).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply (par_strict_not_col_4 _ _ A1).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A3 B3)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B'3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B'3
+++++
apply col_permutation_2.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B2 B'3 B1
+++++
assert (Coplanar A1 B2 B'3 B1).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 B2 B'3 B1
+++++
apply coplanar_perm_15, coplanar_trans_1 with A3.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A3 B1 B2)
+++++
apply not_col_permutation_2, par_strict_not_col_4 with A1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
apply not_col_permutation_2, par_strict_not_col_4 with A1.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A3
+++++
assumption.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A3 B1 B2 A1
+++++
apply coplanar_perm_18, pars__coplanar.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
apply coplanar_perm_18, pars__coplanar.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict B1 B2 A1 A3
+++++
assumption.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A3 B1 B2 B'3
+++++
exists B3.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
exists B3.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (and (Col A3 B1 B3) (Col B2 B'3 B3)) (or (and (Col A3 B2 B3) (Col B1 B'3 B3)) (and (Col A3 B'3 B3) (Col B1 B2 B3)))
+++++
right.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
exists B3.
right.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (and (Col A3 B2 B3) (Col B1 B'3 B3)) (and (Col A3 B'3 B3) (Col B1 B2 B3))
+++++
right.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
exists B3.
right.
right.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col A3 B'3 B3) (Col B1 B2 B3)
+++++
split.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
exists B3.
right.
right.
split.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A3 B'3 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply coplanar_perm_15, coplanar_trans_1 with A3.
exists B3.
right.
right.
split.

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B2 B'3 B1
+++++
apply cop_per2__col with A1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 B2 B'3 B1
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 B1)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B2 B1 A1
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B2 B1 A1
+++++
apply l8_2.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 B1 B2
+++++
apply (rah _ _ _ A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A2).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Saccheri A1 B1 B2 A2
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B'3 B1 A1
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B'3 B1 A1
+++++
apply l8_2.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 B1 B'3
+++++
apply (rah _ _ _ A3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Saccheri A1 B1 B'3 A3
+++++
unfold Saccheri in *.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : and (Per B1 A1 A2)\n (and (Per A1 A2 B2) (and (Cong A1 B1 B2 A2) (OS A1 A2 B1 B2)))
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per B1 A1 A3) (and (Per A1 A3 B'3) (and (Cong A1 B1 B'3 A3) (OS A1 A3 B1 B'3)))
+++++
spliter.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per B1 A1 A3) (and (Per A1 A3 B'3) (and (Cong A1 B1 B'3 A3) (OS A1 A3 B1 B'3)))
+++++
assert(B1 <> B3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B1 B3)
+++++
intro.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.

*****
H16 : eq B1 B3
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst B3.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(A1 = A3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq A1 A3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq A1 A3
+++++
apply (l8_18_uniqueness A1 A2 B1).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 B1)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 B1)
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.
Perp.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A2 B1)
+++++
apply not_col_permutation_1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.
Perp.
apply not_col_permutation_1.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col B1 A1 A2)
+++++
apply per_not_col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.
Perp.
apply not_col_permutation_1.
apply per_not_col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B1 A1)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.
Perp.
apply not_col_permutation_1.
apply per_not_col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A2)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.
Perp.
apply not_col_permutation_1.
apply per_not_col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B1 A1 A2
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A1
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 B1 A1
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 B1 A1
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 B1 A3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).
auto.
apply (l8_18_uniqueness A1 A2 B1).
Col.

*****
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 B1 A3
+++++
Perp.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
intro.
subst B3.
assert(A1 = A3).

*****
H16 : eq A1 A3
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B1 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B1)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HB : Col B1 B2 B1
HPerp : Perp A1 A2 A3 B1
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per B1 A1 A3) (and (Per A1 A3 B'3) (and (Cong A1 B1 B'3 A3) (OS A1 A3 B1 B'3)))
+++++
assert(Per A1 A3 B'3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 A3 B'3
+++++
apply perp_per_1.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A3 A1 B'3 A3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A3 A1 B'3 A3
+++++
apply perp_comm.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A3 A3 B'3
+++++
apply (perp_col _ A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A3)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 A3 B'3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).
Col.

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 A3 B'3
+++++
apply (perp_col1 _ _ _ B3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).
Col.
apply (perp_col1 _ _ _ B3).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A3 B'3)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).
Col.
apply (perp_col1 _ _ _ B3).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp A1 A2 A3 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).
Col.
apply (perp_col1 _ _ _ B3).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A3 B3 B'3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
apply perp_per_1.
auto.
apply perp_comm.
apply (perp_col _ A2).

*****
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per B1 A1 A3) (and (Per A1 A3 B'3) (and (Cong A1 B1 B'3 A3) (OS A1 A3 B1 B'3)))
+++++
repeat split.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B1 A1 A3
+++++
Cong.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B1 A1 A3
+++++
apply (per_col _ _ A2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (per_col _ _ A2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A2)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (per_col _ _ A2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per B1 A1 A2
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (per_col _ _ A2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A1 A2 A3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 A3 B'3
+++++
Cong.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A1 B1 B'3 A3
+++++
Cong.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 A3 B1 B'3
+++++
Cong.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 A3 B1 B'3
+++++
apply (one_side_transitivity _ _ _ B3).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 A3 B1 B3
+++++
apply l12_6.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A3 B1 B3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.
auto.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A3 B1 B3
+++++
apply (par_strict_col_par_strict _ _ _ B2).
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.
auto.
apply (par_strict_col_par_strict _ _ _ B2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B1 B3)
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.
auto.
apply (par_strict_col_par_strict _ _ _ B2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A3 B1 B2
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.
auto.
apply (par_strict_col_par_strict _ _ _ B2).
Col.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 A3 B1 B2
+++++
Par.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply l12_6.
auto.
apply (par_strict_col_par_strict _ _ _ B2).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B1 B2 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 A3 B3 B'3
+++++
apply invert_one_side.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A3 A1 B3 B'3
+++++
apply out_one_side.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col A3 A1 B3)) (not (Col A3 A1 B'3))
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col A3 A1 B3)) (not (Col A3 A1 B'3))
+++++
right.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.
right.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A3 A1 B'3)
+++++
apply not_col_permutation_4.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.
right.
apply not_col_permutation_4.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 A3 B'3)
+++++
apply per_not_col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.
right.
apply not_col_permutation_4.
apply per_not_col.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 A3)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.
right.
apply not_col_permutation_4.
apply per_not_col.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A3 B'3)
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.
auto.
right.
apply not_col_permutation_4.
apply per_not_col.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 A3 B'3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).
Col.
apply col_permutation_2.
assert (Coplanar A1 B2 B'3 B1).
apply cop_per2__col with A1.
auto.
apply l8_2.
apply (rah _ _ _ A3).
unfold Saccheri in *.
spliter.
assert(B1 <> B3).
assert(Per A1 A3 B'3).
repeat split.
Cong.
apply (one_side_transitivity _ _ _ B3).
apply invert_one_side.
apply out_one_side.

*****
H17 : Per A1 A3 B'3
H16 : not (eq B1 B3)
H11 : Coplanar A1 B2 B'3 B1
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
H15 : OS A1 A2 B1 B2
H14 : Cong A1 B1 B2 A2
H13 : Per A1 A2 B2
H12 : Per B1 A1 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out A3 B3 B'3
+++++
auto.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A3 B3 B3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
idtac.
assert(Par_strict B1 B2 A1 A3).
apply (l6_21 B1 B2 A3 B3).

*****
H10 : Par_strict B1 B2 A1 A3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A3 B3 B'3
+++++
Col.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).

*****
H10 : eq B3 B'3
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H6 : Out A3 B3 B'3
B'3 : Tpoint
H5 : not (eq A1 A3)
H7 : not (eq A3 B3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HPerp : Perp A1 A2 A3 B3
HB : Col B1 B2 B3
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2,B3 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A1 B1
+++++
subst.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).
idtac.
assert(Hdiff := sac_distincts A1 B1 B2 A2 HSac).
spliter.
assert_diffs.
elim(eq_dec_points A1 A3).
intro.
destruct(segment_construction_3 A3 B3 A1 B1) as [B'3 []].
auto.
assert_diffs.
assert(B3 = B'3).
subst.

*****
H9 : not (eq A3 B'3)
H8 : Cong A3 B'3 A1 B1
H5 : not (eq A1 A3)
H7 : not (eq A3 B'3)
H4 : not (eq B1 A2)
H3 : not (eq A1 B2)
H2 : not (eq A1 A2)
H1 : not (eq B2 A2)
H0 : not (eq B1 B2)
H : not (eq A1 B1)
HSac : Saccheri A1 B1 B2 A2
HB : Col B1 B2 B'3
HPerp : Perp A1 A2 A3 B'3
H6 : Out A3 B'3 B'3
B'3 : Tpoint
HA : Col A1 A2 A3
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 A2 B2
HPer2 : Per A1 A2 B2
HPer1 : Per A2 A1 B1
A1,A2,A3,B1,B2 : Tpoint
rah : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B'3 A1 B1
+++++
assumption.
-----
Lemma rah__posidonius_aux : postulate_of_right_saccheri_quadrilaterals -> forall A1 A2 A3 B1 B2 B3, Per A2 A1 B1 -> Per A1 A2 B2 -> Cong A1 B1 A2 B2 -> OS A1 A2 B1 B2 -> Col A1 A2 A3 -> Col B1 B2 B3 -> Perp A1 A2 A3 B3 -> Cong A3 B3 A1 B1.
Proof.
intros rah A1 A2 A3 B1 B2 B3 HPer1 HPer2 HCong HOS HA HB HPerp.
assert (HSac : Saccheri A1 B1 B2 A2).

*****

*****

+++++
Qed.
-----
Lemma rah__posidonius :\n  postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : postulate_of_right_saccheri_quadrilaterals, posidonius_postulate
+++++
Proof.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : postulate_of_right_saccheri_quadrilaterals, posidonius_postulate
+++++
intro HP.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.

*****
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
posidonius_postulate
+++++
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].

*****
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
posidonius_postulate
+++++
exists A1; exists A2; exists B1; exists B2.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.

*****
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (Col A1 A2 B1)) (and (not (eq B1 B2)) (and (Coplanar A1 A2 B1 B2) (forall (A3 A4 B3 B4 : Tpoint) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3) (_ : Col A1 A2 A4) (_ : Col B1 B2 B4) (_ : Perp A1 A2 A4 B4), Cong A3 B3 A4 B4)))
+++++
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).

*****
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (Col A1 A2 B1)) (and (not (eq B1 B2)) (and (Coplanar A1 A2 B1 B2) (forall (A3 A4 B3 B4 : Tpoint) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3) (_ : Col A1 A2 A4) (_ : Col B1 B2 B4) (_ : Perp A1 A2 A4 B4), Cong A3 B3 A4 B4)))
+++++
split; [destruct HOS; unfold TS in *; spliter; Col|].
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].

*****
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (not (eq B1 B2)) (and (Coplanar A1 A2 B1 B2) (forall (A3 A4 B3 B4 : Tpoint) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3) (_ : Col A1 A2 A4) (_ : Col B1 B2 B4) (_ : Perp A1 A2 A4 B4), Cong A3 B3 A4 B4))
+++++
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].

*****
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A3 A4 B3 B4 : Tpoint) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3) (_ : Perp A1 A2 A3 B3) (_ : Col A1 A2 A4) (_ : Col B1 B2 B4) (_ : Perp A1 A2 A4 B4), Cong A3 B3 A4 B4
+++++
intros A3 A4 B3 B4 HC1 HC2 HPerp1 HC3 HC4 HPerp2.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].
intros A3 A4 B3 B4 HC1 HC2 HPerp1 HC3 HC4 HPerp2.

*****
HPerp2 : Perp A1 A2 A4 B4
HC4 : Col B1 B2 B4
HC3 : Col A1 A2 A4
HPerp1 : Perp A1 A2 A3 B3
HC2 : Col B1 B2 B3
HC1 : Col A1 A2 A3
A3,A4,B3,B4 : Tpoint
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A4 B4
+++++
assert (HCong1 := rah__posidonius_aux HP A1 A2 A3 B1 B2 B3).
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].
intros A3 A4 B3 B4 HC1 HC2 HPerp1 HC3 HC4 HPerp2.
assert (HCong1 := rah__posidonius_aux HP A1 A2 A3 B1 B2 B3).

*****
HCong1 : forall (_ : Per A2 A1 B1) (_ : Per A1 A2 B2) (_ : Cong A1 B1 A2 B2)\n (_ : OS A1 A2 B1 B2) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3)\n (_ : Perp A1 A2 A3 B3), Cong A3 B3 A1 B1
HPerp2 : Perp A1 A2 A4 B4
HC4 : Col B1 B2 B4
HC3 : Col A1 A2 A4
HPerp1 : Perp A1 A2 A3 B3
HC2 : Col B1 B2 B3
HC1 : Col A1 A2 A3
A3,A4,B3,B4 : Tpoint
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A4 B4
+++++
assert (HCong2 := rah__posidonius_aux HP A1 A2 A4 B1 B2 B4).
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].
intros A3 A4 B3 B4 HC1 HC2 HPerp1 HC3 HC4 HPerp2.
assert (HCong1 := rah__posidonius_aux HP A1 A2 A3 B1 B2 B3).
assert (HCong2 := rah__posidonius_aux HP A1 A2 A4 B1 B2 B4).

*****
HCong2 : forall (_ : Per A2 A1 B1) (_ : Per A1 A2 B2) (_ : Cong A1 B1 A2 B2)\n (_ : OS A1 A2 B1 B2) (_ : Col A1 A2 A4) (_ : Col B1 B2 B4)\n (_ : Perp A1 A2 A4 B4), Cong A4 B4 A1 B1
HCong1 : forall (_ : Per A2 A1 B1) (_ : Per A1 A2 B2) (_ : Cong A1 B1 A2 B2)\n (_ : OS A1 A2 B1 B2) (_ : Col A1 A2 A3) (_ : Col B1 B2 B3)\n (_ : Perp A1 A2 A3 B3), Cong A3 B3 A1 B1
HPerp2 : Perp A1 A2 A4 B4
HC4 : Col B1 B2 B4
HC3 : Col A1 A2 A4
HPerp1 : Perp A1 A2 A3 B3
HC2 : Col B1 B2 B3
HC1 : Col A1 A2 A3
A3,A4,B3,B4 : Tpoint
HNE : not (eq A1 A2)
HOS : OS A1 A2 B1 B2
HCong : Cong A1 B1 B2 A2
HPer2 : Per A1 A2 B2
HPer1 : Per B1 A1 A2
A1,B1,B2,A2 : Tpoint
HP : postulate_of_right_saccheri_quadrilaterals
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A3 B3 A4 B4
+++++
apply cong_inner_transitivity with A1 B1; apply cong_symmetry; [apply HCong1|apply HCong2]; Cong; apply l8_2; auto.
-----
Lemma rah__posidonius : postulate_of_right_saccheri_quadrilaterals -> posidonius_postulate.
Proof.
intro HP.
destruct ex_saccheri as [A1 [B1 [B2 [A2 [HPer1 [HPer2 [HCong HOS]]]]]]].
exists A1; exists A2; exists B1; exists B2.
assert (HNE : A1 <> A2) by (destruct HOS as [X [[H ?] ?]]; intro; subst A2; Col).
split; [destruct HOS; unfold TS in *; spliter; Col|].
split; [intro; treat_equalities; apply l8_7 in HPer1; intuition|split; [Cop|]].
intros A3 A4 B3 B4 HC1 HC2 HPerp1 HC3 HC4 HPerp2.
assert (HCong1 := rah__posidonius_aux HP A1 A2 A3 B1 B2 B3).
assert (HCong2 := rah__posidonius_aux HP A1 A2 A4 B1 B2 B4).
apply cong_inner_transitivity with A1 B1; apply cong_symmetry; [apply HCong1|apply HCong2]; Cong; apply l8_2; auto.

*****

*****

+++++
Qed.
-----
End rah_posidonius.
-----
