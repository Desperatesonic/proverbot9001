a1ed3921fa79d6dca29d1ddaba882f5e
Require Export field_general_properties.
Require Export chou_gao_zhang_axioms.
Lemma S_0 : forall A B C : Point, S A B C = S C A B.
  auto with Geom.
Qed.
Lemma S_1 : forall A B C : Point, S A B C = S B C A.
  auto with Geom.
Qed.
Hint Resolve S_1: Geom.
Lemma S_2 : forall A B C : Point, S A B C = - S C B A.
Proof.
  intros.
  try solve [ Geometry | congruence ].
  assert (S A B C = - S B A C).
  {
    try solve [ Geometry | congruence ].
  }
  {
    try solve [ Geometry | congruence ].
    assert (S B A C = S C B A).
    {
      try solve [ Geometry | congruence ].
    }
    {
      try solve [ Geometry | congruence ].
    }
  }
Qed.
Hint Resolve S_2: Geom.
Lemma S_3 : forall A B C : Point, S A B C = - S A C B.
Proof.
  intros.
  try solve [ Geometry | congruence ].
  assert (S A B C = - S B A C).
  {
    try solve [ Geometry | congruence ].
  }
  {
    try solve [ Geometry | congruence ].
    assert (S B A C = S A C B).
    {
      try solve [ Geometry | congruence ].
    }
    {
      try solve [ Geometry | congruence ].
    }
  }
Qed.
Hint Resolve S_3: Geom.
Lemma S_4 : forall A B C : Point, S A B C = - S B A C.
  intros.
  Geometry.
Qed.
Lemma S4_1 : forall A B C D : Point, S4 A B C D = S A B D - S C B D.
Proof.
  intros.
  try solve [ Geometry | ring ].
  unfold S4 in |- *.
  try solve [ Geometry | ring ].
  assert (S A B C = S A B D + S A D C + S D B C).
  {
    try solve [ Geometry | ring ].
  }
  {
    try solve [ Geometry | ring ].
    assert (S D B C = - S C B D).
    {
      try solve [ Geometry | ring ].
    }
    {
      try solve [ Geometry | ring ].
      rewrite H0 in H.
      try solve [ Geometry | ring ].
      assert (S A D C = - S A C D).
      {
        try solve [ Geometry | ring ].
      }
      {
        try solve [ Geometry | ring ].
        rewrite H1 in H.
        try solve [ Geometry | ring ].
        clear H0 H1.
        try solve [ Geometry | ring ].
        rewrite H.
        try solve [ Geometry | ring ].
      }
    }
  }
Qed.
Hint Resolve S4_1: Geom.
Lemma S4_2 : forall A B C D : Point, S4 A B C D = S4 B C D A.
Proof.
  unfold S4 in |- *.
  try solve [ Geometry | ring ].
  intros.
  try solve [ Geometry | ring ].
  assert (S B D A = S A B D).
  {
    try solve [ Geometry | ring ].
  }
  {
    try solve [ Geometry | ring ].
    assert (S B C D = - S C B D).
    {
      try solve [ Geometry | ring ].
    }
    {
      try solve [ Geometry | ring ].
      assert (S4 A B C D = S A B D - S C B D).
      {
        try solve [ Geometry | ring ].
      }
      {
        try solve [ Geometry | ring ].
        rewrite <- H in H1.
        rewrite H0.
        unfold S4 in H1.
        rewrite H1 in |- *.
        ring.
      }
    }
  }
Qed.
Hint Resolve S4_2: Geom.
Lemma S4_3 : forall A B C D : Point, S4 A B C D = S4 C D A B.
Proof.
  intros.
  try solve [ Geometry | congruence ].
  assert (S4 A B C D = S4 B C D A).
  {
    try solve [ Geometry | congruence ].
  }
  {
    try solve [ Geometry | congruence ].
    rewrite H.
    try solve [ Geometry | congruence ].
  }
Qed.
Hint Resolve S4_3: Geom.
Lemma S4_4 : forall A B C D : Point, S4 A B C D = S4 D A B C.
Proof.
  intros.
  Geometry.
Qed.
Hint Resolve S4_4: Geom.
Lemma S4_5 : forall A B C D : Point, S4 A B C D = - S4 A D C B.
Proof.
  intros.
  Geometry.
  unfold S4 in |- *.
  Geometry.
  assert (S A C D = - S A D C).
  {
    Geometry.
  }
  {
    Geometry.
    rewrite H.
    assert (S A B C = - S A C B).
    {
      Geometry.
    }
    {
      Geometry.
      rewrite H0.
      ring.
    }
  }
Qed.
Hint Resolve S4_5: Geom.
Lemma S4_6 : forall A B C D : Point, S4 A B C D = - S4 D C B A.
Proof.
  intros.
  try solve [ Geometry | congruence ].
  assert (S4 D C B A = S4 A D C B).
  {
    try solve [ Geometry | congruence ].
  }
  {
    try solve [ Geometry | congruence ].
    rewrite H.
    try solve [ Geometry | congruence ].
  }
Qed.
Hint Resolve S4_6: Geom.
Lemma S4_7 : forall A B C D : Point, S4 A B C D = - S4 C B A D.
Proof.
  intros.
  try solve [ Geometry | congruence ].
  assert (S4 A D C B = S4 C B A D).
  {
    try solve [ Geometry | congruence ].
  }
  {
    try solve [ Geometry | congruence ].
    rewrite <- H.
    try solve [ Geometry | congruence ].
  }
Qed.
Hint Resolve S4_7: Geom.
Lemma S4_8 : forall A B C D : Point, S4 A B C D = - S4 B A D C.
Proof.
  intros.
  Geometry.
  assert (S4 A D C B = S4 B A D C).
  {
    Geometry.
  }
  {
    Geometry.
    rewrite <- H.
    Geometry.
  }
Qed.
Hint Resolve S4_8: Geom.
Lemma lpar1 : forall A B C D : Point, parallel A B C D -> parallel A B D C.
Proof.
  intros.
  unfold parallel in *.
  rewrite S4_5.
  rewrite H.
  ring.
Qed.
Lemma lpar2 : forall A B C D : Point, parallel A B C D -> parallel B A C D.
Proof.
  intros.
  unfold parallel in *.
  rewrite S4_7.
  rewrite H.
  ring.
Qed.
Lemma lpar3 : forall A B C D : Point, parallel A B C D -> parallel B A D C.
Proof.
  intros.
  unfold parallel in *.
  rewrite S4_3.
  assumption.
Qed.
Lemma ldiff : forall A B : Point, A <> B -> B <> A.
Proof.
  intros.
  Geometry.
Qed.
Lemma simplring1 : forall x : F, x = - - x.
Proof.
  intro.
  ring.
Qed.
Lemma zeroegal : forall A B : Point, A = B -> A ** B = 0.
Proof.
  intros.
  assert (P := A1b A B).
  intuition.
Qed.
Lemma egalzero : forall A B : Point, A ** B = 0 -> A = B.
Proof.
  intros.
  assert (P := A1b A B).
  intuition.
Qed.
Hint Resolve zeroegal egalzero: Geom.
Lemma nuldirseg : forall A : Point, 0 = A ** A.
Proof.
  intros.
  symmetry  in |- *.
  Geometry.
Qed.
Lemma neq_not_zero : forall A B:Point, 
  A<>B -> A**B<>0.
Proof.
  intros.
  Geometry.
Qed.
Lemma field_prop_2 : forall a : F, a = - a -> a = 0.
Proof.
  intros.
  try solve [ ring | congruence ].
  assert (a + a = - a + a).
  {
    try solve [ ring | congruence ].
  }
  {
    try solve [ ring | congruence ].
    assert (- a + a = 0).
    {
      try solve [ ring | congruence ].
    }
    {
      try solve [ ring | congruence ].
      rewrite H1 in H0.
      try solve [ ring | congruence ].
      assert (a + a = 2 * a).
      {
        try solve [ ring | congruence ].
      }
      {
        try solve [ ring | congruence ].
        rewrite H2 in H0.
        try solve [ ring | congruence ].
        assert (2 * a / 2 = a).
        {
          try solve [ ring | congruence ].
          field.
          try solve [ ring | congruence ].
          auto with Geom.
        }
        {
          try solve [ ring | congruence ].
          assert (2 * a / 2 = 0 / 2).
          {
            try solve [ ring | congruence ].
          }
          {
            try solve [ ring | congruence ].
            rewrite H3 in H4.
            try solve [ ring | congruence ].
            assert (0 / 2 = 0).
            {
              try solve [ ring | congruence ].
              field.
              try solve [ ring | congruence ].
              auto with Geom.
            }
            {
              try solve [ ring | congruence ].
            }
          }
        }
      }
    }
  }
Qed.
Hint Resolve field_prop_2: Geom.
Lemma trivial_col1 : forall A B : Point, 0 = S A A B.
  intros.
  symmetry  in |- *.
  Geometry.
Qed.
Lemma trivial_col2 : forall A B : Point, 0 = S A B B.
  intros.
  symmetry  in |- *.
  Geometry.
Qed.
Lemma trivial_col3 : forall A B : Point, 0 = S A B A.
  intros.
  symmetry  in |- *.
  Geometry.
Qed.
Lemma A1a : forall A B : Point, A ** B = - B ** A.
Proof.
  intros.
  assert (Col A B A).
  {
    Geometry.
  }
  {
    assert (T:=chasles A B A H).
    replace (A**A) with 0 in T.
    {
      IsoleVar (A**B) T.
      rewrite T.
      ring.
    }
    {
      symmetry.
      Geometry.
    }
  }
Qed.
Lemma degenerated_ratio : forall A B C D, 
  A=B -> C<>D -> A**B/C**D=0.
Proof.
  intros.
  field_simplify_eq.
  {
    Geometry.
  }
  {
    Geometry.
  }
Qed.
Hint Immediate A1a: Geom.
