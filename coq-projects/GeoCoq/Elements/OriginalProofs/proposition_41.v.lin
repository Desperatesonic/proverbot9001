9018ab4208cbc9d3b379ef48a4ef548f
Require Export GeoCoq.Elements.OriginalProofs.proposition_37.
Section Euclid.
Context `{Ax:area}.
Lemma proposition_41 : 
   forall A B C D E, 
   PG A B C D -> Col A D E ->
   ET A B C E B C.
Proof.
  intros.
  assert (Par A B C D).
  {
    conclude_def PG .
  }
  {
    idtac.
    assert (nCol A B C).
    {
      forward_using lemma_parallelNC.
    }
    {
      idtac.
      assert (Triangle A B C).
      {
        conclude_def Triangle .
      }
      {
        idtac.
        assert (ET A B C E B C).
        {
          by cases on (eq A E \/ neq A E).
          {
            assert (ET A B C A B C).
            {
              conclude lemma_ETreflexive.
            }
            {
              idtac.
              assert (ET A B C E B C).
              {
                conclude cn_equalitysub.
              }
              {
                idtac.
                close.
              }
            }
          }
          {
            assert (Par A D B C).
            {
              conclude_def PG .
            }
            {
              idtac.
              assert (Col D A E).
              {
                forward_using lemma_collinearorder.
              }
              {
                idtac.
                assert (Par B C A D).
                {
                  conclude lemma_parallelsymmetric.
                }
                {
                  idtac.
                  assert (Par B C D A).
                  {
                    forward_using lemma_parallelflip.
                  }
                  {
                    idtac.
                    assert (neq E A).
                    {
                      conclude lemma_inequalitysymmetric.
                    }
                    {
                      idtac.
                      assert (Par B C E A).
                      {
                        conclude lemma_collinearparallel.
                      }
                      {
                        idtac.
                        assert (Par B C A E).
                        {
                          forward_using lemma_parallelflip.
                        }
                        {
                          idtac.
                          assert (Par A E B C).
                          {
                            conclude lemma_parallelsymmetric.
                          }
                          {
                            idtac.
                            assert (ET A B C E B C).
                            {
                              conclude proposition_37.
                            }
                            {
                              idtac.
                              close.
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        {
          close.
        }
      }
    }
  }
Qed.
End Euclid.
