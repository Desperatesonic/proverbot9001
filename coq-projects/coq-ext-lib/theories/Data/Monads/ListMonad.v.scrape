Require Import ExtLib.Structures.Monads.
-----
From Coq Require Import List.
-----
Set Implicit Arguments.
-----
Set Strict Implicit.
-----
Global Instance Monad_list : Monad list :=\n{ ret := fun _ v => v :: nil\n; bind := fun _ _ => fix recur c1 c2 :=\n  match c1 with\n    | nil => nil\n    | a :: b => c2 a ++ recur b c2\n  end\n}.
-----
Global Instance MonadZero_list : MonadZero list :=\n{ mzero := @nil }.
-----
Global Instance MonadPlus_list : MonadPlus list :=\n{ mplus _A _B a b := List.map inl a ++ List.map inr b\n}.
-----
