Require Import GeoCoq.Axioms.continuity_axioms.
-----
Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Ch12_parallel.
-----
Section alternate_interior_angles_proclus.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma alternate_interior__proclus :\n  greenberg_s_axiom ->\n  alternate_interior_angles_postulate ->\n  proclus_postulate.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (_ : greenberg_s_axiom) (_ : alternate_interior_angles_postulate), proclus_postulate
+++++
Proof.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (_ : greenberg_s_axiom) (_ : alternate_interior_angles_postulate), proclus_postulate
+++++
intros greenberg aia.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.

*****
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
proclus_postulate
+++++
intros A B C D P Q HPar HP HQ HCop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.

*****
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
elim(col_dec C D P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).

*****
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : Col C D P, ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
intro HConf.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HConf.

*****
HConf : Col C D P
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
exists P.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HConf.
exists P.

*****
HConf : Col C D P
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col P Q P) (Col C D P)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HConf.
exists P.
split.

*****
HConf : Col C D P
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HConf.
exists P.
split.

*****
HConf : Col C D P
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).

*****
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (Col C D P), ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
intro HStrict.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HParS : Par_strict A B C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B C D
+++++
apply par_strict_symmetry.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D A B
+++++
apply (par_not_col_strict _ _ _ _ P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.
apply (par_not_col_strict _ _ _ _ P).

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.
apply (par_not_col_strict _ _ _ _ P).
auto.

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
apply par_symmetry.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.
apply (par_not_col_strict _ _ _ _ P).
auto.
apply par_symmetry.

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B C D
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.
apply (par_not_col_strict _ _ _ _ P).

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
apply par_strict_symmetry.
apply (par_not_col_strict _ _ _ _ P).

*****
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C D P)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).

*****
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert (HC0 := l8_18_existence C D P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).

*****
HC0 : forall _ : not (Col C D P),\nex (fun X : Tpoint => and (Col C D X) (Perp C D P X))
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HC0 as [C0 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].

*****
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C D P)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].

*****
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.

*****
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
elim(col_dec P Q C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).

*****
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : Col P Q C0, ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro.

*****
H1 : Col P Q C0
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
exists C0.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro.
exists C0.

*****
H1 : Col P Q C0
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col P Q C0) (Col C D C0)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro.
exists C0.
split.

*****
H1 : Col P Q C0
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro.
exists C0.
split.

*****
H1 : Col P Q C0
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).

*****
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (Col P Q C0), ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
intro HNCol1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.

*****
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert_diffs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HQ1 : exists Q1, Col Q P Q1 /\ OS A B C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Q1 : Tpoint => and (Col Q P Q1) (OS A B C0 Q1))
+++++
apply (cop_not_par_same_side _ _ _ _ P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq Q P)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col Q P P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B Q)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C0)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C0)
+++++
apply not_col_permutation_1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
apply not_col_permutation_1.

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C0 A B)
+++++
apply (par_not_col C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
apply not_col_permutation_1.
apply (par_not_col C D).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
apply not_col_permutation_1.
apply (par_not_col C D).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C0 C D
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
assert (Coplanar C D P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
elim (eq_dec_points P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P A, Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H1 : eq P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
H8 : not (eq B Q)
H10 : not (eq P B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict P B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par P B C D
HQ : not (Col P B Q)
B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P A), Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H1 : not (eq P A)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).

*****
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
assert (Coplanar C D P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
elim (eq_dec_points P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P B, Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H2 : eq P B
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H1 : Coplanar C D P A
H12 : not (eq A Q)
H10 : not (eq A P)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A P C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par A P C D
HQ : not (Col A P Q)
A,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P B), Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H2 : not (eq P B)
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H2 : Coplanar C D P B
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
assert (Coplanar C D P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H2 : Coplanar C D P B
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P C0
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H11 : Coplanar C D P C0
H2 : Coplanar C D P B
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
apply (cop_not_par_same_side _ _ _ _ P).
Col.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.

*****
H11 : Coplanar C D P C0
H2 : Coplanar C D P B
H1 : Coplanar C D P A
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B Q C0
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).

*****
HQ1 : ex (fun Q1 : Tpoint => and (Col Q P Q1) (OS A B C0 Q1))
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HQ1 as [Q1 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].

*****
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(~Col A B Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).

*****
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B Q1)
+++++
apply (one_side_not_col123 _ _ _ C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
apply (one_side_not_col123 _ _ _ C0).

*****
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B Q1 C0
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).

*****
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.

*****
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(P<>Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).

*****
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q1)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
intro.

*****
H13 : eq P Q1
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst Q1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
intro.
subst Q1.

*****
H1 : Col Q P P
H2 : OS A B C0 P
H11 : not (Col A B P)
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).

*****
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.

*****
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(~ Col P C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).

*****
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 Q1)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
intro.

*****
H14 : Col P C0 Q1
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
intro.
apply HNCol1.

*****
H14 : Col P C0 Q1
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q C0
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HNCol2 : ~Col C0 A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C0 A B)
+++++
apply (par_not_col C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
apply (par_not_col C D).

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
apply (par_not_col C D).

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C0 C D
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
apply (par_not_col C D).
Par.

*****
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C0 C D
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HA1 : exists A1, Col A B A1 /\ OS P C0 Q1 A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
assert (Coplanar C D P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
elim (eq_dec_points P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P A, Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H15 : eq P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
HNCol2 : not (Col C0 P B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS P B C0 Q1
H11 : not (Col P B Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H8 : not (eq B Q)
H10 : not (eq P B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict P B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par P B C D
HQ : not (Col P B Q)
B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P A), Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H15 : not (eq P A)
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).

*****
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
assert (Coplanar C D P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
elim (eq_dec_points P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P B, Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H16 : eq P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A P)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS A P C0 Q1
H11 : not (Col A P Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H10 : not (eq A P)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A P C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par A P C D
HQ : not (Col A P Q)
A,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P B), Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H16 : not (eq P B)
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
assert (Coplanar C D P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P C0
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.

*****
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
assert (Coplanar A B C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C0 Q1
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.

*****
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
elim(col_dec P C0 A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).

*****
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : Col P C0 A, ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).

*****
HA1 : forall (_ : not (eq B A)) (_ : Col P C0 P) (_ : Col B A P)\n (_ : not (Col P C0 B)) (_ : not (Col P C0 Q1))\n (_ : Coplanar P C0 B Q1),\nex (fun Q : Tpoint => and (Col B A Q) (OS P C0 Q1 Q))
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
destruct HA1 as [A1 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B A)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C0 P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B A P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 B)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.
intro.

*****
H20 : Col P C0 B
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol2.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.
intro.
apply HNCol2.

*****
H20 : Col P C0 B
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C0 A B
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 Q1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 B Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.

*****
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 B Q1
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].

*****
H21 : OS P C0 Q1 A1
H20 : Col B A A1
A1 : Tpoint
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.

*****
H21 : OS P C0 Q1 A1
H20 : Col B A A1
A1 : Tpoint
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
exists A1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.
exists A1.

*****
H21 : OS P C0 Q1 A1
H20 : Col B A A1
A1 : Tpoint
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col A B A1) (OS P C0 Q1 A1)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.
exists A1.
split.

*****
H21 : OS P C0 Q1 A1
H20 : Col B A A1
A1 : Tpoint
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
assert(HA1 := cop_not_par_same_side P C0 B A P Q1).
destruct HA1 as [A1 []].
Col.
exists A1.
split.

*****
H21 : OS P C0 Q1 A1
H20 : Col B A A1
A1 : Tpoint
H19 : Col P C0 A
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 Q1 A1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).

*****
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (Col P C0 A), ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
+++++
apply (cop_not_par_same_side _ _ _ _ P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C0 P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 A)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 Q1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 A Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 A).
intro.
apply (cop_not_par_same_side _ _ _ _ P).
Col.

*****
H19 : not (Col P C0 A)
H18 : Coplanar A B C0 Q1
H17 : Coplanar C D P C0
H16 : Coplanar C D P B
H15 : Coplanar C D P A
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 A Q1
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).

*****
HA1 : ex (fun A1 : Tpoint => and (Col A B A1) (OS P C0 Q1 A1))
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HA1 as [A1 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].

*****
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(~Col P C0 A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).

*****
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 A1)
+++++
apply (one_side_not_col123 _ _ _ Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
apply (one_side_not_col123 _ _ _ Q1).

*****
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 A1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).

*****
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.

*****
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HNCol3 : ~Col P C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).

*****
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C D)
+++++
apply (par_not_col A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
apply (par_not_col A B).

*****
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B C D
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
apply (par_not_col A B).

*****
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HC1 : exists C1, Col C D C1 /\ OS P C0 Q1 C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
assert (Coplanar C D P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
elim (eq_dec_points P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P A, Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H18 : eq P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col P B A1
A1 : Tpoint
HNCol2 : not (Col C0 P B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS P B C0 Q1
H11 : not (Col P B Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H8 : not (eq B Q)
H10 : not (eq P B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict P B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par P B C D
HQ : not (Col P B Q)
B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P A), Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H18 : not (eq P A)
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).

*****
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
assert (Coplanar C D P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
elim (eq_dec_points P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P B, Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H19 : eq P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A P A1
A1 : Tpoint
HNCol2 : not (Col C0 A P)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS A P C0 Q1
H11 : not (Col A P Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H10 : not (eq A P)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A P C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par A P C D
HQ : not (Col A P Q)
A,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P B), Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H19 : not (eq P B)
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
assert (Coplanar C D P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P C0
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.

*****
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
assert (Coplanar A B C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C0 Q1
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.

*****
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
elim(col_dec P C0 C).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).

*****
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : Col P C0 C, ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).

*****
HC1 : forall (_ : not (eq D C)) (_ : Col P C0 C0) (_ : Col D C C0)\n (_ : not (Col P C0 D)) (_ : not (Col P C0 Q1))\n (_ : Coplanar P C0 D Q1),\nex (fun Q : Tpoint => and (Col D C Q) (OS P C0 Q1 Q))
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
destruct HC1 as [C1 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D C)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C0 C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col D C C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 D)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 D)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.
intro.

*****
H23 : Col P C0 D
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol3.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.
intro.
apply HNCol3.

*****
H23 : Col P C0 D
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C D
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 Q1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 D Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.

*****
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 D Q1
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].

*****
H24 : OS P C0 Q1 C1
H23 : Col D C C1
C1 : Tpoint
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.

*****
H24 : OS P C0 Q1 C1
H23 : Col D C C1
C1 : Tpoint
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
exists C1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.
exists C1.

*****
H24 : OS P C0 Q1 C1
H23 : Col D C C1
C1 : Tpoint
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col C D C1) (OS P C0 Q1 C1)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.
exists C1.
split.

*****
H24 : OS P C0 Q1 C1
H23 : Col D C C1
C1 : Tpoint
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
assert(HC1 := cop_not_par_same_side P C0 D C C0 Q1).
destruct HC1 as [C1 []].
Col.
exists C1.
split.

*****
H24 : OS P C0 Q1 C1
H23 : Col D C C1
C1 : Tpoint
H22 : Col P C0 C
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 Q1 C1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).

*****
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (Col P C0 C), ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
+++++
apply (cop_not_par_same_side _ _ _ _ C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C D)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C0 C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 C)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 Q1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 C Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
elim(col_dec P C0 C).
intro.
apply (cop_not_par_same_side _ _ _ _ C0).
Col.

*****
H22 : not (Col P C0 C)
H21 : Coplanar A B C0 Q1
H20 : Coplanar C D P C0
H19 : Coplanar C D P B
H18 : Coplanar C D P A
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 C Q1
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).

*****
HC1 : ex (fun C1 : Tpoint => and (Col C D C1) (OS P C0 Q1 C1))
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HC1 as [C1 []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].

*****
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HNCol4 : ~Col P C0 C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).

*****
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 C1)
+++++
apply (one_side_not_col123 _ _ _ Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
apply (one_side_not_col123 _ _ _ Q1).

*****
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).

*****
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.

*****
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HC2 := symmetric_point_construction C1 C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).

*****
HC2 : ex (fun P' : Tpoint => Midpoint C0 C1 P')
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HC2 as [C2].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].

*****
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert_cols.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.

*****
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert_diffs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.

*****
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(~ Col C2 P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).

*****
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C2 P C0)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
intro.

*****
H22 : Col C2 P C0
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNCol4.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
intro.
apply HNCol4.

*****
H22 : Col C2 P C0
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P C0 C1
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).

*****
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.

*****
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(Col C D C2).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).

*****
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C2
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(InAngle Q1 C0 P A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P A1
+++++
apply os2__inangle.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 A1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P A1 C0 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.
Side.

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P A1 C0 Q1
+++++
apply (col2_os__os A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.
Side.
apply (col2_os__os A B).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P A1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.
Side.
apply (col2_os__os A B).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.
Side.
apply (col2_os__os A B).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
apply os2__inangle.
Side.
apply (col2_os__os A B).

*****
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C0 Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(LtA A1 P Q1 A1 P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA A1 P Q1 A1 P C0
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LeA A1 P Q1 A1 P C0
+++++
exists Q1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
exists Q1.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (InAngle Q1 A1 P C0) (CongA A1 P Q1 A1 P Q1)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
exists Q1.
split.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 A1 P C0
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
exists Q1.
split.
CongA.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 A1 P C0
+++++
apply l11_24.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
exists Q1.
split.
CongA.
apply l11_24.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
exists Q1.
split.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P Q1 A1 P Q1
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.

*****
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (CongA A1 P Q1 A1 P C0)
+++++
intro HConga.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply conga_cop__or_out_ts in HConga.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.

*****
HConga : or (Out P Q1 C0) (TS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
destruct HConga as [Habs|Habs].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].

*****
Habs : Out P Q1 C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert_cols.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
assert_cols.

*****
H36 : Col P Q1 C0
Habs : Out P Q1 C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].

*****
Habs : TS A1 P Q1 C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply l9_9 in Habs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply Habs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P Q1 C0
+++++
apply one_side_symmetry.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.
apply one_side_symmetry.

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P C0 Q1
+++++
apply (col2_os__os A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.
apply one_side_symmetry.
apply (col2_os__os A B).

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 P)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.
apply one_side_symmetry.
apply (col2_os__os A B).

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.
apply one_side_symmetry.
apply (col2_os__os A B).

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
destruct HConga as [Habs|Habs].
apply l9_9 in Habs.
apply Habs.
apply one_side_symmetry.
apply (col2_os__os A B).

*****
Habs : not (OS A1 P Q1 C0)
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C0 Q1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
assert (Coplanar C D P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
elim (eq_dec_points P A).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P A, Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H36 : eq P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col P B A1
A1 : Tpoint
HNCol2 : not (Col C0 P B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS P B C0 Q1
H11 : not (Col P B Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H8 : not (eq B Q)
H10 : not (eq P B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict P B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par P B C D
HQ : not (Col P B Q)
B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).

*****
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P A), Coplanar C D P A
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P A
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
elim (eq_dec_points P A).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H36 : not (eq P A)
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).

*****
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
assert (Coplanar C D P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
elim (eq_dec_points P B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : eq P B, Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H37 : eq P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H26 : not (eq C0 Q1)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A P A1
A1 : Tpoint
HNCol2 : not (Col C0 A P)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H2 : OS A P C0 Q1
H11 : not (Col A P Q1)
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H10 : not (eq A P)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A P C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HPar : Par A P C D
HQ : not (Col A P Q)
A,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P P
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).

*****
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (eq P B), Coplanar C D P B
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
treat_equalities.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P B
+++++
apply col2_cop__cop with A B.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D A B
+++++
apply par__coplanar.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.
Col.
apply par__coplanar.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A B)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
elim (eq_dec_points P B).
intro.
treat_equalities.
Cop.
apply col2_cop__cop with A B.

*****
H37 : not (eq P B)
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B B
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).

*****
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
assert (Coplanar C D P C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar C D P C0
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).

*****
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.

*****
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
assert (Coplanar A B C0 Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A B C0 Q1
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).

*****
H39 : Coplanar A B C0 Q1
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.

*****
H39 : Coplanar A B C0 Q1
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
assert (Coplanar P C0 Q1 A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
assert (Coplanar P C0 Q1 A1).

*****
H39 : Coplanar A B C0 Q1
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar P C0 Q1 A1
+++++
Cop.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
assert (Coplanar P C0 Q1 A1).

*****
H40 : Coplanar P C0 Q1 A1
H39 : Coplanar A B C0 Q1
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
split.
intro HConga.
apply conga_cop__or_out_ts in HConga.
assert (Coplanar C D P A).
assert (Coplanar C D P B).
assert (Coplanar C D P C0).
idtac.
assert (Coplanar A B C0 Q1).
idtac.
assert (Coplanar P C0 Q1 A1).
idtac.

*****
H40 : Coplanar P C0 Q1 A1
H39 : Coplanar A B C0 Q1
H38 : Coplanar C D P C0
H37 : Coplanar C D P B
H36 : Coplanar C D P A
HConga : CongA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Coplanar A1 P Q1 C0
+++++
CopR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(Acute A1 P Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute A1 P Q1
+++++
exists A1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun B' : Tpoint => ex (fun C' : Tpoint => and (Per A1 B' C') (LtA A1 P Q1 A1 B' C')))
+++++
exists P.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun C' : Tpoint => and (Per A1 P C') (LtA A1 P Q1 A1 P C'))
+++++
exists C0.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Per A1 P C0) (LtA A1 P Q1 A1 P C0)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 P C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per A1 P C0
+++++
apply (l11_17 P C0 C2).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P C0 C2
+++++
apply perp_per_1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C0 P C2 C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C0 P C2 C0
+++++
apply perp_sym.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.
apply perp_sym.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C2 C0 C0 P
+++++
apply (perp_col2 C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C D C0 P
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C2 C0)
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C2
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA P C0 C2 A1 P C0
+++++
apply conga_sym.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P C0 P C0 C2
+++++
apply conga_right_comm.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P C0 C2 C0 P
+++++
apply aia.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 A1 C2
+++++
apply (l9_8_2 _ _ C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 C1 C2
+++++
repeat split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C1 P C0)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col C2 P C0)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun T : Tpoint => and (Col T P C0) (Bet C1 T C2))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.
Col.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun T : Tpoint => and (Col T P C0) (Bet C1 T C2))
+++++
exists C0.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.
Col.
exists C0.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col C0 P C0) (Bet C1 C0 C2)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.
Col.
exists C0.
split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C0 P C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.
Col.
exists C0.
split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C1 C0 C2
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
repeat split.
Col.
exists C0.
split.
Col.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet C1 C0 C2
+++++
Between.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 A1
+++++
apply (one_side_transitivity _ _ _ Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
apply (one_side_transitivity _ _ _ Q1).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (l9_8_2 _ _ C1).
apply (one_side_transitivity _ _ _ Q1).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 Q1 A1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P A1 C0 C2
+++++
apply (par_col4__par A B C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P A1)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C0 C2)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B C D
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.
auto.
apply (l11_17 P C0 C2).
apply conga_sym.
apply conga_right_comm.
apply aia.
apply (par_col4__par A B C D).

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C2
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
exists A1.
exists P.
exists C0.
split.

*****
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA A1 P Q1 A1 P C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert (HS := greenberg P C0 C1 A1 P Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).

*****
HS : forall (_ : not (Col A1 P Q1)) (_ : Acute A1 P Q1) \n (_ : not (eq C0 C1)) (_ : Per P C0 C1),\nex (fun S : Tpoint => and (LtA P S C0 A1 P Q1) (Out C0 S C1))
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HS as [S []].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 P Q1)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A1 P Q1)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
intro.

*****
H38 : Col A1 P Q1
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HQ.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
intro.
apply HQ.

*****
H38 : Col A1 P Q1
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B Q
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Acute A1 P Q1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C0 C1)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P C0 C1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Per P C0 C1
+++++
apply perp_per_1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C0 P C1 C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C0 P C1 C0
+++++
apply perp_sym.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.
apply perp_sym.

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C1 C0 C0 P
+++++
apply (perp_col2 C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp C D C0 P
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C1 C0)
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C1
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
apply perp_per_1.
auto.
apply perp_sym.
apply (perp_col2 C D).

*****
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
Perp.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].

*****
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.

*****
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(Col C D S).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).

*****
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D S
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).

*****
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.

*****
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert_diffs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.

*****
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(OS P C0 S C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).

*****
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S C1
+++++
apply invert_one_side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
apply invert_one_side.

*****
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C0 P S C1
+++++
apply out_one_side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
apply invert_one_side.
apply out_one_side.

*****
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C0 P S)) (not (Col C0 P C1))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
apply invert_one_side.
apply out_one_side.

*****
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C0 S C1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
assert(HY : InAngle Q1 C0 P S).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P S
+++++
assert(OS P C0 S C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S C1
+++++
apply invert_one_side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
apply invert_one_side.

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS C0 P S C1
+++++
apply out_one_side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
apply invert_one_side.
apply out_one_side.

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (Col C0 P S)) (not (Col C0 P C1))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
apply invert_one_side.
apply out_one_side.

*****
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out C0 S C1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).

*****
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P S
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.

*****
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P S
+++++
assert(~ Col P C0 S).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).

*****
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P C0 S)
+++++
apply (one_side_not_col123 _ _ _ C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
apply (one_side_not_col123 _ _ _ C1).

*****
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S C1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P S
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle Q1 C0 P S
+++++
apply os2__inangle.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S Q1
+++++
apply (one_side_transitivity _ _ _ C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
apply (one_side_transitivity _ _ _ C1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S C1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
apply (one_side_transitivity _ _ _ C1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P S C0 Q1
+++++
exists A1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (TS P S C0 A1) (TS P S Q1 A1)
+++++
assert(OS P C0 S A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S A1
+++++
apply (one_side_transitivity _ _ _ C1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
apply (one_side_transitivity _ _ _ C1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S C1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
apply (one_side_transitivity _ _ _ C1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
apply (one_side_transitivity _ _ _ C1).
auto.

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 A1
+++++
apply (one_side_transitivity _ _ _ Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
apply (one_side_transitivity _ _ _ C1).
auto.
apply (one_side_transitivity _ _ _ Q1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 C1 Q1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
apply (one_side_transitivity _ _ _ C1).
auto.
apply (one_side_transitivity _ _ _ Q1).

*****
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 Q1 A1
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (TS P S C0 A1) (TS P S Q1 A1)
+++++
assert(TS P S C0 A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S C0 A1
+++++
apply l9_31.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 S A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P A1 S C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P A1 S C0
+++++
apply l12_6.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict P A1 S C0
+++++
apply (par_strict_col4__par_strict A B C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P A1)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S C0)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B C D
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D S
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
apply l9_31.
auto.
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (TS P S C0 A1) (TS P S Q1 A1)
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (TS P S C0 A1) (TS P S Q1 A1)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S C0 A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
assert(CongA A1 P S C0 S P).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P S C0 S P
+++++
apply aia.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S A1 C0
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P A1 S C0
+++++
Side.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par P A1 S C0
+++++
apply (par_col4__par A B C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P A1)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S C0)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B C D
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D S
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
apply aia.
Side.
apply (par_col4__par A B C D).

*****
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
assert(Hlta : LtA A1 P S A1 P Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA A1 P S A1 P Q1
+++++
apply (conga_preserves_lta P S C0 A1 P Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
apply (conga_preserves_lta P S C0 A1 P Q1).

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA P S C0 A1 P S
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
apply (conga_preserves_lta P S C0 A1 P Q1).

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P Q1 A1 P Q1
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
apply (conga_preserves_lta P S C0 A1 P Q1).

*****
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LtA P S C0 A1 P Q1
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).

*****
Hlta : LtA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
idtac.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.

*****
Hlta : LtA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
destruct Hlta as [Hlea HNConga].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].

*****
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41,H45 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
assert_diffs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P S Q1 A1
+++++
apply invert_two_sides.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS S P Q1 A1
+++++
apply in_angle_two_sides.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q1 S)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P Q1 S)
+++++
intro.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.

*****
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
elim (out_dec P S Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).

*****
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : Out P S Q1, False
+++++
intro Habs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply HNConga.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P S A1 P Q1
+++++
apply (out_conga A1 P S A1 P S).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P S A1 P S
+++++
try (apply out_trivial).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).
try (apply out_trivial).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
CongA A1 P S A1 P S
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out P A1 A1
+++++
try (apply out_trivial).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).
try (apply out_trivial).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 P)
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out P S S
+++++
try (apply out_trivial).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).
try (apply out_trivial).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq S P)
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out P A1 A1
+++++
try (apply out_trivial).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).
try (apply out_trivial).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 P)
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out P S Q1
+++++
try (apply out_trivial).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply HNConga.
apply (out_conga A1 P S A1 P S).
try (apply out_trivial).

*****
Habs : Out P S Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Out P S Q1
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).

*****
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : not (Out P S Q1), False
+++++
intro Habs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.

*****
Habs : not (Out P S Q1)
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply not_out_bet in Habs.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert(~ OS P C0 S A1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (OS P C0 S A1)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (OS P C0 S A1)
+++++
apply l9_9.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 S A1
+++++
apply l9_2.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 A1 S
+++++
apply (l9_8_2 _ _ Q1).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 Q1 S
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
TS P C0 Q1 S
+++++
repeat split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col Q1 P C0)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col S P C0)
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun T : Tpoint => and (Col T P C0) (Bet Q1 T S))
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.
Col.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun T : Tpoint => and (Col T P C0) (Bet Q1 T S))
+++++
exists P.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.
Col.
exists P.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col P P C0) (Bet Q1 P S)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.
Col.
exists P.
split.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P P C0
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.
Col.
exists P.
split.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet Q1 P S
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).
auto.
repeat split.
Col.
exists P.
split.
Col.

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Bet Q1 P S
+++++
Between.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).
auto.
apply l9_9.
apply l9_2.
apply (l9_8_2 _ _ Q1).

*****
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS P C0 Q1 A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.
Col.
assert(~ OS P C0 S A1).

*****
H51 : not (OS P C0 S A1)
Habs : Bet S P Q1
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
intro.
elim (out_dec P S Q1).
intro Habs.
apply not_out_bet in Habs.

*****
Habs : not (Out P S Q1)
H45 : Col P Q1 S
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S P Q1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col P A1 S)
+++++
apply not_col_permutation_1.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col S P A1)
+++++
apply (par_not_col C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D P A1
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D P A1
+++++
apply (par_strict_col2_par_strict _ _ A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.
apply (par_strict_col2_par_strict _ _ A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P A1)
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.
apply (par_strict_col2_par_strict _ _ A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict C D A B
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.
apply (par_strict_col2_par_strict _ _ A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).
Col.
apply (par_strict_col2_par_strict _ _ A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
Par.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
apply not_col_permutation_1.
apply (par_not_col C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col S C D
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle S Q1 P A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle S Q1 P A1
+++++
apply l11_24.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
InAngle S A1 P Q1
+++++
apply lea_in_angle.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
LeA A1 P S A1 P Q1
+++++
Lea.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P Q1 S
+++++
Lea.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P Q1 S
+++++
CongA.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P Q1 S
+++++
apply (one_side_transitivity _ _ _ C0).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P Q1 C0
+++++
apply one_side_symmetry.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply one_side_symmetry.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P C0 Q1
+++++
apply (col2_os__os A B).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply one_side_symmetry.
apply (col2_os__os A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 P)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply one_side_symmetry.
apply (col2_os__os A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply one_side_symmetry.
apply (col2_os__os A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply one_side_symmetry.
apply (col2_os__os A B).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A B C0 Q1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
OS A1 P C0 S
+++++
apply l12_6.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A1 P C0 S
+++++
apply (par_strict_col4__par_strict A B C D).
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq A1 P)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C0 S)
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B C D
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B A1
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B P
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D C0
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
assert(OS P C0 S C1).
idtac.
assert(~ Col P C0 S).
idtac.
apply os2__inangle.
exists A1.
assert(OS P C0 S A1).
assert(TS P S C0 A1).
idtac.
split.
auto.
assert(CongA A1 P S C0 S P).
idtac.
assert(Hlta : LtA A1 P S A1 P Q1).
idtac.
destruct Hlta as [Hlea HNConga].
assert_diffs.
apply invert_two_sides.
apply in_angle_two_sides.
auto.
apply l11_24.
apply lea_in_angle.
Lea.
CongA.
apply (one_side_transitivity _ _ _ C0).
apply l12_6.
apply (par_strict_col4__par_strict A B C D).

*****
H56 : not (eq S A1)
HNConga : not (CongA A1 P S A1 P Q1)
Hlea : LeA A1 P S A1 P Q1
H50 : CongA A1 P S C0 S P
H48 : TS P S C0 A1
H47 : OS P C0 S A1
H46 : not (Col P C0 S)
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D S
+++++
auto.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).

*****
HY : InAngle Q1 C0 P S
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].

*****
HY2 : or (eq Y P) (Out P Y Q1)
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun Y : Tpoint => and (Col P Q Y) (Col C D Y))
+++++
exists Y.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.

*****
HY2 : or (eq Y P) (Out P Y Q1)
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col P Q Y) (Col C D Y)
+++++
split.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.
split.

*****
HY2 : or (eq Y P) (Out P Y Q1)
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q Y
+++++
destruct HY2.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.
split.
destruct HY2.

*****
H45 : eq Y P
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q Y
+++++
subst Y.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.
split.
destruct HY2.
subst Y.

*****
HY1 : Bet C0 P S
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q P
+++++
Col.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.
split.
destruct HY2.

*****
H45 : Out P Y Q1
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q Y
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).
intro HStrict.
assert(HParS : Par_strict A B C D).
assert (HC0 := l8_18_existence C D P).
destruct HC0 as [C0 []].
auto.
elim(col_dec P Q C0).
intro HNCol1.
assert_diffs.
assert(HQ1 : exists Q1, Col Q P Q1 /\\ OS A B C0 Q1).
destruct HQ1 as [Q1 []].
assert(~Col A B Q1).
idtac.
assert(P<>Q1).
idtac.
assert(~ Col P C0 Q1).
idtac.
assert(HNCol2 : ~Col C0 A B).
idtac.
assert(HA1 : exists A1, Col A B A1 /\\ OS P C0 Q1 A1).
destruct HA1 as [A1 []].
assert(~Col P C0 A1).
idtac.
assert(HNCol3 : ~Col P C D).
idtac.
assert(HC1 : exists C1, Col C D C1 /\\ OS P C0 Q1 C1).
destruct HC1 as [C1 []].
assert(HNCol4 : ~Col P C0 C1).
idtac.
assert(HC2 := symmetric_point_construction C1 C0).
destruct HC2 as [C2].
assert_cols.
assert_diffs.
assert(~ Col C2 P C0).
idtac.
assert(Col C D C2).
idtac.
assert(InAngle Q1 C0 P A1).
idtac.
assert(LtA A1 P Q1 A1 P C0).
assert(Acute A1 P Q1).
assert (HS := greenberg P C0 C1 A1 P Q1).
destruct HS as [S []].
auto.
assert(Col C D S).
idtac.
assert_diffs.
assert(OS P C0 S C1).
idtac.
assert(HY : InAngle Q1 C0 P S).
destruct HY as [_ [_ [_ [Y [HY1 HY2]]]]].
exists Y.
split.

*****
HY2 : or (eq Y P) (Out P Y Q1)
HY1 : Bet C0 Y S
Y : Tpoint
H41 : OS P C0 S C1
H49 : not (eq A1 Q1)
H43 : not (eq P S)
H42 : not (eq S C0)
H44 : not (eq C2 P)
H40 : Col C D S
H39 : Out C0 S C1
H38 : LtA P S C0 A1 P Q1
S : Tpoint
H37 : Acute A1 P Q1
H36 : LtA A1 P Q1 A1 P C0
H35 : InAngle Q1 C0 P A1
H33 : Col C D C2
H22 : not (Col C2 P C0)
H32 : not (eq C0 C2)
H23 : not (eq C1 C2)
H34 : not (eq A Q1)
H30 : not (eq B Q1)
H26 : not (eq C0 Q1)
H31 : not (eq C0 B)
H28 : not (eq C0 A)
H29 : not (eq P A1)
H25 : not (eq C0 A1)
H27 : not (eq P C1)
H24 : not (eq C0 C1)
H21 : Col C0 C1 C2
H20 : Midpoint C0 C1 C2
C2 : Tpoint
HNCol4 : not (Col P C0 C1)
H19 : OS P C0 Q1 C1
H18 : Col C D C1
C1 : Tpoint
HNCol3 : not (Col P C D)
H17 : not (Col P C0 A1)
H16 : OS P C0 Q1 A1
H15 : Col A B A1
A1 : Tpoint
HNCol2 : not (Col C0 A B)
H14 : not (Col P C0 Q1)
H13 : not (eq P Q1)
H11 : not (Col A B Q1)
H2 : OS A B C0 Q1
H1 : Col Q P Q1
Q1 : Tpoint
H12 : not (eq A Q)
H8 : not (eq B Q)
H10 : not (eq A B)
H9 : not (eq C P)
H5 : not (eq D P)
H7 : not (eq C D)
H6 : not (eq P C0)
H3 : not (eq Q C0)
H4 : not (eq P Q)
HNCol1 : not (Col P Q C0)
H0 : Perp C D P C0
H : Col C D C0
C0 : Tpoint
HParS : Par_strict A B C D
HStrict : not (Col C D P)
HCop : Coplanar C D P Q
HQ : not (Col A B Q)
HP : Col A B P
HPar : Par A B C D
A,B,C,D,P,Q : Tpoint
aia : alternate_interior_angles_postulate
greenberg : greenberg_s_axiom
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col C D Y
+++++
ColR.
-----
Lemma alternate_interior__proclus : greenberg_s_axiom -> alternate_interior_angles_postulate -> proclus_postulate.
Proof.
intros greenberg aia.
intros A B C D P Q HPar HP HQ HCop.
elim(col_dec C D P).

*****

*****

+++++
Qed.
-----
End alternate_interior_angles_proclus.
-----
