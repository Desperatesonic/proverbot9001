Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Ch13_1.
-----
Section weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom :\n  weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : weak_triangle_circumscription_principle, bachmann_s_lotschnittaxiom
+++++
Proof.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : weak_triangle_circumscription_principle, bachmann_s_lotschnittaxiom
+++++
intro HP.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.

*****
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
bachmann_s_lotschnittaxiom
+++++
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\ Col D1 D2 I).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).

*****
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint) (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2) (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC) (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD) (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2) (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2) (_ : not (Col IAB IAC IBD)), ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I)), bachmann_s_lotschnittaxiom
+++++
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.

*****
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
destruct (eq_dec_points P P1).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).

*****
H : eq P P1
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
subst; exists R; Col.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).
subst; exists R; Col.

*****
H : not (eq P P1)
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
destruct (eq_dec_points R R1).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).
subst; exists R; Col.
destruct (eq_dec_points R R1).

*****
H0 : eq R R1
H : not (eq P P1)
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
subst; exists P; Col.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).
subst; exists R; Col.
destruct (eq_dec_points R R1).
subst; exists P; Col.

*****
H0 : not (eq R R1)
H : not (eq P P1)
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).
subst; exists R; Col.
destruct (eq_dec_points R R1).
subst; exists P; Col.
assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).

*****
HNCol : not (Col P Q R)
H0 : not (eq R R1)
H : not (eq P P1)
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.
destruct (eq_dec_points P P1).
subst; exists R; Col.
destruct (eq_dec_points R R1).
subst; exists P; Col.
assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).
destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.

*****
HS2 : Col R R1 S
HS1 : Col P P1 S
S : Tpoint
HNCol : not (Col P Q R)
H0 : not (eq R R1)
H : not (eq P P1)
HCop2 : Coplanar P Q R R1
HCop1 : Coplanar P Q R P1
HPerR : Per Q R R1
HPerP : Per Q P P1
HPerQ : Per P Q R
HQR : not (eq Q R)
HPQ : not (eq P Q)
P,Q,R,P1,R1 : Tpoint
lotschnitt : forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint)\n (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2)\n (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC)\n (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD)\n (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2)\n (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2)\n (_ : not (Col IAB IAC IBD)),\nex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun S : Tpoint => and (Col P P1 S) (Col R R1 S))
+++++
exists S; auto.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).

*****
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD : Tpoint) (_ : Perp A1 A2 B1 B2) (_ : Perp A1 A2 C1 C2) (_ : Perp B1 B2 D1 D2) (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC) (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD) (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2) (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2) (_ : not (Col IAB IAC IBD)), ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.

*****
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (_ : Col A1 A2 IAB) (_ : Col B1 B2 IAB) (_ : Col A1 A2 IAC) (_ : Col C1 C2 IAC) (_ : Col B1 B2 IBD) (_ : Col D1 D2 IBD) (_ : Coplanar IAB IAC IBD C1) (_ : Coplanar IAB IAC IBD C2) (_ : Coplanar IAB IAC IBD D1) (_ : Coplanar IAB IAC IBD D2) (_ : not (Col IAB IAC IBD)), ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.

*****
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
destruct (symmetric_point_construction IAB IAC) as [E HE].
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].

*****
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
destruct (symmetric_point_construction IAB IBD) as [F HF].
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].

*****
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Col IAB IAC A1) by (assert_diffs; ColR).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).

*****
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Col IAB IAC A2) by (assert_diffs; ColR).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).

*****
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (HPerp4 : Perp E IAB IAB F).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).

*****
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp E IAB IAB F
+++++
assert (E <> IAB).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (E <> IAB).

*****
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq E IAB)
+++++
intro; treat_equalities; apply HNC; Col.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (E <> IAB).

*****
H1 : not (eq E IAB)
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp E IAB IAB F
+++++
assert (IAB <> F).
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (E <> IAB).
assert (IAB <> F).

*****
H1 : not (eq E IAB)
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq IAB F)
+++++
intro; treat_equalities; apply HNC; Col.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (E <> IAB).
assert (IAB <> F).

*****
H2 : not (eq IAB F)
H1 : not (eq E IAB)
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Perp E IAB IAB F
+++++
apply perp_col0 with B1 B2; try (apply perp_col0 with A1 A2); Col; assert_diffs; assert_cols; ColR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).

*****
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar IAB IAC IBD E) by Cop.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.

*****
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar IAB IAC IBD F) by Cop.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.
assert (Coplanar IAB IAC IBD F) by Cop.

*****
H2 : Coplanar IAB IAC IBD F
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar E F IAB D1) by CopR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.
assert (Coplanar IAB IAC IBD F) by Cop.
assert (Coplanar E F IAB D1) by CopR.

*****
H3 : Coplanar E F IAB D1
H2 : Coplanar IAB IAC IBD F
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar E F IAB D2) by CopR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.
assert (Coplanar IAB IAC IBD F) by Cop.
assert (Coplanar E F IAB D1) by CopR.
assert (Coplanar E F IAB D2) by CopR.

*****
H4 : Coplanar E F IAB D2
H3 : Coplanar E F IAB D1
H2 : Coplanar IAB IAC IBD F
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar E F IAB C1) by CopR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.
assert (Coplanar IAB IAC IBD F) by Cop.
assert (Coplanar E F IAB D1) by CopR.
assert (Coplanar E F IAB D2) by CopR.
assert (Coplanar E F IAB C1) by CopR.

*****
H5 : Coplanar E F IAB C1
H4 : Coplanar E F IAB D2
H3 : Coplanar E F IAB D1
H2 : Coplanar IAB IAC IBD F
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
assert (Coplanar E F IAB C2) by CopR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).
intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.
intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.
destruct (symmetric_point_construction IAB IAC) as [E HE].
destruct (symmetric_point_construction IAB IBD) as [F HF].
assert (Col IAB IAC A1) by (assert_diffs; ColR).
assert (Col IAB IAC A2) by (assert_diffs; ColR).
assert (HPerp4 : Perp E IAB IAB F).
assert (Coplanar IAB IAC IBD E) by Cop.
assert (Coplanar IAB IAC IBD F) by Cop.
assert (Coplanar E F IAB D1) by CopR.
assert (Coplanar E F IAB D2) by CopR.
assert (Coplanar E F IAB C1) by CopR.
assert (Coplanar E F IAB C2) by CopR.

*****
H6 : Coplanar E F IAB C2
H5 : Coplanar E F IAB C1
H4 : Coplanar E F IAB D2
H3 : Coplanar E F IAB D1
H2 : Coplanar IAB IAC IBD F
H1 : Coplanar IAB IAC IBD E
HPerp4 : Perp E IAB IAB F
H0 : Col IAB IAC A2
H : Col IAB IAC A1
HF : Midpoint IBD IAB F
F : Tpoint
HE : Midpoint IAC IAB E
E : Tpoint
HNC : not (Col IAB IAC IBD)
HCop4 : Coplanar IAB IAC IBD D2
HCop3 : Coplanar IAB IAC IBD D1
HCop2 : Coplanar IAB IAC IBD C2
HCop1 : Coplanar IAB IAC IBD C1
HCol6 : Col D1 D2 IBD
HCol5 : Col B1 B2 IBD
HCol4 : Col C1 C2 IAC
HCol3 : Col A1 A2 IAC
HCol2 : Col B1 B2 IAB
HCol1 : Col A1 A2 IAB
HPerp3 : Perp B1 B2 D1 D2
HPerp2 : Perp A1 A2 C1 C2
HPerp1 : Perp A1 A2 B1 B2
A1,A2,B1,B2,C1,C2,D1,D2,IAB,IAC,IBD : Tpoint
HP : weak_triangle_circumscription_principle
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
ex (fun I : Tpoint => and (Col C1 C2 I) (Col D1 D2 I))
+++++
destruct (HP E F IAB D1 D2 C1 C2) as [I [HC7 HC8]]; auto; try (exists I; Col); try (apply not_col_permutation_1; apply perp_not_col); try apply perp_per_1; try solve[assert_diffs; Perp]; split; [|assert_diffs| |assert_diffs]; auto; split; [exists IBD; split; Col| |exists IAC; split; Col|]; left; [apply perp_col0 with B1 B2|apply perp_col0 with A1 A2]; assert_diffs; Col; ColR.
-----
Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.
Proof.
intro HP.
cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).

*****

*****

+++++
Qed.
-----
End weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.
-----
