Require Export GeoCoq.Tarski_dev.Annexes.midpoint_theorems.
-----
Section Varignon.
-----
Context `{TE:Tarski_euclidean}.
-----
Lemma varignon :\n forall A B C D I J K L,\n  A<>C -> B<>D -> ~ Col I J K ->\n  Midpoint I A B ->\n  Midpoint J B C ->\n  Midpoint K C D ->\n  Midpoint L A D ->\n  Parallelogram I J K L.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : not (eq A C)) (_ : not (eq B D)) (_ : not (Col I J K)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
Proof.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : not (eq A C)) (_ : not (eq B D)) (_ : not (Col I J K)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
intros.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.

*****
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert_diffs.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.

*****
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I L B D).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).

*****
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L B D
+++++
perm_apply (triangle_mid_par B D A L I).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).

*****
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.

*****
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par J K B D).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).

*****
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par J K B D
+++++
perm_apply (triangle_mid_par B D C K J).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).

*****
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.

*****
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I L J K).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).

*****
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L J K
+++++
apply par_trans with B D.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
apply par_trans with B D.

*****
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L B D
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
apply par_trans with B D.

*****
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par B D J K
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).

*****
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.

*****
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I J A C).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).

*****
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J A C
+++++
perm_apply (triangle_mid_par A C B J I).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).

*****
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.

*****
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par L K A C).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).

*****
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par L K A C
+++++
perm_apply (triangle_mid_par A C D K L).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).

*****
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.

*****
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I J K L).
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).

*****
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
apply par_trans with A C.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
apply par_trans with A C.

*****
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J A C
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
apply par_trans with A C.

*****
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A C K L
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).

*****
H14 : Par I J K L
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
idtac.

*****
H14 : Par I J K L
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
apply par_2_plg.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
idtac.
apply par_2_plg.

*****
H14 : Par I J K L
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col I J K)
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
idtac.
apply par_2_plg.

*****
H14 : Par I J K L
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).
idtac.
assert (Par J K B D).
idtac.
assert (Par I L J K).
idtac.
assert (Par I J A C).
idtac.
assert (Par L K A C).
idtac.
assert (Par I J K L).
idtac.
apply par_2_plg.

*****
H14 : Par I J K L
H13 : Par L K A C
H12 : Par I J A C
H10 : Par I L J K
H7 : Par J K B D
H6 : Par I L B D
H11 : not (eq I K)
H8 : not (eq J K)
H9 : not (eq I J)
H5 : Midpoint L A D
H4 : Midpoint K C D
H3 : Midpoint J B C
H2 : Midpoint I A B
H1 : not (Col I J K)
H0 : not (eq B D)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L J K
+++++
finish.
-----
Lemma varignon : forall A B C D I J K L, A<>C -> B<>D -> ~ Col I J K -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
assert_diffs.
assert (Par I L B D).

*****

*****

+++++
Qed.
-----
Lemma varignon_aux_aux :\n forall A B C D I J K L,\n  A<>C ->\n  J<>L -> \n  Midpoint I A B ->\n  Midpoint J B C ->\n  Midpoint K C D ->\n  Midpoint L A D ->\n  Parallelogram I J K L.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : not (eq A C)) (_ : not (eq J L)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
Proof.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : not (eq A C)) (_ : not (eq J L)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
intros.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.

*****
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
induction (eq_dec_points B D).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).

*****
H5 : eq B D
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
treat_equalities.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
treat_equalities.

*****
H2 : Midpoint K B C
H1 : Midpoint L A B
H0 : not (eq K L)
H : not (eq A C)
A,B,C,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram L K K L
+++++
apply plg_trivial.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
treat_equalities.
apply plg_trivial.

*****
H2 : Midpoint K B C
H1 : Midpoint L A B
H0 : not (eq K L)
H : not (eq A C)
A,B,C,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq L K)
+++++
intro.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
treat_equalities.
apply plg_trivial.
intro.

*****
H3 : eq L K
H2 : Midpoint K B C
H1 : Midpoint L A B
H0 : not (eq K L)
H : not (eq A C)
A,B,C,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
treat_equalities.
apply plg_trivial.
intro.
treat_equalities.

*****
H1 : Midpoint L C B
H0 : not (eq L L)
H : not (eq C C)
B,C,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).

*****
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
Name X the midpoint of B and D.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.

*****
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert_diffs.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par B D L I /\ Cong B X L I).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B D L I) (Cong B X L I)
+++++
apply (triangle_mid_par_cong_1 A B D X L I).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L A D
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A B
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par B D K J /\ Cong B X K J).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B D K J) (Cong B X K J)
+++++
apply (triangle_mid_par_cong_1 C B D X K J).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K C D
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint J C B
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).

*****
H10 : and (Par B D K J) (Cong B X K J)
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.

*****
H10 : and (Par B D K J) (Cong B X K J)
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
spliter.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I L J K).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L J K
+++++
eapply par_trans with B D.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
eapply par_trans with B D.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L B D
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
eapply par_trans with B D.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par B D J K
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Cong I L J K).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L J K
+++++
eapply cong_transitivity with B X.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
eapply cong_transitivity with B X.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L B X
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
eapply cong_transitivity with B X.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B X J K
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).

*****
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.

*****
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
Name X' the midpoint of A and C.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par A C J I /\ Cong A X' J I).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A C J I) (Cong A X' J I)
+++++
apply (triangle_mid_par_cong_1 B A C X' J I).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C A)
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X' A C
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint J B C
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I B A
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par A C K L /\ Cong A X' K L).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A C K L) (Cong A X' K L)
+++++
apply (triangle_mid_par_cong_1 D A C X' K L).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C A)
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X' A C
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K D C
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L D A
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).

*****
H17 : and (Par A C K L) (Cong A X' K L)
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.

*****
H17 : and (Par A C K L) (Cong A X' K L)
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
spliter.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I J K L).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
eapply par_trans with A C.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
eapply par_trans with A C.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J A C
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
eapply par_trans with A C.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A C K L
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Cong I J K L).
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J K L
+++++
eapply cong_transitivity with A X'.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
eapply cong_transitivity with A X'.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J A X'
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
eapply cong_transitivity with A X'.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A X' K L
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
apply par_par_cong_cong_parallelogram.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq J L)
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J K L
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong J K L I
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par J K I L
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq B D)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
finish.
-----
Lemma varignon_aux_aux : forall A B C D I J K L, A<>C -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points B D).

*****

*****

+++++
Qed.
-----
Lemma varignon_aux :\n forall A B C D I J K L,\n  (A<>C \/ B<>D) ->\n  J<>L ->\n  Midpoint I A B ->\n  Midpoint J B C ->\n  Midpoint K C D ->\n  Midpoint L A D ->\n  Parallelogram I J K L.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : or (not (eq A C)) (not (eq B D))) (_ : not (eq J L)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
Proof.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : or (not (eq A C)) (not (eq B D))) (_ : not (eq J L)) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
intros.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.

*****
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
induction H.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.

*****
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq A C)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
eauto using varignon_aux_aux.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.

*****
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
induction (eq_dec_points A C).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).

*****
H5 : eq A C
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
treat_equalities.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
treat_equalities.

*****
H3 : Midpoint L A D
H1 : Midpoint J A B
H0 : not (eq J L)
H : not (eq B D)
A,B,D,J,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram J J L L
+++++
apply plg_trivial1.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
treat_equalities.
apply plg_trivial1.

*****
H3 : Midpoint L A D
H1 : Midpoint J A B
H0 : not (eq J L)
H : not (eq B D)
A,B,D,J,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq J L)
+++++
intro.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
treat_equalities.
apply plg_trivial1.
intro.

*****
H2 : eq J L
H3 : Midpoint L A D
H1 : Midpoint J A B
H0 : not (eq J L)
H : not (eq B D)
A,B,D,J,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
treat_equalities.
apply plg_trivial1.
intro.
treat_equalities.

*****
H1 : Midpoint J A D
H0 : not (eq J J)
H : not (eq D D)
A,D,J : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).

*****
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
Name X the midpoint of B and D.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.

*****
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert_diffs.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par B D L I /\ Cong B X L I).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B D L I) (Cong B X L I)
+++++
apply (triangle_mid_par_cong_1 A B D X L I).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L A D
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
apply (triangle_mid_par_cong_1 A B D X L I).

*****
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A B
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par B D K J /\ Cong B X K J).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B D K J) (Cong B X K J)
+++++
apply (triangle_mid_par_cong_1 C B D X K J).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K C D
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
apply (triangle_mid_par_cong_1 C B D X K J).

*****
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint J C B
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).

*****
H10 : and (Par B D K J) (Cong B X K J)
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.

*****
H10 : and (Par B D K J) (Cong B X K J)
H6 : and (Par B D L I) (Cong B X L I)
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
spliter.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I L J K).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L J K
+++++
eapply par_trans with B D.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
eapply par_trans with B D.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L B D
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
eapply par_trans with B D.

*****
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par B D J K
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Cong I L J K).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L J K
+++++
eapply cong_transitivity with B X.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
eapply cong_transitivity with B X.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L B X
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
eapply cong_transitivity with B X.

*****
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong B X J K
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).

*****
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.

*****
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
Name X' the midpoint of A and C.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par A C J I /\ Cong A X' J I).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A C J I) (Cong A X' J I)
+++++
apply (triangle_mid_par_cong_1 B A C X' J I).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C A)
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X' A C
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint J B C
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
apply (triangle_mid_par_cong_1 B A C X' J I).

*****
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I B A
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par A C K L /\ Cong A X' K L).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A C K L) (Cong A X' K L)
+++++
apply (triangle_mid_par_cong_1 D A C X' K L).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C A)
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X' A C
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K D C
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
apply (triangle_mid_par_cong_1 D A C X' K L).

*****
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L D A
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).

*****
H17 : and (Par A C K L) (Cong A X' K L)
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.

*****
H17 : and (Par A C K L) (Cong A X' K L)
H15 : and (Par A C J I) (Cong A X' J I)
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
spliter.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Par I J K L).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
eapply par_trans with A C.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
eapply par_trans with A C.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J A C
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
eapply par_trans with A C.

*****
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A C K L
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
assert (Cong I J K L).
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J K L
+++++
eapply cong_transitivity with A X'.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
eapply cong_transitivity with A X'.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J A X'
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
eapply cong_transitivity with A X'.

*****
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong A X' K L
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
idtac.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
apply par_par_cong_cong_parallelogram.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq J L)
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I J K L
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong J K L I
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par J K I L
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.
induction (eq_dec_points A C).
Name X the midpoint of B and D.
assert_diffs.
assert (Par B D L I /\\ Cong B X L I).
idtac.
assert (Par B D K J /\\ Cong B X K J).
idtac.
spliter.
assert (Par I L J K).
idtac.
assert (Cong I L J K).
idtac.
Name X' the midpoint of A and C.
assert (Par A C J I /\\ Cong A X' J I).
idtac.
assert (Par A C K L /\\ Cong A X' K L).
idtac.
spliter.
assert (Par I J K L).
idtac.
assert (Cong I J K L).
idtac.
apply par_par_cong_cong_parallelogram.

*****
H21 : Cong I J K L
H20 : Par I J K L
H18 : Cong A X' K L
H17 : Par A C K L
H19 : Cong A X' J I
H15 : Par A C J I
H16 : Midpoint X' A C
X' : Tpoint
H14 : Cong I L J K
H13 : Par I L J K
H11 : Cong B X K J
H10 : Par B D K J
H12 : Cong B X L I
H6 : Par B D L I
H9 : not (eq X D)
H8 : not (eq X B)
H7 : Midpoint X B D
X : Tpoint
H5 : not (eq A C)
H4 : Midpoint L A D
H3 : Midpoint K C D
H2 : Midpoint J B C
H1 : Midpoint I A B
H0 : not (eq J L)
H : not (eq B D)
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I J K L
+++++
finish.
-----
Lemma varignon_aux : forall A B C D I J K L, (A<>C \\/ B<>D) -> J<>L -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction H.

*****

*****

+++++
Qed.
-----
Lemma varignon' :\n forall A B C D I J K L,\n  (A<>C \/ B<>D) ->\n  Midpoint I A B ->\n  Midpoint J B C ->\n  Midpoint K C D ->\n  Midpoint L A D ->\n  Parallelogram I J K L.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : or (not (eq A C)) (not (eq B D))) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
Proof.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.

*****
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (A B C D I J K L : Tpoint) (_ : or (not (eq A C)) (not (eq B D))) (_ : Midpoint I A B) (_ : Midpoint J B C) (_ : Midpoint K C D) (_ : Midpoint L A D), Parallelogram I J K L
+++++
intros.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.

*****
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
induction (eq_dec_points J L).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).

*****
H4 : eq J L
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
subst.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.

*****
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I L K L
+++++
unfold Parallelogram.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.

*****
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (Parallelogram_strict I L K L) (Parallelogram_flat I L K L)
+++++
right.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.

*****
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram_flat I L K L
+++++
unfold Parallelogram_flat.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.

*****
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
assert_congs_perm.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.

*****
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
Name X the midpoint of B and D.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.

*****
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
induction (eq_dec_points A B).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).

*****
H4 : eq A B
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.

*****
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I X K) (and (Col I X X) (and (Cong I X K X) (and (Cong I X K X) (or (not (eq I K)) (not (eq X X))))))
+++++
assert_cols.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I X K) (and (Col I X X) (and (Cong I X K X) (and (Cong I X K X) (or (not (eq I K)) (not (eq X X))))))
+++++
repeat split.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I X K
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.
Cong.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I X K
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I X X
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.
Cong.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I X X
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I X K X
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I X K X
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq X X))
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.
Cong.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq X X))
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
treat_equalities.
assert_cols.
repeat split.
Cong.
Col.

*****
H0 : Col X I K
H : or (not (eq I K)) (not (eq I K))
H8 : Cong K X X I
H1 : Midpoint X I K
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq X X))
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).

*****
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
induction (eq_dec_points A D).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).

*****
H6 : eq A D
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.

*****
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X L K) (and (Col X L L) (and (Cong X L K L) (and (Cong X L K L) (or (not (eq X K)) (not (eq L L))))))
+++++
induction (eq_dec_points X K).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).

*****
H3 : eq X K
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X L K) (and (Col X L L) (and (Cong X L K L) (and (Cong X L K L) (or (not (eq X K)) (not (eq L L))))))
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
treat_equalities.

*****
H4 : not (eq X X)
H : or (not (eq X X)) (not (eq X X))
X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X X X) (and (Col X X X) (and (Cong X X X X) (and (Cong X X X X) (or (not (eq X X)) (not (eq X X))))))
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).

*****
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X L K) (and (Col X L L) (and (Cong X L K L) (and (Cong X L K L) (or (not (eq X K)) (not (eq L L))))))
+++++
assert_cols.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X L K) (and (Col X L L) (and (Cong X L K L) (and (Cong X L K L) (or (not (eq X K)) (not (eq L L))))))
+++++
assert (Cong X L K L).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong X L K L
+++++
assert (Par B L L K /\ Par B C K X /\ Par L C L X /\ Cong B X K L /\ Cong L X K L /\ Cong B L K X /\ Cong C L K X /\ Cong L K L X /\ Cong C K L X).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B L L K) (and (Par B C K X) (and (Par L C L X) (and (Cong B X K L) (and (Cong L X K L) (and (Cong B L K X) (and (Cong C L K X) (and (Cong L K L X) (Cong C K L X))))))))
+++++
apply (triangle_mid_par_flat_cong B L C K L X).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq L B)
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
intro.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.
intro.

*****
H8 : eq C B
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.
intro.
treat_equalities.

*****
H : or (not (eq K K)) (not (eq K K))
H3 : not (eq K K)
K : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C L)
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C L)
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C L)
+++++
intro.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.
intro.

*****
H8 : eq C L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.
Midpoint.
intro.
treat_equalities.

*****
H1 : Midpoint K K K
H : or (not (eq K K)) (not (eq K K))
H3 : not (eq K K)
K : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col B L C
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K L C
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K L C
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L B C
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B L
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
apply (triangle_mid_par_flat_cong B L C K L X).
Col.

*****
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B L
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).

*****
H8 : and (Par B L L K)\n (and (Par B C K X)\n (and (Par L C L X)\n (and (Cong B X K L)\n (and (Cong L X K L)\n (and (Cong B L K X)\n (and (Cong C L K X)\n (and (Cong L K L X) (Cong C K L X))))))))
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong X L K L
+++++
spliter.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
assert (Par B L L K /\\ Par B C K X /\\ Par L C L X /\\ Cong B X K L /\\ Cong L X K L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong L K L X /\\ Cong C K L X).
spliter.

*****
H19 : Cong C K L X
H18 : Cong L K L X
H17 : Cong C L K X
H16 : Cong B L K X
H15 : Cong L X K L
H14 : Cong B X K L
H13 : Par L C L X
H12 : Par B C K X
H8 : Par B L L K
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong X L K L
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col X L K) (and (Col X L L) (and (Cong X L K L) (and (Cong X L K L) (or (not (eq X K)) (not (eq L L))))))
+++++
repeat split.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col X L K
+++++
show_distinct L X.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.
show_distinct L X.

*****
H : or (not (eq B B)) (not (eq B B))
H0 : Midpoint B B B
H4 : not (eq B B)
B : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.
show_distinct L X.

*****
H12 : not (eq L X)
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col X L K
+++++
assert_diffs.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.
show_distinct L X.
assert_diffs.

*****
H18 : not (eq B C)
H16 : not (eq B X)
H15 : not (eq C L)
H14 : not (eq K C)
H13 : not (eq K L)
H12 : not (eq L X)
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col X L K
+++++
ColR.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col X L L
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong X L K L
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong X L K L
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq X K)) (not (eq L L))
+++++
left.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
treat_equalities.
induction (eq_dec_points X K).
assert_cols.
assert (Cong X L K L).
repeat split.
left.

*****
H8 : Cong X L K L
H7 : Col X L B
H6 : Col L B C
H5 : Col K C L
H3 : not (eq X K)
H4 : not (eq L B)
H11 : Cong B X X L
H10 : Cong C L L B
H2 : Midpoint K C L
H9 : Cong L K K C
H1 : Midpoint L B C
H : or (not (eq L C)) (not (eq B L))
H0 : Midpoint X L B
B,C,K,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq X K)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).

*****
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
induction (eq_dec_points B D).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).

*****
H7 : eq B D
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
treat_equalities.

*****
H : or (not (eq C C)) (not (eq X X))
H4 : not (eq C X)
H2 : Midpoint I C X
H11 : Cong X I I C
C,I,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I I I) (and (Col I I I) (and (Cong I I I I) (and (Cong I I I I) (or (not (eq I I)) (not (eq I I))))))
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
assert (Midpoint L I K).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
assert (Par A B L X /\ Par A D X I /\ Par B D L I /\ Cong A I X L /\ Cong B I X L /\ Cong A L X I /\ Cong D L X I /\ Cong B X L I /\ Cong D X L I).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A B L X) (and (Par A D X I) (and (Par B D L I) (and (Cong A I X L) (and (Cong B I X L) (and (Cong A L X I) (and (Cong D L X I) (and (Cong B X L I) (Cong D X L I))))))))
+++++
apply (triangle_mid_par_cong A B D X L I).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B A)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D A)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L A D
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
apply (triangle_mid_par_cong A B D X L I).

*****
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A B
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).

*****
H12 : and (Par A B L X)\n (and (Par A D X I)\n (and (Par B D L I)\n (and (Cong A I X L)\n (and (Cong B I X L)\n (and (Cong A L X I)\n (and (Cong D L X I)\n (and (Cong B X L I) (Cong D X L I))))))))
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
spliter.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.

*****
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
induction (eq_dec_points C D).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).

*****
H21 : eq C D
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
treat_equalities.

*****
H6 : not (eq I K)
H4 : not (eq I I)
H14 : Par I K X I
H12 : Par I I X X
H : or (not (eq I K)) (not (eq I K))
H3 : Midpoint X I K
H8 : Cong K X X I
I,K,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X I K
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).

*****
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
assert_diffs.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.

*****
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
induction (eq_dec_points B C).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).

*****
H33 : eq B C
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
treat_equalities.

*****
H31 : not (eq I A)
H27 : not (eq X I)
H22 : not (eq L I)
H23 : not (eq X L)
H24 : not (eq X D)
H20 : Cong D X L I
H19 : Cong L X L I
H18 : Cong D L X I
H17 : Cong A L X I
H15 : Cong A I X L
H14 : Par L D L I
H13 : Par A D X I
H7 : not (eq L D)
H12 : Par A L L X
H6 : not (eq A D)
H4 : not (eq A L)
H9 : Cong D X X L
H11 : Cong L I I A
H8 : Cong D L L A
H3 : Midpoint L A D
H : or (not (eq A L)) (not (eq L D))
H0 : Midpoint I A L
H2 : Midpoint X L D
A,D,I,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I X
+++++
assert_cols.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
treat_equalities.
assert_cols.

*****
H21 : Col L A X
H16 : Col L D I
H10 : Col X L D
H5 : Col I A L
H1 : Col L A D
H31 : not (eq I A)
H27 : not (eq X I)
H22 : not (eq L I)
H23 : not (eq X L)
H24 : not (eq X D)
H20 : Cong D X L I
H19 : Cong L X L I
H18 : Cong D L X I
H17 : Cong A L X I
H15 : Cong A I X L
H14 : Par L D L I
H13 : Par A D X I
H7 : not (eq L D)
H12 : Par A L L X
H6 : not (eq A D)
H4 : not (eq A L)
H9 : Cong D X X L
H11 : Cong L I I A
H8 : Cong D L L A
H3 : Midpoint L A D
H : or (not (eq A L)) (not (eq L D))
H0 : Midpoint I A L
H2 : Midpoint X L D
A,D,I,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I X
+++++
apply cong_col_mid.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
treat_equalities.
assert_cols.
apply cong_col_mid.

*****
H21 : Col L A X
H16 : Col L D I
H10 : Col X L D
H5 : Col I A L
H1 : Col L A D
H31 : not (eq I A)
H27 : not (eq X I)
H22 : not (eq L I)
H23 : not (eq X L)
H24 : not (eq X D)
H20 : Cong D X L I
H19 : Cong L X L I
H18 : Cong D L X I
H17 : Cong A L X I
H15 : Cong A I X L
H14 : Par L D L I
H13 : Par A D X I
H7 : not (eq L D)
H12 : Par A L L X
H6 : not (eq A D)
H4 : not (eq A L)
H9 : Cong D X X L
H11 : Cong L I I A
H8 : Cong D L L A
H3 : Midpoint L A D
H : or (not (eq A L)) (not (eq L D))
H0 : Midpoint I A L
H2 : Midpoint X L D
A,D,I,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I X)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
treat_equalities.
assert_cols.
apply cong_col_mid.

*****
H21 : Col L A X
H16 : Col L D I
H10 : Col X L D
H5 : Col I A L
H1 : Col L A D
H31 : not (eq I A)
H27 : not (eq X I)
H22 : not (eq L I)
H23 : not (eq X L)
H24 : not (eq X D)
H20 : Cong D X L I
H19 : Cong L X L I
H18 : Cong D L X I
H17 : Cong A L X I
H15 : Cong A I X L
H14 : Par L D L I
H13 : Par A D X I
H7 : not (eq L D)
H12 : Par A L L X
H6 : not (eq A D)
H4 : not (eq A L)
H9 : Cong D X X L
H11 : Cong L I I A
H8 : Cong D L L A
H3 : Midpoint L A D
H : or (not (eq A L)) (not (eq L D))
H0 : Midpoint I A L
H2 : Midpoint X L D
A,D,I,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I L X
+++++
ColR.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
treat_equalities.
assert_cols.
apply cong_col_mid.

*****
H21 : Col L A X
H16 : Col L D I
H10 : Col X L D
H5 : Col I A L
H1 : Col L A D
H31 : not (eq I A)
H27 : not (eq X I)
H22 : not (eq L I)
H23 : not (eq X L)
H24 : not (eq X D)
H20 : Cong D X L I
H19 : Cong L X L I
H18 : Cong D L X I
H17 : Cong A L X I
H15 : Cong A I X L
H14 : Par L D L I
H13 : Par A D X I
H7 : not (eq L D)
H12 : Par A L L X
H6 : not (eq A D)
H4 : not (eq A L)
H9 : Cong D X X L
H11 : Cong L I I A
H8 : Cong D L L A
H3 : Midpoint L A D
H : or (not (eq A L)) (not (eq L D))
H0 : Midpoint I A L
H2 : Midpoint X L D
A,D,I,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L L X
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
assert (Par B C X K /\ Par B D K L /\ Par C D X L /\ Cong B L K X /\ Cong C L K X /\ Cong B X K L /\ Cong D X K L /\ Cong C K X L /\ Cong D K X L).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par B C X K) (and (Par B D K L) (and (Par C D X L) (and (Cong B L K X) (and (Cong C L K X) (and (Cong B X K L) (and (Cong D X K L) (and (Cong C K X L) (Cong D K X L))))))))
+++++
apply (triangle_mid_par_cong B C D K X L).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq C B)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D B)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq D C)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K C D
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X B D
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
apply (triangle_mid_par_cong B C D K X L).

*****
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L B C
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).

*****
H34 : and (Par B C X K)\n (and (Par B D K L)\n (and (Par C D X L)\n (and (Cong B L K X)\n (and (Cong C L K X)\n (and (Cong B X K L)\n (and (Cong D X K L)\n (and (Cong C K X L) (Cong D K X L))))))))
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
spliter.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.

*****
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
induction (eq_dec_points I K).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).

*****
H43 : eq I K
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.

*****
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I I
+++++
assert (Parallelogram A D B C).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).

*****
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram A D B C
+++++
apply mid_plg with I.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
apply mid_plg with I.

*****
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq A B)) (not (eq D C))
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
apply mid_plg with I.

*****
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A B
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
apply mid_plg with I.

*****
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I D C
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I I
+++++
idtac.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I I
+++++
assert (Parallelogram A B D C).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram A B D C
+++++
apply mid_plg with L.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
apply mid_plg with L.

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq A D)) (not (eq B C))
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
apply mid_plg with L.

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L A D
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
apply mid_plg with L.

*****
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L B C
+++++
Midpoint.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).

*****
H40 : Parallelogram A B D C
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I I
+++++
idtac.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.

*****
H40 : Parallelogram A B D C
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I I
+++++
exfalso.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.

*****
H40 : Parallelogram A B D C
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply Plg_perm in H39.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.

*****
H40 : Parallelogram A B D C
H39 : and (Parallelogram A D B C)\n (and (Parallelogram D B C A)\n (and (Parallelogram B C A D)\n (and (Parallelogram C A D B)\n (and (Parallelogram A C B D)\n (and (Parallelogram C B D A)\n (and (Parallelogram B D A C) (Parallelogram D A C B)))))))
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply Plg_perm in H40.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.
apply Plg_perm in H40.

*****
H40 : and (Parallelogram A B D C)\n (and (Parallelogram B D C A)\n (and (Parallelogram D C A B)\n (and (Parallelogram C A B D)\n (and (Parallelogram A C D B)\n (and (Parallelogram C D B A)\n (and (Parallelogram D B A C) (Parallelogram B A C D)))))))
H39 : and (Parallelogram A D B C)\n (and (Parallelogram D B C A)\n (and (Parallelogram B C A D)\n (and (Parallelogram C A D B)\n (and (Parallelogram A C B D)\n (and (Parallelogram C B D A)\n (and (Parallelogram B D A C) (Parallelogram D A C B)))))))
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
spliter.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.
apply Plg_perm in H40.
spliter.

*****
H49 : Parallelogram B A C D
H48 : Parallelogram D B A C
H47 : Parallelogram C D B A
H46 : Parallelogram A C D B
H45 : Parallelogram C A B D
H44 : Parallelogram D C A B
H43 : Parallelogram B D C A
H40 : Parallelogram A B D C
H56 : Parallelogram D A C B
H55 : Parallelogram B D A C
H54 : Parallelogram C B D A
H53 : Parallelogram A C B D
H52 : Parallelogram C A D B
H51 : Parallelogram B C A D
H50 : Parallelogram D B C A
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
apply (plg_not_comm_1 B D A C).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.
apply Plg_perm in H40.
spliter.
apply (plg_not_comm_1 B D A C).

*****
H49 : Parallelogram B A C D
H48 : Parallelogram D B A C
H47 : Parallelogram C D B A
H46 : Parallelogram A C D B
H45 : Parallelogram C A B D
H44 : Parallelogram D C A B
H43 : Parallelogram B D C A
H40 : Parallelogram A B D C
H56 : Parallelogram D A C B
H55 : Parallelogram B D A C
H54 : Parallelogram C B D A
H53 : Parallelogram A C B D
H52 : Parallelogram C A D B
H51 : Parallelogram B C A D
H50 : Parallelogram D B C A
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq B D)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.
apply Plg_perm in H40.
spliter.
apply (plg_not_comm_1 B D A C).

*****
H49 : Parallelogram B A C D
H48 : Parallelogram D B A C
H47 : Parallelogram C D B A
H46 : Parallelogram A C D B
H45 : Parallelogram C A B D
H44 : Parallelogram D C A B
H43 : Parallelogram B D C A
H40 : Parallelogram A B D C
H56 : Parallelogram D A C B
H55 : Parallelogram B D A C
H54 : Parallelogram C B D A
H53 : Parallelogram A C B D
H52 : Parallelogram C A D B
H51 : Parallelogram B C A D
H50 : Parallelogram D B C A
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram B D A C
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
treat_equalities.
assert (Parallelogram A D B C).
idtac.
assert (Parallelogram A B D C).
idtac.
exfalso.
apply Plg_perm in H39.
apply Plg_perm in H40.
spliter.
apply (plg_not_comm_1 B D A C).

*****
H49 : Parallelogram B A C D
H48 : Parallelogram D B A C
H47 : Parallelogram C D B A
H46 : Parallelogram A C D B
H45 : Parallelogram C A B D
H44 : Parallelogram D C A B
H43 : Parallelogram B D C A
H40 : Parallelogram A B D C
H56 : Parallelogram D A C B
H55 : Parallelogram B D A C
H54 : Parallelogram C B D A
H53 : Parallelogram A C B D
H52 : Parallelogram C A D B
H51 : Parallelogram B C A D
H50 : Parallelogram D B C A
H39 : Parallelogram A D B C
H37 : Cong B L I X
H38 : Cong C L I X
H41 : Cong C I X L
H42 : Cong D I X L
H36 : Par C D X L
H34 : Par B C X I
H35 : Par B D I L
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H23 : not (eq I C)
H24 : not (eq I D)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D I I C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint I C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram B D C A
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L I K
+++++
apply cong_col_mid.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I K)
+++++
auto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I L K
+++++
assert (Par I L K L).
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.
assert (Par I L K L).

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L K L
+++++
apply par_trans with B D.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.
assert (Par I L K L).
apply par_trans with B D.

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par I L B D
+++++
Par.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.
assert (Par I L K L).
apply par_trans with B D.

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par B D K L
+++++
Par.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.
assert (Par I L K L).

*****
H44 : Par I L K L
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I L K
+++++
apply par_id_5.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.
assert (Par I L K L).
apply par_id_5.

*****
H44 : Par I L K L
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par L K L I
+++++
Par.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert (Par A B L X /\\ Par A D X I /\\ Par B D L I /\\ Cong A I X L /\\ Cong B I X L /\\ Cong A L X I /\\ Cong D L X I /\\ Cong B X L I /\\ Cong D X L I).
spliter.
induction (eq_dec_points C D).
assert_diffs.
induction (eq_dec_points B C).
assert (Par B C X K /\\ Par B D K L /\\ Par C D X L /\\ Cong B L K X /\\ Cong C L K X /\\ Cong B X K L /\\ Cong D X K L /\\ Cong C K X L /\\ Cong D K X L).
spliter.
induction (eq_dec_points I K).
apply cong_col_mid.

*****
H43 : not (eq I K)
H42 : Cong D K X L
H41 : Cong C K X L
H40 : Cong D X K L
H39 : Cong B X K L
H38 : Cong C L K X
H37 : Cong B L K X
H36 : Par C D X L
H35 : Par B D K L
H34 : Par B C X K
H33 : not (eq B C)
H30 : not (eq X L)
H32 : not (eq I B)
H31 : not (eq I A)
H27 : not (eq X I)
H29 : not (eq L D)
H28 : not (eq L A)
H22 : not (eq L I)
H26 : not (eq X D)
H25 : not (eq X B)
H24 : not (eq K D)
H23 : not (eq K C)
H21 : not (eq C D)
H20 : Cong D X L I
H19 : Cong B X L I
H18 : Cong D L X I
H17 : Cong A L X I
H16 : Cong B I X L
H15 : Cong A I X L
H14 : Par B D L I
H13 : Par A D X I
H12 : Par A B L X
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L L K
+++++
eCong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).

*****
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H11 : Cong B I I A
H10 : Cong C L L B
H9 : Cong D K K C
H8 : Cong D L L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
assert_congs_perm.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.

*****
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
assert_cols.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Col I L K) (and (Col I L L) (and (Cong I L K L) (and (Cong I L K L) (or (not (eq I K)) (not (eq L L))))))
+++++
repeat split.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I L K
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col I L L
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L K L
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L K L
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L K L
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Cong I L K L
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq L L))
+++++
Col.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq L L))
+++++
Cong.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.
Cong.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq I K)) (not (eq L L))
+++++
left.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.
Cong.
left.

*****
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq I K)
+++++
intro.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.
Cong.
left.
intro.

*****
H15 : eq I K
H14 : Col I A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L I K
H51 : Cong D X X B
H50 : Cong K L L I
H12 : Midpoint L I K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong I B I A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
subst.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.
Cong.
left.
intro.
subst.

*****
H14 : Col K A B
H13 : Col L B C
H11 : Col K C D
H10 : Col L A D
H9 : Col X B D
H8 : Col L K K
H51 : Cong D X X B
H12 : Midpoint L K K
H50 : Cong K L L K
H7 : not (eq B D)
H6 : not (eq A D)
H4 : not (eq A B)
H5 : Midpoint X B D
X : Tpoint
H20 : Cong K B K A
H27 : Cong L C L B
H34 : Cong K D K C
H41 : Cong L D L A
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint L B C
H0 : Midpoint K A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
treat_equalities.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
subst.
unfold Parallelogram.
right.
unfold Parallelogram_flat.
assert_congs_perm.
Name X the midpoint of B and D.
induction (eq_dec_points A B).
induction (eq_dec_points A D).
induction (eq_dec_points B D).
assert (Midpoint L I K).
assert_congs_perm.
assert_cols.
repeat split.
Col.
Cong.
left.
intro.
subst.
treat_equalities.

*****
H7 : not (eq X X)
H11 : Col L C X
H : or (not (eq C C)) (not (eq X X))
H0 : Midpoint L C X
H34 : Cong L X L C
H4 : not (eq C X)
C,L,X : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
intuition.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Parallelogram I J K L
+++++
eapply varignon_aux.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
or (not (eq ?A ?C)) (not (eq ?B ?D))
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq J L)
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint I A B
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint J B C
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint K C D
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).
eapply varignon_aux.

*****
H4 : not (eq J L)
H3 : Midpoint L A D
H2 : Midpoint K C D
H1 : Midpoint J B C
H0 : Midpoint I A B
H : or (not (eq A C)) (not (eq B D))
A,B,C,D,I,J,K,L : Tpoint
TE : Tarski_euclidean TnEQD
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint L A D
+++++
eauto.
-----
Lemma varignon' : forall A B C D I J K L, (A<>C \\/ B<>D) -> Midpoint I A B -> Midpoint J B C -> Midpoint K C D -> Midpoint L A D -> Parallelogram I J K L.
Proof.
intros.
induction (eq_dec_points J L).

*****

*****

+++++
Qed.
-----
End Varignon.
-----
