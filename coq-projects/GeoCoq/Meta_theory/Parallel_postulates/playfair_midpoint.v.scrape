Require Import GeoCoq.Axioms.parallel_postulates.
-----
Require Import GeoCoq.Tarski_dev.Ch13_1.
-----
Section playfair_midpoints.
-----
Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate :\n  playfair_s_postulate ->\n  midpoint_converse_postulate.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : playfair_s_postulate, midpoint_converse_postulate
+++++
Proof.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.

*****
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall _ : playfair_s_postulate, midpoint_converse_postulate
+++++
intros HP A.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.

*****
A : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
forall (B C P Q : Tpoint) (_ : not (Col A B C)) (_ : Midpoint P B C) (_ : Par A B Q P) (_ : Col A C Q), Midpoint Q A C
+++++
intros.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.

*****
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint Q A C
+++++
destruct (midpoint_existence A C) as [X HAC].
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint Q A C
+++++
assert (X = Q).
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq X Q
+++++
assert (Par_strict A B X P).
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B X P
+++++
apply triangle_mid_par with C.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
apply triangle_mid_par with C.

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A B C)
+++++
assumption.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
apply triangle_mid_par with C.

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint P B C
+++++
assumption.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
apply triangle_mid_par with C.

*****
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X A C
+++++
assumption.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).

*****
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq X Q
+++++
assert_diffs.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.

*****
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq X Q
+++++
assert_cols.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
eq X Q
+++++
apply l6_21 with A C P Q.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (Col A C P)
+++++
intro.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
intro.

*****
H15 : Col A C P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
assert (Col A B C).
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
intro.
assert (Col A B C).

*****
H15 : Col A C P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A B C
+++++
ColR.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
intro.
assert (Col A B C).

*****
H16 : Col A B C
H15 : Col A C P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
idtac.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
intro.
assert (Col A B C).
idtac.

*****
H16 : Col A B C
H15 : Col A C P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
False
+++++
contradiction.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
assert (Par A B Q P /\ A <> B /\ Q <> P).
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
assert (Par A B Q P /\\ A <> B /\\ Q <> P).

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
and (Par A B Q P) (and (not (eq A B)) (not (eq Q P)))
+++++
apply par_distincts.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
assert (Par A B Q P /\\ A <> B /\\ Q <> P).
apply par_distincts.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B Q P
+++++
finish.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
assert (Par A B Q P /\\ A <> B /\\ Q <> P).

*****
H15 : and (Par A B Q P) (and (not (eq A B)) (not (eq Q P)))
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
idtac.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
assert (Par A B Q P /\\ A <> B /\\ Q <> P).
idtac.

*****
H15 : and (Par A B Q P) (and (not (eq A B)) (not (eq Q P)))
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
spliter.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
assert (Par A B Q P /\\ A <> B /\\ Q <> P).
idtac.
spliter.

*****
H17 : not (eq Q P)
H16 : not (eq A B)
H15 : Par A B Q P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
not (eq P Q)
+++++
intuition.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C X
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col A C Q
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q X
+++++
destruct (HP A B Q P X P P) as [HCol1 HCol2].
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B Q P
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q P
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B X P
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].
Col.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par A B X P
+++++
apply par_strict_par.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].
Col.
apply par_strict_par.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Par_strict A B X P
+++++
Par.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P X P
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.
destruct (HP A B Q P X P P) as [HCol1 HCol2].

*****
HCol2 : Col P Q P
HCol1 : Col X Q P
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q X
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
assert (Par_strict A B X P).
assert_diffs.
assert_cols.
apply l6_21 with A C P Q.

*****
H14 : Col P B C
H13 : Col X A C
H12 : not (eq X P)
H4 : not (eq Q P)
H11 : not (eq P C)
H10 : not (eq P B)
H8 : not (eq X C)
H5 : not (eq X A)
H9 : not (eq A C)
H6 : not (eq B C)
H7 : not (eq A B)
H3 : Par_strict A B X P
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Col P Q Q
+++++
Col.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).

*****
H3 : eq X Q
HAC : Midpoint X A C
X : Tpoint
H2 : Col A C Q
H1 : Par A B Q P
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P,Q : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint Q A C
+++++
treat_equalities.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).
treat_equalities.

*****
HAC : Midpoint X A C
H1 : Par A B X P
H2 : Col A C X
X : Tpoint
H0 : Midpoint P B C
H : not (Col A B C)
A,B,C,P : Tpoint
HP : playfair_s_postulate
TnEQD : Tarski_neutral_dimensionless_with_decidable_point_equality Tn
Tn : Tarski_neutral_dimensionless
*****
Midpoint X A C
+++++
assumption.
-----
Lemma playfair_s_postulate_implies_midpoint_converse_postulate : playfair_s_postulate -> midpoint_converse_postulate.
Proof.
intros HP A.
intros.
destruct (midpoint_existence A C) as [X HAC].
assert (X = Q).

*****

*****

+++++
Qed.
-----
End playfair_midpoints.
-----
