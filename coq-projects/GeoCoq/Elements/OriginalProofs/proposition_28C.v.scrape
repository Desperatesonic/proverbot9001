Require Export GeoCoq.Elements.OriginalProofs.proposition_28B.
-----
Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearparallel.
-----
Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelsymmetric.
-----
Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.
-----
Section Euclid.
-----
Context `{Ax:euclidean_neutral_ruler_compass}.
-----
Lemma proposition_28C : \n   forall B D G H, \n   RT B G H G H D -> OS B D G H ->\n   Par G B H D.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.

*****
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
forall (B D G H : Point) (_ : RT B G H G H D) (_ : OS B D G H), Par G B H D
+++++
Proof.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.

*****
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
forall (B D G H : Point) (_ : RT B G H G H D) (_ : OS B D G H), Par G B H D
+++++
intros.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.

*****
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (nCol G H B) by (conclude_def OS ).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).

*****
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (nCol G H D) by (conclude_def OS ).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).

*****
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (neq H D) by (forward_using lemma_NCdistinct).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).

*****
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (neq D H) by (conclude lemma_inequalitysymmetric).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).

*****
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (neq G B) by (forward_using lemma_NCdistinct).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).

*****
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (neq B G) by (conclude lemma_inequalitysymmetric).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).

*****
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.

*****
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).

*****
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.

*****
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).

*****
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Par A B C D) by (conclude proposition_28B).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).

*****
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Col D H C) by (conclude_def Col ).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).

*****
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Col C D H) by (forward_using lemma_collinearorder).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).

*****
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (neq H D) by (forward_using lemma_NCdistinct).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).

*****
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Par A B H D) by (conclude lemma_collinearparallel).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).

*****
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).

*****
H19 : Par H D A B
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Col B G A) by (conclude_def Col ).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
assert (Col B G A) by (conclude_def Col ).

*****
H20 : Col B G A
H19 : Par H D A B
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Col A B G) by (forward_using lemma_collinearorder).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
assert (Col B G A) by (conclude_def Col ).
assert (Col A B G) by (forward_using lemma_collinearorder).

*****
H21 : Col A B G
H20 : Col B G A
H19 : Par H D A B
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Par H D G B) by (conclude lemma_collinearparallel).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
assert (Col B G A) by (conclude_def Col ).
assert (Col A B G) by (forward_using lemma_collinearorder).
assert (Par H D G B) by (conclude lemma_collinearparallel).

*****
H22 : Par H D G B
H21 : Col A B G
H20 : Col B G A
H19 : Par H D A B
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
assert (Par G B H D) by (conclude lemma_parallelsymmetric).
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
assert (Col B G A) by (conclude_def Col ).
assert (Col A B G) by (forward_using lemma_collinearorder).
assert (Par H D G B) by (conclude lemma_collinearparallel).
assert (Par G B H D) by (conclude lemma_parallelsymmetric).

*****
H23 : Par G B H D
H22 : Par H D G B
H21 : Col A B G
H20 : Col B G A
H19 : Par H D A B
H18 : Par A B H D
H17 : neq H D
H16 : Col C D H
H15 : Col D H C
H14 : Par A B C D
H13 : BetS C H D
H12 : Cong H C H D
H11 : BetS D H C
C : Point
H10 : BetS A G B
H9 : Cong G A G B
H8 : BetS B G A
A : Point
H7 : neq B G
H6 : neq G B
H5 : neq D H
H4 : neq H D
H3 : nCol G H D
H2 : nCol G H B
H1 : OS B D G H
H0 : RT B G H G H D
B,D,G,H : Point
Ax : euclidean_neutral_ruler_compass Ax0
Ax0 : euclidean_neutral
*****
Par G B H D
+++++
close.
-----
Lemma proposition_28C : forall B D G H, RT B G H G H D -> OS B D G H -> Par G B H D.
Proof.
intros.
assert (nCol G H B) by (conclude_def OS ).
assert (nCol G H D) by (conclude_def OS ).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (neq D H) by (conclude lemma_inequalitysymmetric).
assert (neq G B) by (forward_using lemma_NCdistinct).
assert (neq B G) by (conclude lemma_inequalitysymmetric).
let Tf:=fresh in assert (Tf:exists A, (BetS B G A /\\ Cong G A G B)) by (conclude lemma_extension);destruct Tf as [A];spliter.
assert (BetS A G B) by (conclude axiom_betweennesssymmetry).
let Tf:=fresh in assert (Tf:exists C, (BetS D H C /\\ Cong H C H D)) by (conclude lemma_extension);destruct Tf as [C];spliter.
assert (BetS C H D) by (conclude axiom_betweennesssymmetry).
assert (Par A B C D) by (conclude proposition_28B).
assert (Col D H C) by (conclude_def Col ).
assert (Col C D H) by (forward_using lemma_collinearorder).
assert (neq H D) by (forward_using lemma_NCdistinct).
assert (Par A B H D) by (conclude lemma_collinearparallel).
assert (Par H D A B) by (conclude lemma_parallelsymmetric).
assert (Col B G A) by (conclude_def Col ).
assert (Col A B G) by (forward_using lemma_collinearorder).
assert (Par H D G B) by (conclude lemma_collinearparallel).
assert (Par G B H D) by (conclude lemma_parallelsymmetric).
close.

*****

*****

+++++
Qed.
-----
End Euclid.
-----
